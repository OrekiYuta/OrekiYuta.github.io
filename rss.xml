<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Canoe</title>
  
  <subtitle>「ろくでなし」</subtitle>
  <link href="/rss.xml" rel="self"/>
  
  <link href="http://www.orekiyuta.cn/"/>
  <updated>2020-06-11T13:54:32.669Z</updated>
  <id>http://www.orekiyuta.cn/</id>
  
  <author>
    <name>Orekiyuta</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Head First Java / After reading</title>
    <link href="http://www.orekiyuta.cn/archives/HeadFirstJava/"/>
    <id>http://www.orekiyuta.cn/archives/HeadFirstJava/</id>
    <published>2020-06-06T16:08:00.000Z</published>
    <updated>2020-06-11T13:54:32.669Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Dog-d-new-Dog"><a href="#Dog-d-new-Dog" class="headerlink" title="Dog d =new Dog();"></a>Dog d =new Dog();</h2><ul><li>在 d 中保存的是存取Dog()对象的方法，存储了指向Dog()对象的地址，存储了引用Dog对象的值。<br>对象并没有放进变量中。</li></ul><p><img src="/images/HeadFirstJava/01.png" alt><br><a id="more"></a></p><h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><ul><li><p>is a 单方向判断</p></li><li><p>可以用 子类 is a 父类，来判断是否符合继承关系</p></li><li><p>super.xx(); 调用父类的方法</p></li></ul><p><img src="/images/HeadFirstJava/06.png" alt> </p><ul><li>JVM从最后的子类开始读取方法，层层向上读取</li></ul><h2 id="存取权限"><a href="#存取权限" class="headerlink" title="存取权限"></a>存取权限</h2><ul><li><p>private &lt; default &lt; protected &lt; public</p></li><li><p>public 的成员会被继承；private 的成员不会被继承</p></li><li><p>继承下来的方法可以被覆盖，但是成员变量无法被覆盖</p></li></ul><h2 id="抽象与接口"><a href="#抽象与接口" class="headerlink" title="抽象与接口"></a>抽象与接口</h2><ul><li><p>抽象类必须要被继承，抽象方法必须要被覆盖</p></li><li><p>如果声明出抽象方法，那必须将类也标记为抽象</p></li><li><p>有抽象方法的类一定是抽象类</p></li><li><p>抽象方法必须被其中的子类，或最后的子类实现</p></li><li><p>ArrayList 用到的是 Object 类型 ，所以ArrayList通用</p></li><li><p>ArrayList<int> 是限制它的类型，这样 ArrayList只能保存int类型对象</int></p></li><li><p>没有直接继承过其他类的类是隐含的继承对象。所有类都继承于 Object 类</p></li></ul><p><img src="/images/HeadFirstJava/04.png" alt> </p><ul><li>Object 类主要目的：（1）作为多态让方法可以应对多种类型的机制 （2）提供Java在执行期的所有对象都有需要的基础方法</li></ul><p><img src="/images/HeadFirstJava/02.png" alt> </p><ul><li>编译器只管引用的类型，而不管对象的类型；Animal a =new Dog(); 只根据引用类型 Animal 来判断有哪些方法可以调用</li></ul><p><img src="/images/HeadFirstJava/03.png" alt> </p><p><img src="/images/HeadFirstJava/05.png" alt> </p><h2 id="堆栈与对象"><a href="#堆栈与对象" class="headerlink" title="堆栈与对象"></a>堆栈与对象</h2><ul><li><p>JVM启动，从底层操作系统取得一块内存；在此内存执行Java程序</p></li><li><p>在这内存中有两种区域：（1）对象的生存空间堆 （2）方法调用和变量的生存空间栈</p></li></ul><p><img src="/images/HeadFirstJava/07.png" alt> </p><ul><li>变量在哪个空间要看它属于哪种变量：（1）实例变量（2）局部变量[栈变量]</li></ul><p><img src="/images/HeadFirstJava/08.png" alt> </p><ul><li>调用方法压栈</li></ul><p><img src="/images/HeadFirstJava/09.png" alt> </p><ul><li>局部变量在所属的方法中，所以在栈上；对象始终都是在堆上的</li></ul><p><img src="/images/HeadFirstJava/10.png" alt> </p><ul><li>实例变量在所属的对象里面，所以在堆上</li></ul><p><img src="/images/HeadFirstJava/11.png" alt> </p><ul><li><p>如果实例变量是个对像的引用，则引用和对象也都是在堆上</p></li><li><p>实例变量默认值：0/0.0/false,引用默认值 null</p></li></ul><h2 id="构造函数链"><a href="#构造函数链" class="headerlink" title="构造函数链"></a>构造函数链</h2><p><img src="/images/HeadFirstJava/12.png" alt> </p><ul><li>创建子类对象时，父类对象的构造函数也会被层层执行</li></ul><p><img src="/images/HeadFirstJava/13.png" alt> </p><ul><li>执行方法，先压栈，压栈完毕后才逐个从栈顶开始执行</li></ul><p><img src="/images/HeadFirstJava/14.png" alt> </p><ul><li>调用父类构造函数的方法 super()</li></ul><p><img src="/images/HeadFirstJava/15.png" alt> </p><ul><li>对 super() 的调用必须是构造函数的第一个语句</li></ul><p><img src="/images/HeadFirstJava/16.png" alt> </p><ul><li>给父类构造函数传参 super(xxx)</li></ul><p><img src="/images/HeadFirstJava/17.png" alt> </p><ul><li>从一个构造函数中调用另外一个构造函数 this()</li></ul><p><img src="/images/HeadFirstJava/18.png" alt> </p><h2 id="对象与垃圾回收器"><a href="#对象与垃圾回收器" class="headerlink" title="对象与垃圾回收器"></a>对象与垃圾回收器</h2><ul><li>对象的生命周期取决于引用它的变量的生命周期</li></ul><p><img src="/images/HeadFirstJava/19.png" alt> </p><p><img src="/images/HeadFirstJava/20.png" alt> </p><ul><li><p>对象被垃圾收集器回收</p><p>  （1）对象所处的方法执行完毕，方法弹出栈，因此里面的对象引用也消亡，所以对象没了引用，等待回收</p><p>  <img src="/images/HeadFirstJava/21.png" alt> </p><p>  （2）对象引用被赋予新的对象，旧的对象失去了引用，等待回收</p><p>  <img src="/images/HeadFirstJava/22.png" alt> </p><p>  （3）对象引用被赋予null,旧的对象同样失去了引用，等待回收</p></li></ul><p><img src="/images/HeadFirstJava/23.png" alt> </p><h2 id="静态"><a href="#静态" class="headerlink" title="静态"></a>静态</h2><ul><li><p>静态方法内没有变量，不依靠变量做出行为；可以直接通过类型方法调用</p></li><li><p>非静态方法需要先实例化，再依靠引用变量来调用</p></li></ul><p><img src="/images/HeadFirstJava/24.png" alt> </p><p><img src="/images/HeadFirstJava/25.png" alt> </p><ul><li>静态方法内无法调用非静态变量</li></ul><p><img src="/images/HeadFirstJava/26.png" alt> </p><ul><li>静态方法内无法调用非静态方法</li></ul><p><img src="/images/HeadFirstJava/27.png" alt> </p><ul><li>静态变量只会再第一次载入时进行初始化，并被同一个类的所有实例共享</li></ul><p><img src="/images/HeadFirstJava/28.png" alt> </p><ul><li><p>实例变量：每个实例共享一个</p></li><li><p>静态变量：每个类共享一个</p></li><li><p>静态变量在所属的类的对象创建之前就完成初始化</p></li></ul><p><img src="/images/HeadFirstJava/29.png" alt> </p><ul><li>同时标记静态 static 和 final 的变量是常数，一般命名都是全大写字母</li></ul><p><img src="/images/HeadFirstJava/30.png" alt> </p><ul><li>final 可以用来固定值不变，方法不能被覆盖，类不能被继承</li></ul><p><img src="/images/HeadFirstJava/31.png" alt> </p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Dog-d-new-Dog&quot;&gt;&lt;a href=&quot;#Dog-d-new-Dog&quot; class=&quot;headerlink&quot; title=&quot;Dog d =new Dog();&quot;&gt;&lt;/a&gt;Dog d =new Dog();&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;在 d 中保存的是存取Dog()对象的方法，存储了指向Dog()对象的地址，存储了引用Dog对象的值。&lt;br&gt;对象并没有放进变量中。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/images/HeadFirstJava/01.png&quot; alt&gt;&lt;br&gt;
    
    </summary>
    
    
    
      <category term="Java" scheme="http://www.orekiyuta.cn/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>How Program Works / After reading</title>
    <link href="http://www.orekiyuta.cn/archives/HowProgramWorks/"/>
    <id>http://www.orekiyuta.cn/archives/HowProgramWorks/</id>
    <published>2020-06-05T13:02:26.000Z</published>
    <updated>2020-06-17T14:43:56.118Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CPU"><a href="#CPU" class="headerlink" title="CPU"></a>CPU</h2><ul><li>CPU(Central Processing Unit)[寄存器、控制器、运算器、时钟]</li></ul><p><img src="/images/HowProgramWorks/01.png" alt> </p><ul><li><p>寄存器：暂存指令、数据</p></li><li><p>控制器：把内存上的指令、数据读入寄存器，并根据结果控制计算机</p></li><li><p>运算器：运算从内存读入寄存器的数据</p></li><li><p>时钟：发起计时</p></li><li><p>程序运行的过程:程序启动后,时钟开始计时,控制器从内存中读取指令和数据,运算器计算数据,控制器根据结果控制计算器</p><a id="more"></a><p><img src="/images/HowProgramWorks/02.png" alt> </p></li><li><p>程序把寄存器作为对象来描述</p></li><li>汇编：将汇编语言转成机器语言;反汇编则反之</li><li>数据分为“用于运算的数据”和“表示内存地址的数据”</li><li>累加寄存器存放“用于运算的数据”</li><li>基址寄存器、变址寄存器存放“表示内存地址的数据”</li></ul><p><img src="/images/HowProgramWorks/03.png" alt> </p><ul><li>程序计数器、累加寄存器、标志寄存器、指令寄存器和栈寄存器都只有一个，其他寄存器一般有多个</li><li>CPU是寄存器的集合体</li></ul><p><img src="/images/HowProgramWorks/04.png" alt> </p><ul><li>程序的流程由标志寄存器控制，标志寄存器保存当前流程执行的结果，然后选择路径（跳转指令）</li></ul><p><img src="/images/HowProgramWorks/05.png" alt> </p><p><img src="/images/HowProgramWorks/06.png" alt> </p><p><img src="/images/HowProgramWorks/07.png" alt> </p><ul><li>函数调用（call指令）；return指令讲先前保存到栈中的地址设定到程序计数器中（这样函数就能返回开始调用时的位置）</li></ul><p><img src="/images/HowProgramWorks/08.png" alt> </p><ul><li>通过基址寄存器和变址寄存器来划分内存上的特定区域</li></ul><p><img src="/images/HowProgramWorks/09.png" alt> </p><ul><li>机器语言指令主要类型:数据传送、运算、跳转、call/return</li></ul><h2 id="二进制表示数据"><a href="#二进制表示数据" class="headerlink" title="二进制表示数据"></a>二进制表示数据</h2><ul><li>8位=1字节</li><li>集成电路（IC）所有引脚，只有直流电压0V或5V两个状态；所以IC一个引脚只能表示两个状态，决定了计算机数据只能采用二进制01来处理。</li><li>最小单位（bit）相当于二进制中的一位；bit（binary digit）</li></ul><p><img src="/images/HowProgramWorks/10.png" alt> </p><ul><li>二进制的位数一般是8的倍数，8位二进制数=1个字节</li><li>字节是最基本的信息计量单位，位是最小单位，字节是基本单位</li><li>内存和磁盘都使用字节单位来存储和读写数据，使用位单位则无法读写数据。因此，字节是信息的基本单位</li><li>二进制 → 十进制</li></ul><p><img src="/images/HowProgramWorks/11.png" alt> </p><ul><li>移位运算：&lt;&lt; 左移低位补0 ；</li></ul><p><img src="/images/HowProgramWorks/12.png" alt> </p><ul><li>移位操作使最高位或最低位溢出的数字，直接丢弃</li></ul><p><img src="/images/HowProgramWorks/13.png" alt> </p><ul><li>移位运算：&gt;&gt; 右移（逻辑、算数）[右移要区分逻辑位移和算术位移]</li><li>二进制表示负数：最高位为符号位；0正1负</li><li>1 二进制为 00000001 ；-1 二进制为 1111111</li><li>表示负数要用“二进制的补数”，补数：用正数来表示负数[比如：1-1 可以换种形式 1+（-1）]</li><li>获得补数：将二进制数位的数值全部取反，再加1</li></ul><p><img src="/images/HowProgramWorks/14.png" alt> </p><ul><li>溢出的位，计算机直接忽略掉</li></ul><p><img src="/images/HowProgramWorks/15.png" alt> </p><p><img src="/images/HowProgramWorks/16.png" alt> </p><ul><li>0 划分为正数 ，所以负数要比正数多一个；各种数据类型都是负数多一个(比如 short -32768~32767)</li><li>逻辑右移：当二进制数的值表示图形模式的时候，移位后需要在最高位补0</li><li>算数右移：当二进制数作为带符号的数值进行运算的时候，移位后要在最高位填充移位前符号位的值（0或1）</li></ul><p><img src="/images/HowProgramWorks/17.png" alt></p><ul><li>符号扩充：保持值不变的前提下将其转换成 16 位和 32 位的二进制数</li></ul><p><img src="/images/HowProgramWorks/18.png" alt></p><ul><li>非：0变1，1变9，取反</li><li>与：两个都为1，结果为1，其他情况为0</li><li>或：只要有1，结果就为1</li><li>异或：两个数不同，结果为1，其他0</li><li>0 false ; 1 true</li></ul><h2 id="小数运算出错的原因"><a href="#小数运算出错的原因" class="headerlink" title="小数运算出错的原因"></a>小数运算出错的原因</h2><ul><li>0.1累加100次不等于10，结果为10.000002</li><li>原因是有一些十进制的小数无法转换成二进制数（和0.3333···的三倍无法得出1是一个道理）</li><li>原因：（1）采用浮点数来处理小数；（2）位溢出</li></ul><p><img src="/images/HowProgramWorks/19.png" alt></p><ul><li>计算机无法直接处理循环小数</li><li>双精度浮点数类型64位，单精度浮点数类型用32位</li></ul><p><img src="/images/HowProgramWorks/20.png" alt></p><ul><li>回避策略：（1）无视，微小误差可以忽略；（2）把小数转成整数计算 </li></ul><h2 id="内存"><a href="#内存" class="headerlink" title="内存"></a>内存</h2><ul><li>内存是 名为 内存集成电路 的电子元件</li></ul><p><img src="/images/HowProgramWorks/21.png" alt></p><ul><li>1K = 1024</li><li>+5V直流电压表示1，0V表示0</li><li>D0~D7共八个，表示一次可以输入输出8位（1字节）数据</li><li>A0~A9共十个，表示可以指定0000000000～1111111111（1024）地址</li><li>可以得出这个内存集成电路（IC）可以存储1024个1字节的数据，所以该内存IC的容量为1KB</li><li>现实中我们的内存IC会有更多的信号引脚，这样就能在一个内存IC中存储更多数据</li><li>内存IC的物理读写机制</li></ul><p><img src="/images/HowProgramWorks/22.png" alt></p><ul><li>内存逻辑模型</li></ul><p><img src="/images/HowProgramWorks/23.png" alt></p><ul><li>变量占用内存大小</li></ul><p><img src="/images/HowProgramWorks/24.png" alt></p><ul><li>指针</li></ul><p><img src="/images/HowProgramWorks/25.png" alt></p><ul><li>数组占用内存大小</li></ul><p><img src="/images/HowProgramWorks/26.png" alt></p><h2 id="磁盘"><a href="#磁盘" class="headerlink" title="磁盘"></a>磁盘</h2><ul><li>存储程序方式：程序保存在存储设备（磁盘、内存）中，通过有序地被读取出来实现运行</li></ul><p><img src="/images/HowProgramWorks/27.png" alt></p><ul><li>磁盘缓存，把已经在磁盘读取过的数据保存到内存，下次读取同样的数据就会从内存读取</li></ul><p><img src="/images/HowProgramWorks/28.png" alt></p><ul><li>把低素设备的数据保存在高速设备中，需要时可以直接从告诉设备中读取</li><li>Web浏览器也用到了此缓存方式，把从网络获取的数据暂时保存在磁盘中，需要时再读取</li><li>磁盘缓存：把内存的一部分当作磁盘使用（实际用的是内存）</li><li>虚拟内存：把磁盘的一部分当作内存使用（实际用的是磁盘）</li><li>CPU只能执行加载到内存中的程序</li><li>虚拟内存虽说把磁盘当内存使用，但是实际正在运行的程序，这个时间点是必须存在于内存中的</li><li>所以为了实现虚拟内存，需要把 磁盘的虚拟内存里的内容 与 实际内存里的内容 进行置换</li><li>虚拟内存的方法：（1）分页式[Windows]（2）分段式</li><li>分页式，把运行的程序按照一定大小的页(windows一般情况为 4KB )进行分割；以页为单位再磁盘和内存中置换，从磁盘读入内存（Page In）,反之（Page Out）</li></ul><p><img src="/images/HowProgramWorks/29.png" alt></p><ul><li>虚拟内存可以避免因内存不足导致的应用无法启动问题，从根本上解决还是要增加内存容量</li><li>exe (executable)可执行，DLL （Dynamic Link Library）动态链接库</li></ul><h2 id="压缩数据"><a href="#压缩数据" class="headerlink" title="压缩数据"></a>压缩数据</h2><ul><li>文件是字节数据的集合，在任何情况下，文件的字节数据都是连续的</li></ul><p><img src="/images/HowProgramWorks/30.png" alt></p><ul><li>RLE算法（Run Length Encoding） [ 数据 X 重复次数 ]</li></ul><p><img src="/images/HowProgramWorks/31.png" alt></p><ul><li>哈夫曼算法 “出现频率高的字符用尽量少的位数编码来表示”</li><li>能够还原到压缩前状态的压缩成为可逆压缩，反之，非可逆压缩</li></ul><p><img src="/images/HowProgramWorks/32.png" alt></p><h2 id="运行环境"><a href="#运行环境" class="headerlink" title="运行环境"></a>运行环境</h2><ul><li>运行环境 = 操作系统 + 硬件</li><li>CPU只能解释其自身固有的机器语言</li><li>不同的CPU能解释的机器语言的种类不同，例如：x86、MIPS、SPARC、PowerPC</li><li>转换成 机器语言的程序 称为 本地代码</li><li>文本文件（源代码）在任何环境都能显示和编辑</li><li>源代码 → 编译 → 本地代码（本机CPU可解释的机器语言）</li></ul><p><img src="/images/HowProgramWorks/33.png" alt></p><ul><li>MS-DOS（Microsoft Disk Operating System） → Windows</li><li>Windows 克服了大多数的硬件差异问题</li></ul><p><img src="/images/HowProgramWorks/34.png" alt></p><p><img src="/images/HowProgramWorks/35.png" alt></p><ul><li><p>应用软件必须根据操作系统类型来开发，因为操作系统类型不同，应用程序向操作系统传递指令的途径（API [Application Programming interface]）不同</p></li><li><p>移植：根据不同的运行环境来重新调整程序</p></li><li>Java → 编译 → 字节码 → 运行 → Java虚拟机 → 转换 → 本地代码</li></ul><p><img src="/images/HowProgramWorks/36.png" alt></p><ul><li>从操作系统方面来看，Java虚拟机是一个应用</li><li>从Java应用方面来看，Java虚拟机是运行环境</li><li>不同的Java虚拟机之间无法完整互换</li><li>Java程序运行速度慢，因为Java虚拟机每次运行都需要把字节码转换成本地代码</li><li>BIOS (Basic Input/Output System) , 启动 “引导程序”</li><li>引导程序 把在硬盘等记录的操作系统加载到内存中运行</li></ul><h2 id="编译过程"><a href="#编译过程" class="headerlink" title="编译过程"></a>编译过程</h2><p><img src="/images/HowProgramWorks/37.png" alt></p><ul><li>Windows中exe文件的程序内容，使用的就是本地代码</li></ul><p><img src="/images/HowProgramWorks/38.png" alt></p><ul><li>Dump：把文件的内容，每个字节用2位十六进制数来表示</li></ul><p><img src="/images/HowProgramWorks/39.png" alt></p><ul><li>编译器：将高级语言写的源代码转换成本地代码的程序</li><li>每个高级语言都有它专用的编译器，C语言 —— C编译器</li><li>CPU类型不同，本地代码的类型也不同；因此，编译器和 编程语言种类、CPU类型相关</li><li>例如：Pentium等x86系统CPU用的C编译器，和PowerPC的CPU用的C编译器是不同的</li></ul><p><img src="/images/HowProgramWorks/40.png" alt></p><ul><li>交叉编译器：生成和运行环境中的CPU不同的CPU所使用的本地代码；也就是说可以生成不同于本机CPU类型的本地代码</li></ul><p><img src="/images/HowProgramWorks/41.png" alt></p><ul><li>本地代码是无法直接运行的，需要得到可运行的exe文件，所以编译后还需要进行“链接”处理</li><li>把多个目标文件（.obj）结合，生成1个exe文件的处理就是链接</li><li>运行链接的程序 就称为 链接器</li><li>库文件:把多个目标文件集成到一个文件</li></ul><p><img src="/images/HowProgramWorks/42.png" alt></p><ul><li>内存泄漏：如果没有在程序中释放堆的内存空间，该内存空间会一直残留</li><li><p>内存泄漏如果一直存在，就有可能会造成内存不足从而导致宕机</p></li><li><p>编译器：在运行前对源代码进行解释处理</p></li><li>解释器：在运行时对源代码内容一行一行的进行解释处理</li><li>分割编译：将整个程序分成多个源代码来编写，然后分别进行编译，最后链接成一个exe文件</li></ul><h2 id="操作系统与应用"><a href="#操作系统与应用" class="headerlink" title="操作系统与应用"></a>操作系统与应用</h2><ul><li>仅具有加载和运行功能的监控程序，是操作系统的原型</li></ul><p><img src="/images/HowProgramWorks/43.png" alt></p><ul><li>随着时代发展，渐渐的把同样处理的程序集成到监控程序中</li></ul><p><img src="/images/HowProgramWorks/44.png" alt></p><ul><li>操作系统可以说是多个程序的集合体 </li></ul><p><img src="/images/HowProgramWorks/45.png" alt></p><ul><li>各种应用只是在利用操作系统的功能而已</li><li>在操作系统诞生后，就不需要再编写直接控制硬件的程序了</li><li>这样制作软件应用逐渐与硬件分离，也就解耦了；无需再考虑硬件问题，硬件问题交给操作系统去处理</li></ul><p><img src="/images/HowProgramWorks/46.png" alt></p><ul><li>高级语言不依赖特定的操作系统，使用独自的函数名，然后在编译时将其转换成相应操作系统的系统调用</li></ul><p><img src="/images/HowProgramWorks/47.png" alt></p><ul><li>操作系统和高级语言能够使硬件抽象化</li><li>文件是操作系统对磁盘媒介空间的抽象化</li></ul><p><img src="/images/HowProgramWorks/48.png" alt></p><ul><li>时钟分割：短时间间隔内，多个程序切换运行的方式；Windsows通过这种方式实现多任务功能</li></ul><p><img src="/images/HowProgramWorks/49.png" alt></p><ul><li>中间件：处于操作系统和应用的中间</li><li>系统软件：操作系统和中间件合合在一起</li></ul><p><img src="/images/HowProgramWorks/50.png" alt></p><h2 id="汇编"><a href="#汇编" class="headerlink" title="汇编"></a>汇编</h2><ul><li>汇编语言的源文件 .asm （assembler）</li><li>汇编语言：使用助记符的编程语言</li><li>汇编语言源代码 → 用汇编器转换 → 本地代码</li><li>在将源代码转换成本地代码这个功能上，汇编器和编译器是同样的</li><li>汇编语言的编写的源代码，和本地代码一一对应</li></ul><p><img src="/images/HowProgramWorks/51.png" alt></p><ul><li>C语言源代码 → 编译 → 本地代码 → 反汇编 → 汇编源代码</li><li>可以通过以上反汇编的方式，分析其代码内容；一般的逆向工程</li><li>汇编语言的源代码：由 （1）转换成本地代码的指令（2）针对汇编器的伪指令 构成</li><li>伪指令负责把程序的构造和汇编的方法指示给汇编器；伪指令本身是无法汇编转换成本地代码的</li></ul><p><img src="/images/HowProgramWorks/52.png" alt></p><p><img src="/images/HowProgramWorks/53.png" alt></p><ul><li>由伪指令 segment 和 ends 围起来的部分，是给构成程序的命令和数据的集合体加上一个名字而得到的，称为 段定义</li><li>在程序中，段定义指的是命令和数据等程序的集合体的意思</li><li>段定义是一个连续的内存空间</li><li>一个程序由多个段定义构成</li><li>源代码的开始位置，定义了 3 个名称分别为 _TEXT、_DATA、_BSS的段定义</li><li>_TEXT 是指令的段定义</li><li>_DATA 是被初始化（有初始值）的数据的段定义</li><li>_BSS 是尚未初始化的数据的段定义</li><li>group这一伪指令，表示的是把_BSS 和 _DATA 这两个段定义汇总为名为 DGROUP 的组</li><li>group 指的是将源代码中不同的段定义在本地代码程序中整合为一个</li><li>围起 _AddNum 和 _MyFun 的 _TEXT segment 和 _TEXT ends，表示 _AddNum 和 _MyFunc 是属于 _TEXT 这一段定义的</li><li>_AddNum proc 和 _AddNum endp 围起来的部分，以及 _MyFunc proc 和 MyFunc endp 围 起来的部分，分别表示 AddNum 函数和 MyFunc 函数的范围</li><li>伪指令 proc 和 endp 围起来的部分，表示的是 过程（procedure）的范围；在汇编语言中，这种相当于 C 语言的函数的形式称为过程</li><li>末尾的 end 伪指令，表示的是源代码的结束</li><li>在汇编语言中，一行表示对CPU的一个指令</li><li>汇编语言指令的语法结构是操作码 + 操作数 （也存在只有操作码没有操作数的指令）</li><li>操作码表示的是指令动作，操作数表示的是指令对象</li><li>能够使用何种形式的操作码，是由 CPU 的种类决定的</li><li>32 位 x86 系列 CPU 用的操作码</li></ul><p><img src="/images/HowProgramWorks/54.png" alt></p><ul><li>本地代码加载到内存后才能运行；内存中存储着构成本地代码的指令和数据</li><li>CPU从内存中把指令和数据读出，然后由存储在CPU内部的寄存器来处理</li></ul><p><img src="/images/HowProgramWorks/55.png" alt></p><ul><li>寄存器不仅有存储指令和数据的功能，也有运算的功能</li></ul><p><img src="/images/HowProgramWorks/56.png" alt></p><ul><li>LIFO （Last In First Out）; push 入栈 ， pop 出栈</li></ul><p><img src="/images/HowProgramWorks/57.png" alt></p><h2 id="硬件控制"><a href="#硬件控制" class="headerlink" title="硬件控制"></a>硬件控制</h2><ul><li>应用通过系统调用间接控制硬件</li></ul><p><img src="/images/HowProgramWorks/58.png" alt></p><ul><li>计算机主机中附带了用来连接外部设备的连接器，各个连接器内部都有用来交换主机和外设之间电流特性的IC,这些IC（集成电路）统称为 I/O 控制器</li><li>由于电压不同，数字信号和模拟信号的电流特征不同，主机和外设无法直接连接，I/O 控制器就是用来解决此类问题的</li><li>I/O 控制器中有用于临时保存输入输出数据的内存，这个内存就是 端口 ，也称为 寄存器</li><li>I/O 寄存器主要是用来临时存储数据的，CPU内部的寄存器是用来进行运算处理的</li><li>各端口之间通过 端口号 区分，也称为 I/O 地址</li></ul><p><img src="/images/HowProgramWorks/59.png" alt></p><ul><li>IRQ(Interrupt Request) 中断请求</li><li>IRQ 是用来暂停当前正在运行的程序，并跳转到其他程序运行的必要机制，该机制称为中断处理</li></ul><p><img src="/images/HowProgramWorks/60.png" alt></p><p><img src="/images/HowProgramWorks/61.png" alt></p><ul><li>DMA(Direct Memory Access):在不通过CPU的情况下，外围设备直接和主内存进行数据传送</li></ul><p><img src="/images/HowProgramWorks/62.png" alt></p><ul><li>VRAM(Video RAM):显示器中呈现的内容信息一直存储在某内存中</li></ul><p><img src="/images/HowProgramWorks/63.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;CPU&quot;&gt;&lt;a href=&quot;#CPU&quot; class=&quot;headerlink&quot; title=&quot;CPU&quot;&gt;&lt;/a&gt;CPU&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;CPU(Central Processing Unit)[寄存器、控制器、运算器、时钟]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/images/HowProgramWorks/01.png&quot; alt&gt; &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;寄存器：暂存指令、数据&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;控制器：把内存上的指令、数据读入寄存器，并根据结果控制计算机&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;运算器：运算从内存读入寄存器的数据&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;时钟：发起计时&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;程序运行的过程:程序启动后,时钟开始计时,控制器从内存中读取指令和数据,运算器计算数据,控制器根据结果控制计算器&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="OS" scheme="http://www.orekiyuta.cn/tags/OS/"/>
    
  </entry>
  
  <entry>
    <title>さきざき</title>
    <link href="http://www.orekiyuta.cn/archives/Usakizaki/"/>
    <id>http://www.orekiyuta.cn/archives/Usakizaki/</id>
    <published>2020-05-21T06:04:24.000Z</published>
    <updated>2020-05-30T04:39:00.405Z</updated>
    
    <content type="html"><![CDATA[<p>この長い長い旅のその意味を 希望をつなぐため</p><p>今隣に座るきみは 以前より少し大人に見えるよ</p><p>でも目覚めた朝 谁も居ないんだね</p><a id="more"></a><p>炎天下 愿った少年 「あの顷」に立っていたんだ</p><p>期待ハズレの世界の隙間 予報外れの雨が降ってきた</p><p>夢を見せたくせに 叶えれる力を与えてくれないなんて</p><p>宵街を行く人だかりは 嬉しそうだったり 寂しそうだったり</p><p>君はどんな颜だっけ　なぜだろう 思い出せないな</p><p>キミは泣いた後笑える はずだからって言ったんだ</p><p>あの日から 変わらず いつまでも変わらずに  いられなかったこと 悔しくて 指を离す</p><p>逃げ出したいと思うこの気持ちに 見つめられると呼吸もできない</p><p>振り返ってみても いないのは分かってる</p><p>空が変わり果て 星は巡ってゆく 目覚めたらすぐに 今日も歩きだそう</p><p>待っているよ 月が綺麗な夜に会おう ここにいるよ あの日のまま</p><p>いつも见ていた　近いようで远くて いつだって　届かない</p><p>言叶を知らないままならば この瞳を闭じることも 简単だったのに</p><p>少し前に进んでみよう まなざしを高く上げて</p><p>翼消えて 見えなくなっても あなたのいるところに 私がいる</p><p>飾った写真達が 笑ったまま 止めどない明日に変わらない僕たちを</p><p>と過ごせる今が このまま続けばなんて</p><p>この季節が迎えに来たら 君の姿もう探す事も 出来なくなっちゃうんだね</p><p>けど そんな出会いを 别れを 缲り返して 「今の私」よりも すてきになっていますか</p><p>君が描いた未来の世界は いつかの空に導かれて</p><p>君の描く未来に 私はいるのかな 同じ空を 同じ想いで 見上げていたいよ</p><p>见送った 手を振った ありがとう</p><p>恐いものなんかない 例え化け物になろうとも 成し遂げる</p><p>また嫌いなトコがふえた 解ってんだよ　言叶は自分自身だ</p><p>何もかも失くしても 捧げるものがあるの</p><p>いつも新しい 空を見せてあげよう</p><p>曖昧な世界を照らすような</p><p>人たちはこの空飛ぶことは叶わないけど その代わりいま流す涙は天に昇りまた 雨となり還る</p><p>この場所に ただいま言うからね</p><p>见せてやる  本当は強かった ときのこと</p><p>永遠なんて望みはしない たとえちっぽけでも構わない</p><p>でも僕は君じゃないから 伝えることしか出来なくて</p><p>そう 解っている答えなど 捨ててしまえ</p><p>孤独を捨てたって 君は君だから</p><p>目を閉じてたら気付けない事が 沢山あるんだ</p><p>小さく揺れた向日葵 サヨナラも言えないまま</p><p>離れてても 同じ空見上げて</p><p>通り過ぎていった時間の捉え方で 「現在」が変わっていく</p><p>あの瞬間 あの場面が キミにとって特別なら 過去は離れて 行くものなんかじゃなくて</p><p>振り返るともうない  僕らは何も何もまだ知らぬ</p><p>何も言はず泣けだらいいね 涙か涸れだら終わり もっと僕が强くなぃなきゃ 悲しみは自立への一步</p><p>何年前のことでしょう 二度と戻れないあの場所に 置いてきてしまったぼくの心さ</p><p>今も何度でもボクは夏の面影の中 繰り返すよ</p><p>鮮やかすぎる 君がいない夏 あの声 あの仕草が 広がってく</p><p>どしゃぶりでもかまわないと ずぶぬれでもかまわないと しぶきあげるきみが消えてく</p><p>涙がかわくまでは もう少し この雨に打たれていたくて</p><p>溢れ出したこの痛みは 全て一人で抱き締める</p><p>もういいか そんなこと 笑ってよ 終わるその日には</p><p>理想なんて もう 燃え尽きてしまったの 弱虫の耳鸣りはやまない</p><p>時の風に 流されて 落ちていく</p><p>泣いたままで あなたの頬を叩く</p><p>僕にはわかるんだ 嘘をついている君が 泣いていいよ ここにずっといるから</p><p>無邪気な時には戻れない もう二度と</p><p>心押し殺すこと それひとつだけ</p><p>アタシは弱い 弱い 弱い 涙の行方を貴方は知らない</p><p>君とあの日に残した 約束の果てに私は 透明になっていくのだろう 今更善意なんて 似合わないと思うけど</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;この長い長い旅のその意味を 希望をつなぐため&lt;/p&gt;
&lt;p&gt;今隣に座るきみは 以前より少し大人に見えるよ&lt;/p&gt;
&lt;p&gt;でも目覚めた朝 谁も居ないんだね&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Preliminary use Mongodb</title>
    <link href="http://www.orekiyuta.cn/archives/PreliminaryUseMongodb/"/>
    <id>http://www.orekiyuta.cn/archives/PreliminaryUseMongodb/</id>
    <published>2019-12-19T11:56:48.000Z</published>
    <updated>2020-01-01T16:07:05.230Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装启动"><a href="#安装启动" class="headerlink" title="安装启动"></a><center>安装启动</center></h3><ul><li><code>docker pull mongo</code></li><li><code>docker run -d -p 127.0.0.1:27017:27017 --name mymongo mongo</code></li><li><code>docker exec -it mymongo mongo</code></li></ul><h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a><center>数据库</center></h3><ul><li><code>show dbs</code></li><li><code>use elias</code> 建立数据库 elias</li><li><code>db</code> 当前所在数据库</li><li><code>db.dropDatabase()</code></li></ul><a id="more"></a><h3 id="集合"><a href="#集合" class="headerlink" title="集合"></a><center>集合</center></h3><ul><li><p><code>db.createCollection(&quot;post&quot;)</code> 建集合(表) post 👉<a href="https://www.runoob.com/mongodb/mongodb-databases-documents-collections.html" target="_blank" rel="noopener">MongoDB 概念解析</a></p></li><li><p><code>show collections</code></p></li><li><code>db.[collectionsName].drop()</code></li></ul><h3 id="文档"><a href="#文档" class="headerlink" title="文档"></a><center>文档</center></h3><h4 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h4><ul><li><code>db.[collectionsName].insertOne()</code></li><li><code>db.[collectionsName].insert({key:&quot;value&quot;})</code></li><li>也可以把数据先赋给变量 , 再插入变量  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">document=(&#123;tiltle:&quot;20191220&quot;,by:&apos;elias&apos;,tag:&apos;note&apos;&#125;)</span><br><span class="line">db.[collectionsName].insert(document)</span><br></pre></td></tr></table></figure></li></ul><h4 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h4><ul><li><p><code>db.[collectionName].updateOne({key:&quot;value&quot;} , {$set:{key:&quot;Newvalue&quot;} )</code> 符合 key=value 的文档的 key 的 value 修改为 Newvalue ; $set 如果该文档没有该域(字段) , 则会追加上去</p></li><li><p><code>db.[collectionName].updateOne({key:&quot;value&quot;} , {$set:{key:&quot;Newvalue&quot;} , {multi:true})</code> 修改多条符合条件的值</p></li><li><p><code>db.[collectionName].updateOne({key:&quot;value&quot;} , {$unset:{key:&quot;Newvalue&quot;} )</code>  删除符合 key=value 的文档的 key 域(字段)</p></li><li><p><code>db.[collectionName].updateMany()</code></p></li><li><p><code>db.[collectionName].update( {key:&quot;value&quot;},{$inc: {key2:2}} )</code> 符合 key=value 的文档的 key2 的 value 加 2</p></li><li><p><code>db.[collectionName].update( {key:&quot;value&quot;},{$mul: {key2:2}} )</code> 符合 key=value 的文档的 key2 的 value 乘 2</p></li><li><p><code>db.[collectionName].update( {key:&quot;value&quot;},{$rename: {key2:key3}} )</code> 符合 key=value 的文档的 key2 改名为 key3</p></li><li><p><code>db.[collectionName].updateOne({key:&quot;value&quot;} ,{key:&quot;value&quot;,key2:&quot;value2&quot;,...} , {upsert:true})</code> 有符合条件文档的就更新 , 没有则插入该文档</p></li></ul><h4 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h4><ul><li><code>db.[collectionName].deleteOne()</code></li><li><code>db.[collectionName].deleteMany()</code></li></ul><h4 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h4><ul><li><code>db.[collectionsName].find()</code> 查看文档</li><li><code>db.[collectionsName].find().pretty()</code> </li><li><code>db.[collectionsName].find()</code></li><li><code>db.[collectionsName].findOne()</code></li><li><code>db.[collectionsName].find({},{_id:0})</code> 0 查询结果不包含id , 1 反之</li><li><code>db.[collectionsName].find({key:&quot;value&quot;})</code></li><li><code>db.[collectionsName].find({key:{$gte:3}})</code> 大于等于3 <strong>$gte</strong></li><li><code>db.[collectionsName].find({key:{$gt:3}})</code> 大于 <strong>$gt</strong></li><li><code>db.[collectionsName].find({key:{$lte:3}})</code> 小于等于 <strong>$lte</strong></li><li><code>db.[collectionsName].find({key:{$lt:3}})</code> 小于 <strong>$lt</strong></li><li><code>db.[collectionsName].find({key:{$regex:&quot; &quot;}})</code> 正则表达式</li><li><code>db.[collectionsName].find({key:/ /})</code></li><li><p><code>db.[collectionsName].find({key:{$regex:&quot; &quot;},key2:{$gt:3},...,...})</code> 复合条件,筛选同时符合条件的数据</p></li><li><p><code>db.[collectionsName].find({ $or: [{key:/ /},{key2:{$gt:3}}] })</code>  筛选符合 key 或者 key2 的数据</p></li><li><p><code>db.[collectionsName].find({key:{$in : [..,..,..]}})</code> 和 select in 一样</p></li><li><code>db.[collectionsName].distinct(&quot;key&quot;)</code> 取出键所含的内容</li><li><code>db.[collectionsName].find({...}).sort({key:1})</code> 1 升序 , -1 降序</li><li><code>db.[collectionsName].find({...}).limit(3)</code> 提取前三条文档</li><li><code>db.[collectionsName].find({...}).skip(3)</code> 跳过三条文档</li></ul><h3 id="索引"><a href="#索引" class="headerlink" title="索引"></a><center>索引</center></h3><ul><li><code>db.[collectionsName].getIndexes()</code> 默认索引</li><li><code>db.[collectionsName].createIndex({key:1})</code> 以 key 升序建立索引 ; -1 降序</li><li><code>db.[collectionsName].dropIndex({key:1})</code> 删除索引</li><li><code>db.[collectionsName].createIndex({key:1},{unique:true})</code> 升序唯一索引 , 之后新建文档的 key 的 value 不能与前面的重复</li></ul><h3 id="参考内容"><a href="#参考内容" class="headerlink" title="参考内容"></a>参考内容</h3><ul><li><a href="https://hub.docker.com/_/mongo/?tab=description" target="_blank" rel="noopener">mongo - Docker Hub</a></li><li><a href="https://docs.mongodb.com/manual/reference/command/" target="_blank" rel="noopener">Database Commands - MongoDB Manual</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;安装启动&quot;&gt;&lt;a href=&quot;#安装启动&quot; class=&quot;headerlink&quot; title=&quot;安装启动&quot;&gt;&lt;/a&gt;&lt;center&gt;安装启动&lt;/center&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;docker pull mongo&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker run -d -p 127.0.0.1:27017:27017 --name mymongo mongo&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker exec -it mymongo mongo&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;数据库&quot;&gt;&lt;a href=&quot;#数据库&quot; class=&quot;headerlink&quot; title=&quot;数据库&quot;&gt;&lt;/a&gt;&lt;center&gt;数据库&lt;/center&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;show dbs&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;use elias&lt;/code&gt; 建立数据库 elias&lt;/li&gt;
&lt;li&gt;&lt;code&gt;db&lt;/code&gt; 当前所在数据库&lt;/li&gt;
&lt;li&gt;&lt;code&gt;db.dropDatabase()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
      <category term="Mongodb" scheme="http://www.orekiyuta.cn/tags/Mongodb/"/>
    
  </entry>
  
  <entry>
    <title>Docker Note</title>
    <link href="http://www.orekiyuta.cn/archives/DockerNote/"/>
    <id>http://www.orekiyuta.cn/archives/DockerNote/</id>
    <published>2019-12-18T14:59:00.000Z</published>
    <updated>2019-12-20T08:36:26.180Z</updated>
    
    <content type="html"><![CDATA[<h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a><center>常用命令</center></h3><ul><li><code>docker version</code></li><li><code>systemctl start docker</code></li></ul><h4 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h4><ul><li><code>docker image ls</code></li><li><code>docker image rm [imageName]</code></li><li><code>docker image pull [imageName]</code></li><li><code>docker inspect [imageName]</code> 获取元数据</li></ul><h4 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h4><ul><li><code>docker container run [imageName]</code></li><li><code>docker container run -it [imageName] bash</code></li><li><code>docker container kill [containerID]</code> id不用填完整 , 能够唯一定位到即可</li><li><code>docker container ls</code></li><li><code>docker container ls --all</code></li><li><code>docker container rm [containerID]</code></li><li><code>docker container stop [containerID]</code>  //container 可省略</li><li><code>docker container start [containerID]</code></li><li><code>docker container logs [containerID]</code></li><li><code>docker container exec -it [containerID] /bin/bash</code></li><li><code>docker container inspect [containerID/Name]</code></li></ul><a id="more"></a><h3 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a><center>Dockerfile</center></h3><h4 id="dockerignore"><a href="#dockerignore" class="headerlink" title=".dockerignore"></a>.dockerignore</h4><p>忽略内容 , 和 git 的 .gitignore 一个意思<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node_modules</span><br><span class="line">npm-debug.log</span><br></pre></td></tr></table></figure></p><h4 id="Dockerfile-1"><a href="#Dockerfile-1" class="headerlink" title="Dockerfile"></a>Dockerfile</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">FROM node:8.4</span><br><span class="line">COPY . /app</span><br><span class="line">WORKDIR /app</span><br><span class="line">RUN npm install --registry=https://registry.npm.taobao.org</span><br><span class="line">EXPOSE 3000</span><br></pre></td></tr></table></figure><ul><li>FROM node:8.4：该 image 文件继承官方的 node image，冒号表示标签，这里标签是8.4，即8.4版本的 node</li><li>COPY . /app：将当前目录下的所有文件（除了.dockerignore排除的路径），都拷贝进入 image 文件的/app目录</li><li>WORKDIR /app：指定接下来的工作路径为/app</li><li>RUN npm install：在/app目录下，运行npm install命令安装依赖。注意，安装后所有的依赖，都将打包进入 image 文件</li><li>EXPOSE 3000：将容器 3000 端口暴露出来， 允许外部连接这个端口</li><li><code>.</code> 👉<a href="https://yeasy.gitbooks.io/docker_practice/content/image/build.html" target="_blank" rel="noopener">镜像构建上下文</a></li></ul><h4 id="创建-image-镜像"><a href="#创建-image-镜像" class="headerlink" title="创建 image 镜像"></a>创建 image 镜像</h4><ul><li><code>docker image build -t [name] .</code></li><li><code>docker image build -t [name]:0.0.1 .</code></li><li><code>.</code> 表示<strong>上下文路径</strong></li><li><code>-t</code> 指定名称</li></ul><h4 id="生成容器"><a href="#生成容器" class="headerlink" title="生成容器"></a>生成容器</h4><ul><li><code>docker container run -p 2222:3333 -it [name] /bin/bash</code></li><li><code>docker container run -p 2222:3333 -it [name]:0.0.1 /bin/bash</code></li><li><code>-p</code> 映射端口 , 本机:容器 { <strong>127.0.0.1:2222:3333</strong> / <strong>[ip]:2222:3333</strong> / <strong>[不填]2222:3333</strong> 默认为 <strong>0.0.0.0:2222:3333</strong> } </li><li><code>-it</code> 容器的 Shell 映射到当前的 Shell，在本机窗口输入的命令，就会传入容器</li><li><code>/bin/bash</code> 启动容器内 bash</li></ul><h3 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker Compose"></a><center>Docker Compose</center></h3><ul><li><code>docker-compose --version</code></li><li><p>docker-compose.yml</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mysql:</span><br><span class="line">    image: mysql:5.7</span><br><span class="line">    environment:</span><br><span class="line">    - MYSQL_ROOT_PASSWORD=123456</span><br><span class="line">    - MYSQL_DATABASE=wordpress</span><br><span class="line">web:</span><br><span class="line">    image: wordpress</span><br><span class="line">    links:</span><br><span class="line">    - mysql</span><br><span class="line">    environment:</span><br><span class="line">    - WORDPRESS_DB_PASSWORD=123456</span><br><span class="line">    ports:</span><br><span class="line">    - &quot;127.0.0.3:8080:80&quot;</span><br><span class="line">    working_dir: /var/www/html</span><br><span class="line">    volumes:</span><br><span class="line">    - wordpress:/var/www/html</span><br></pre></td></tr></table></figure></li><li><p><code>docker-compose up</code></p></li><li><code>docker-compose stop</code></li><li><code>docker-compose rm</code></li></ul><h3 id="修改镜像源"><a href="#修改镜像源" class="headerlink" title="修改镜像源"></a><center>修改镜像源</center></h3><ul><li><p>在阿里云找到镜像加速器</p><p>  <img src="/images/DockerNote/01.png" alt></p></li><li><p>在服务器 <code>/etc/docker</code> 下 , 新建 daemon.json , 添加镜像地址</p>  <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"registry-mirrors"</span>: [<span class="string">"https://0f2b6859.mirror.aliyuncs.com"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  <img src="/images/DockerNote/02.png" alt></p></li></ul><h3 id="参考内容"><a href="#参考内容" class="headerlink" title="参考内容"></a>参考内容</h3><ul><li><a href="https://docs.docker.com/get-started/part2/" target="_blank" rel="noopener">Docker</a></li><li><a href="https://yeasy.gitbooks.io/docker_practice/content/" target="_blank" rel="noopener">Docker — 从入门到实践</a></li><li><a href="https://www.ruanyifeng.com/blog/2018/02/docker-tutorial.html" target="_blank" rel="noopener">Docker 入门教程</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;常用命令&quot;&gt;&lt;a href=&quot;#常用命令&quot; class=&quot;headerlink&quot; title=&quot;常用命令&quot;&gt;&lt;/a&gt;&lt;center&gt;常用命令&lt;/center&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;docker version&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;systemctl start docker&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;镜像&quot;&gt;&lt;a href=&quot;#镜像&quot; class=&quot;headerlink&quot; title=&quot;镜像&quot;&gt;&lt;/a&gt;镜像&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;docker image ls&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker image rm [imageName]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker image pull [imageName]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker inspect [imageName]&lt;/code&gt; 获取元数据&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;容器&quot;&gt;&lt;a href=&quot;#容器&quot; class=&quot;headerlink&quot; title=&quot;容器&quot;&gt;&lt;/a&gt;容器&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;docker container run [imageName]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker container run -it [imageName] bash&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker container kill [containerID]&lt;/code&gt; id不用填完整 , 能够唯一定位到即可&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker container ls&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker container ls --all&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker container rm [containerID]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker container stop [containerID]&lt;/code&gt;  //container 可省略&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker container start [containerID]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker container logs [containerID]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker container exec -it [containerID] /bin/bash&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;docker container inspect [containerID/Name]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
      <category term="Docker" scheme="http://www.orekiyuta.cn/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>What is JS? ES? TS?</title>
    <link href="http://www.orekiyuta.cn/archives/SortOutJSESTS/"/>
    <id>http://www.orekiyuta.cn/archives/SortOutJSESTS/</id>
    <published>2019-12-17T09:21:02.000Z</published>
    <updated>2019-12-20T08:36:39.794Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一图理清浏览器脚本语言"><a href="#一图理清浏览器脚本语言" class="headerlink" title="一图理清浏览器脚本语言"></a><center>一图理清浏览器脚本语言</center></h3><p><img src="/images/SortOutJSESTS/01.png" alt></p><ul><li><p>简而言之 , 就是 js 设计之处有很多缺陷,然后为了弥补缺陷不断的更新 ES 标准 , js 不断的实现新标准修复缺陷 , 这样下去越来越麻烦 , 其他开发者看不下去了就直接按照 ES 标准实现自己的编译器和语言 , 最后转成 js </p></li><li><p>按照这样发展下去 , js 有发展成浏览器的汇编趋势</p></li><li><p>现有新的技术不转成 js , 自己去兼容浏览器打破 js 垄断浏览器。例如: Dart</p></li></ul><a id="more"></a><h3 id="参考内容"><a href="#参考内容" class="headerlink" title="参考内容"></a>参考内容</h3><ul><li><a href="https://www.zhihu.com/question/361303428" target="_blank" rel="noopener">es,js,ts三者有什么关系？</a></li><li><a href="https://www.jianshu.com/p/1cd0b2cb3ec4" target="_blank" rel="noopener">JavaScript的历史</a></li><li><a href="http://javascript.ruanyifeng.com/introduction/history.html" target="_blank" rel="noopener">JavaScript语言的历史</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一图理清浏览器脚本语言&quot;&gt;&lt;a href=&quot;#一图理清浏览器脚本语言&quot; class=&quot;headerlink&quot; title=&quot;一图理清浏览器脚本语言&quot;&gt;&lt;/a&gt;&lt;center&gt;一图理清浏览器脚本语言&lt;/center&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;/images/SortOutJSESTS/01.png&quot; alt&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;简而言之 , 就是 js 设计之处有很多缺陷,然后为了弥补缺陷不断的更新 ES 标准 , js 不断的实现新标准修复缺陷 , 这样下去越来越麻烦 , 其他开发者看不下去了就直接按照 ES 标准实现自己的编译器和语言 , 最后转成 js &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;按照这样发展下去 , js 有发展成浏览器的汇编趋势&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;现有新的技术不转成 js , 自己去兼容浏览器打破 js 垄断浏览器。例如: Dart&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
      <category term="JavaScript" scheme="http://www.orekiyuta.cn/tags/JavaScript/"/>
    
      <category term="ECMAScript" scheme="http://www.orekiyuta.cn/tags/ECMAScript/"/>
    
      <category term="TypeScript" scheme="http://www.orekiyuta.cn/tags/TypeScript/"/>
    
  </entry>
  
  <entry>
    <title>Thinking Shift</title>
    <link href="http://www.orekiyuta.cn/archives/ThinkingShift/"/>
    <id>http://www.orekiyuta.cn/archives/ThinkingShift/</id>
    <published>2019-12-15T17:17:36.000Z</published>
    <updated>2019-12-15T18:12:10.818Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一次编程思想的转变"><a href="#一次编程思想的转变" class="headerlink" title="一次编程思想的转变"></a><center>一次编程思想的转变</center></h3><p>⭐<strong>不能局限于细节 , 还要纵观整体</strong>⭐</p><ul><li><p>昨天发现一个很不错的 js 库 👉<a href="http://www.goat1000.com/tagcanvas.php" target="_blank" rel="noopener">tagcanvas</a></p></li><li><p>所以今天就打算整合到 hexo 博客中,首先是看了 Next 主题的代码格式 , 按照规范写好了对应的文件 , 并且 tagcanvas 也成功显示在页面了</p></li><li><p>但是数据还是固定的 , 需要把 hexo 的 tag 数据引过来输入到 tagcanvas 中</p></li><li><p>通过反复阅读源码 , 先是确定了原始 tagcloud 的位置在 <code>/next/layout/page.swig</code> </p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tag-cloud-tags"</span>&gt;</span></span><br><span class="line">    &#123;&#123; tagcloud(&#123;min_font: 15, max_font: 30, amount: 999, color: true, start_color: '#827878', end_color: '#000000'&#125;) &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>调试后确定了 tagcloud 是个方法 , 然后查找资料定位到了 <code>/node_modules/hexo/lib/plugins/helper/tagcloud.js</code></p></li><li><p>大概阅读 tagcloud.js 一遍后 , 可见 tagcloud 通过一定的算法处理后会输出 tag标签 <code>&lt;li/&gt;</code></p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">tags.forEach(<span class="function"><span class="params">tag</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> ratio = length ? sizes.indexOf(tag.length) / length : <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">const</span> size = min + ((max - min) * ratio);</span><br><span class="line">    <span class="keyword">let</span> style = <span class="string">`font-size: <span class="subst">$&#123;<span class="built_in">parseFloat</span>(size.toFixed(<span class="number">2</span>))&#125;</span><span class="subst">$&#123;unit&#125;</span>;`</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (color) &#123;</span><br><span class="line">    <span class="keyword">const</span> midColor = startColor.mix(endColor, ratio);</span><br><span class="line">    style += <span class="string">` color: <span class="subst">$&#123;midColor.toString()&#125;</span>`</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    result.push(</span><br><span class="line">    <span class="string">`&lt;a href="<span class="subst">$&#123;self.url_for(tag.path)&#125;</span>" style="<span class="subst">$&#123;style&#125;</span>"&gt;<span class="subst">$&#123;transform ? transform(tag.name) : tag.name&#125;</span>&lt;/a&gt;`</span></span><br><span class="line">    );</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul><a id="more"></a><ul><li><p>到此我的想法是 <strong>首先 tagcanvas 需要接受 url 参数 和 text 参数 , 应该修改一下 tagcloud.js 源码 , 让它输出想要的参数</strong></p></li><li><p>想了之后 , 如果这样做 , 之后会不会对其他地方产生影响 , 再加上修改此处的成本也不低 , 之后尝试问题的话维护成本也不低</p></li><li><p>然后想到了一种办法 <strong>不修改 tagcloud.js 源码 , 转为操作 DOM 在页面直接获取已经生成好的数据 , 然后传给 tagcanvas</strong></p></li><li><p>一波操作后 , 又遇到了一些问题 , 又想了想 , 这样操作 DOM 的话 ; 要是 hexo 的生命周期和我写在文件里的 DOM 操作的生命周期不一致的话也会出现问题 ; </p></li><li><p>想了想 , hexo 是把代码打包编译成静态文件的 , 那么我写在文件里的 DOM 操作在编译的时候并没有对应的节点 , 对应的节点应该是编译完成后才产生的 , 这样一来这个办法就行不通了</p></li><li><p>最后想了想 , <strong>其实前面早就有结果了 , 只是思维没有转过来</strong></p></li></ul><hr><ul><li><p>前面的 <strong>tagcloud 通过一定的算法处理后会输出 tag标签 <code>&lt;li/&gt;</code></strong> , 其实这里就可以直接利用 <code>&lt;li/&gt;</code> , <strong>把输出的一群 <code>&lt;li/&gt;</code> 当作个对象去思考</strong> </p></li><li><p>tagcloud 输出的 <code>&lt;li/&gt;</code> 是符合了 tagcanvas 输入规范的 ; tagcloud 输出的 <code>&lt;li/&gt;</code> 已经具备了 url 参数和 text 参数 , 这样的话 tagcanvas 也能正确处理</p></li><li><p>最后把 <code>/next/layout/page.swig</code> 中输出标签的代码迁移到 tagcanvas 页面对应的地方即可</p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; tagcloud(&#123;<span class="attr">min_font</span>: <span class="number">15</span>, <span class="attr">max_font</span>: <span class="number">30</span>, <span class="attr">amount</span>: <span class="number">999</span>, <span class="attr">color</span>: <span class="literal">true</span>, <span class="attr">start_color</span>: <span class="string">'#827878'</span>, <span class="attr">end_color</span>: <span class="string">'#000000'</span>&#125;) &#125;&#125;</span><br></pre></td></tr></table></figure></li></ul><p>还有个类似的库也值得去尝试一下 👉<a href="https://www.jasondavies.com" target="_blank" rel="noopener">jasondavies</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一次编程思想的转变&quot;&gt;&lt;a href=&quot;#一次编程思想的转变&quot; class=&quot;headerlink&quot; title=&quot;一次编程思想的转变&quot;&gt;&lt;/a&gt;&lt;center&gt;一次编程思想的转变&lt;/center&gt;&lt;/h3&gt;&lt;p&gt;⭐&lt;strong&gt;不能局限于细节 , 还要纵观整体&lt;/strong&gt;⭐&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;昨天发现一个很不错的 js 库 👉&lt;a href=&quot;http://www.goat1000.com/tagcanvas.php&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;tagcanvas&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;所以今天就打算整合到 hexo 博客中,首先是看了 Next 主题的代码格式 , 按照规范写好了对应的文件 , 并且 tagcanvas 也成功显示在页面了&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;但是数据还是固定的 , 需要把 hexo 的 tag 数据引过来输入到 tagcanvas 中&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通过反复阅读源码 , 先是确定了原始 tagcloud 的位置在 &lt;code&gt;/next/layout/page.swig&lt;/code&gt; &lt;/p&gt;
  &lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;tag-cloud-tags&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&amp;#123; tagcloud(&amp;#123;min_font: 15, max_font: 30, amount: 999, color: true, start_color: &#39;#827878&#39;, end_color: &#39;#000000&#39;&amp;#125;) &amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;调试后确定了 tagcloud 是个方法 , 然后查找资料定位到了 &lt;code&gt;/node_modules/hexo/lib/plugins/helper/tagcloud.js&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;大概阅读 tagcloud.js 一遍后 , 可见 tagcloud 通过一定的算法处理后会输出 tag标签 &lt;code&gt;&amp;lt;li/&amp;gt;&lt;/code&gt;&lt;/p&gt;
  &lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;tags.forEach(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;tag&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ratio = length ? sizes.indexOf(tag.length) / length : &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; size = min + ((max - min) * ratio);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; style = &lt;span class=&quot;string&quot;&gt;`font-size: &lt;span class=&quot;subst&quot;&gt;$&amp;#123;&lt;span class=&quot;built_in&quot;&gt;parseFloat&lt;/span&gt;(size.toFixed(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;))&amp;#125;&lt;/span&gt;&lt;span class=&quot;subst&quot;&gt;$&amp;#123;unit&amp;#125;&lt;/span&gt;;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (color) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; midColor = startColor.mix(endColor, ratio);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    style += &lt;span class=&quot;string&quot;&gt;` color: &lt;span class=&quot;subst&quot;&gt;$&amp;#123;midColor.toString()&amp;#125;&lt;/span&gt;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    result.push(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;`&amp;lt;a href=&quot;&lt;span class=&quot;subst&quot;&gt;$&amp;#123;self.url_for(tag.path)&amp;#125;&lt;/span&gt;&quot; style=&quot;&lt;span class=&quot;subst&quot;&gt;$&amp;#123;style&amp;#125;&lt;/span&gt;&quot;&amp;gt;&lt;span class=&quot;subst&quot;&gt;$&amp;#123;transform ? transform(tag.name) : tag.name&amp;#125;&lt;/span&gt;&amp;lt;/a&amp;gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
      <category term="get" scheme="http://www.orekiyuta.cn/tags/get/"/>
    
  </entry>
  
  <entry>
    <title>CSS3 Knowledge Point</title>
    <link href="http://www.orekiyuta.cn/archives/CSS3KnowledegePoint/"/>
    <id>http://www.orekiyuta.cn/archives/CSS3KnowledegePoint/</id>
    <published>2019-12-15T11:19:05.000Z</published>
    <updated>2019-12-17T07:49:50.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="属性是否可继承"><a href="#属性是否可继承" class="headerlink" title="属性是否可继承"></a><center>属性是否可继承</center></h3><h4 id="测试能否继承"><a href="#测试能否继承" class="headerlink" title="测试能否继承"></a>测试能否继承</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-cmn-Hans"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Elias<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">body &#123;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">color</span>: <span class="selector-tag">red</span>; <span class="comment">/* 可继承 */</span></span></span><br><span class="line"><span class="css">    <span class="selector-tag">border</span>: 3<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-tag">green</span>; <span class="comment">/* 不可继承 */</span></span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>CSS3注意点<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello Elias<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/images/CSS3/01.png" alt></p><p>可观察到 <code>&lt;h1/&gt;</code>和<code>&lt;p/&gt;</code> 继承了 body 的 color 属性 , 而没有继承 border 属性</p><p>了解哪些属性可以被继承 👉<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Reference" target="_blank" rel="noopener">MDN web docs</a></p><h4 id="强制继承"><a href="#强制继承" class="headerlink" title="强制继承"></a>强制继承</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-cmn-Hans"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Elias<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">body &#123;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">color</span>: <span class="selector-tag">red</span>; <span class="comment">/* 可继承 */</span></span></span><br><span class="line"><span class="css">    <span class="selector-tag">border</span>: 3<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-tag">green</span>; <span class="comment">/* 不可继承 */</span></span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">h1&#123;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">border</span><span class="selector-pseudo">:inherit</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>CSS3注意点<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello Elias<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>设置属性值为 inherit , 可强制继承父级对应属性</p><p><img src="/images/CSS3/02.png" alt></p><h3 id="垂直对齐"><a href="#垂直对齐" class="headerlink" title="垂直对齐"></a><center>垂直对齐</center></h3><p><img src="/images/CSS3/03.png" alt></p><p><img src="/images/CSS3/04.png" alt></p><p>👉<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/vertical-align" target="_blank" rel="noopener">详细参考</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;属性是否可继承&quot;&gt;&lt;a href=&quot;#属性是否可继承&quot; class=&quot;headerlink&quot; title=&quot;属性是否可继承&quot;&gt;&lt;/a&gt;&lt;center&gt;属性是否可继承&lt;/center&gt;&lt;/h3&gt;&lt;h4 id=&quot;测试能否继承&quot;&gt;&lt;a href=&quot;#测试能否继承&quot; cl
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Switch to ES6</title>
    <link href="http://www.orekiyuta.cn/archives/SwitchToES6/"/>
    <id>http://www.orekiyuta.cn/archives/SwitchToES6/</id>
    <published>2019-12-13T12:01:02.000Z</published>
    <updated>2020-01-02T15:49:39.769Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Let"><a href="#Let" class="headerlink" title="Let"></a><center>Let</center></h3><h4 id="变量i的作用域"><a href="#变量i的作用域" class="headerlink" title="变量i的作用域"></a>变量i的作用域</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//ES5</span></span><br><span class="line"><span class="keyword">if</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> i = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(i);</span><br><span class="line"></span><br><span class="line"><span class="comment">//ES6</span></span><br><span class="line"><span class="keyword">if</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> i = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(i); <span class="comment">//变量i未找到</span></span><br></pre></td></tr></table></figure><h4 id="重复定义"><a href="#重复定义" class="headerlink" title="重复定义"></a>重复定义</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">switch</span> (i) &#123;</span><br><span class="line">  <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">    <span class="keyword">let</span> value = <span class="string">"hello"</span>;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">let</span> value = <span class="string">"world"</span>; <span class="comment">//重复定义错误</span></span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="const-定义常量"><a href="#const-定义常量" class="headerlink" title="const 定义常量"></a><center>const 定义常量</center></h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> data = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">console</span>.log(data);</span><br><span class="line"><span class="comment">//data = 100; //执行错误 , 不能给常量赋予新值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> list = [<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>]; <span class="comment">//定义了list常量是数组</span></span><br><span class="line"><span class="built_in">console</span>.log(list);</span><br><span class="line"></span><br><span class="line">list[<span class="number">0</span>] = <span class="number">100</span>;          <span class="comment">//数组内值可以变</span></span><br><span class="line"><span class="built_in">console</span>.log(list);</span><br><span class="line"></span><br><span class="line"><span class="comment">//list = [1,2,3]; //错误 , 常量list数组不能重新赋值</span></span><br></pre></td></tr></table></figure><p>定义常量为数组时 , 常量数组内部值可以改变 , 但是常量不能重新赋值</p><h3 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a><center>进制转换</center></h3><ul><li>0b:二进制</li><li>0o:八进制</li><li>0x:十六进制<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="number">0b10</span>); <span class="comment">//2</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">0o10</span>); <span class="comment">//8</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">0x10</span>); <span class="comment">//16</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">0b11</span> === <span class="number">3</span>); <span class="comment">//true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">0o10</span> === <span class="number">8</span>); <span class="comment">//true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">0x10</span> === <span class="number">16</span>);<span class="comment">//true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> num = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">console</span>.log(num.toString(<span class="number">8</span>)); <span class="comment">//8进制转换</span></span><br><span class="line"><span class="built_in">console</span>.log(num.toString(<span class="number">2</span>)); <span class="comment">//2进制转换</span></span><br><span class="line"><span class="built_in">console</span>.log(num.toString(<span class="number">16</span>));<span class="comment">//16进制转换</span></span><br><span class="line"><span class="built_in">console</span>.log(num.toString(<span class="number">5</span>)); <span class="comment">//5进制转换</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="字符串解析"><a href="#字符串解析" class="headerlink" title="字符串解析"></a><center>字符串解析</center></h3><h4 id="嵌入字符串"><a href="#嵌入字符串" class="headerlink" title="嵌入字符串"></a>嵌入字符串</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> name = <span class="string">"Elias"</span></span><br><span class="line"><span class="keyword">let</span> mystr1 = <span class="string">"你好，$&#123;name&#125;!"</span></span><br><span class="line"><span class="keyword">let</span> mystr2 = <span class="string">`你好，<span class="subst">$&#123;name&#125;</span>！再见。`</span>  <span class="comment">//注意这里是反单引号</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(mystr1)     <span class="comment">//你好，$&#123;name&#125;!</span></span><br><span class="line"><span class="built_in">console</span>.log(mystr2)     <span class="comment">//你好，Elias！再见。</span></span><br></pre></td></tr></table></figure><h4 id="字符串模板"><a href="#字符串模板" class="headerlink" title="字符串模板"></a>字符串模板</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> name = <span class="string">"Elias"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tagged</span>(<span class="params">formats, ...args</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(formats)</span><br><span class="line">    <span class="built_in">console</span>.log(args)</span><br><span class="line">&#125;</span><br><span class="line">tagged<span class="string">`你好，<span class="subst">$&#123;name&#125;</span>！再见。`</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*  </span></span><br><span class="line"><span class="comment">[ '你好，', '！再见。' ]</span></span><br><span class="line"><span class="comment">[ 'Elias' ]</span></span><br><span class="line"><span class="comment">/*</span></span><br></pre></td></tr></table></figure><p>按 <code>${ }</code> 模板分割字符串输出形成</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> name1 = <span class="string">"Elias"</span></span><br><span class="line"><span class="keyword">let</span> name2 = <span class="string">"Mark"</span></span><br><span class="line"><span class="keyword">let</span> name3 = <span class="string">"Mier"</span></span><br><span class="line"><span class="keyword">let</span> name4 = <span class="string">"Tres"</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tagged</span>(<span class="params">formats, ...args</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(formats)</span><br><span class="line">    <span class="built_in">console</span>.log(args)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tagged<span class="string">`<span class="subst">$&#123;name1&#125;</span>你好，<span class="subst">$&#123;name2&#125;</span>！<span class="subst">$&#123;name3&#125;</span>再见。<span class="subst">$&#123;name4&#125;</span>`</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*  </span></span><br><span class="line"><span class="comment">[ '', '你好，', '！', '再见。', '' ]</span></span><br><span class="line"><span class="comment">[ 'Elias', 'Mark', 'Mier', 'Tres' ]</span></span><br><span class="line"><span class="comment">/*</span></span><br></pre></td></tr></table></figure><p>当字符串模板出现在首位或末位时, 非模板数组输出空值在首位或末位</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> name1 = <span class="string">"Elias"</span></span><br><span class="line"><span class="keyword">let</span> name2 = <span class="string">"Mark"</span></span><br><span class="line"><span class="keyword">let</span> name3 = <span class="string">"Mier"</span></span><br><span class="line"><span class="keyword">let</span> name4 = <span class="string">"Tres"</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tagged</span>(<span class="params">formats, args</span>)</span>&#123; <span class="comment">//去掉 ...扩展运算符</span></span><br><span class="line">    <span class="built_in">console</span>.log(formats)</span><br><span class="line">    <span class="built_in">console</span>.log(args)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tagged<span class="string">`<span class="subst">$&#123;name2&#125;</span>你好，<span class="subst">$&#123;name1&#125;</span>！<span class="subst">$&#123;name3&#125;</span>再见。<span class="subst">$&#123;name4&#125;</span>`</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*  </span></span><br><span class="line"><span class="comment">[ '', '你好，', '！', '再见。', '' ]</span></span><br><span class="line"><span class="comment">Mark</span></span><br><span class="line"><span class="comment">/*</span></span><br></pre></td></tr></table></figure><p>详细可查 👉<a href="http://es6.ruanyifeng.com/#docs/array" target="_blank" rel="noopener">ECMAScript</a></p><h4 id="模板和表示形式"><a href="#模板和表示形式" class="headerlink" title="模板和表示形式"></a>模板和表示形式</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> name = <span class="string">"Elias"</span></span><br><span class="line"><span class="keyword">let</span> address = <span class="string">"网吧"</span></span><br><span class="line"><span class="keyword">let</span> fmtstr = markdown<span class="string">`你好，<span class="subst">$&#123;name&#125;</span>！</span></span><br><span class="line"><span class="string">晚上一起去<span class="subst">$&#123;address&#125;</span>玩吗？</span></span><br><span class="line"><span class="string">等你的回信。`</span></span><br><span class="line"><span class="built_in">console</span>.log(fmtstr)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">markdown</span>(<span class="params">formats, ...args</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(formats)</span><br><span class="line">  <span class="built_in">console</span>.log(args)</span><br><span class="line">  <span class="keyword">var</span> result = <span class="string">"# 信息标题\n"</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; formats.length; i++)</span><br><span class="line"><span class="comment">//   console.log(args[i] || '')</span></span><br><span class="line">    result += formats[i] + <span class="string">"**"</span> + (args[i] || <span class="string">''</span>) + <span class="string">"**"</span>;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*  </span></span><br><span class="line"><span class="comment">[ '你好，', '！\n晚上一起去', '玩吗？\n等你的回信。' ]</span></span><br><span class="line"><span class="comment">[ 'Elias', '网吧' ]</span></span><br><span class="line"><span class="comment"># 信息标题</span></span><br><span class="line"><span class="comment">你好，**Elias**！</span></span><br><span class="line"><span class="comment">晚上一起去**网吧**玩吗？</span></span><br><span class="line"><span class="comment">等你的回信。****</span></span><br><span class="line"><span class="comment">/*</span></span><br></pre></td></tr></table></figure><p>把模板和表示形式分离</p><h3 id="Symbol类型"><a href="#Symbol类型" class="headerlink" title="Symbol类型"></a><center>Symbol类型</center></h3><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str1 = <span class="built_in">String</span>(<span class="string">"helloWorld"</span>);</span><br><span class="line"><span class="keyword">let</span> str2 = <span class="built_in">String</span>(<span class="string">"helloWorld"</span>);</span><br><span class="line"><span class="built_in">console</span>.log(str1 == str2);  <span class="comment">//结果：true</span></span><br><span class="line"><span class="built_in">console</span>.log(str1 === str2); <span class="comment">//结果：true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> s1 = <span class="built_in">Symbol</span>(<span class="string">"mySymbol"</span>);</span><br><span class="line"><span class="keyword">let</span> s2 = <span class="built_in">Symbol</span>(<span class="string">"mySymbol"</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> s1);     <span class="comment">//结果：symbol</span></span><br><span class="line"><span class="built_in">console</span>.log(s1.toString()); <span class="comment">//结果：Symbol(mySymbol)</span></span><br><span class="line"><span class="built_in">console</span>.log(s1 == s2);      <span class="comment">//结果：false</span></span><br><span class="line"><span class="built_in">console</span>.log(s1 === s2);     <span class="comment">//结果：false</span></span><br></pre></td></tr></table></figure><p>对于 <code>s1 == s2</code> : Symbol类型会分配一个内部哈希值 , 所以在比较的时候是用哈希值作比较 ,而不是用赋予的 value 值作比较 , 所以不相等</p><h4 id="作为常量"><a href="#作为常量" class="headerlink" title="作为常量"></a>作为常量</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> Java = <span class="built_in">Symbol</span>();</span><br><span class="line"><span class="keyword">const</span> Ruby = <span class="built_in">Symbol</span>();</span><br><span class="line"><span class="keyword">const</span> Perl = <span class="built_in">Symbol</span>();</span><br><span class="line"><span class="keyword">const</span> Php  = <span class="built_in">Symbol</span>();</span><br><span class="line"><span class="keyword">const</span> VB   = <span class="built_in">Symbol</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> lang = Php;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (lang === Java) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'Java的未来在哪里？'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (lang === Ruby) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'再学个Ruby on Rails吧。'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (lang === Php) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'再学个Ruby on Rails吧。'</span>); <span class="comment">//输出这个</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样就可以直接根据常量名判断了</p><h4 id="作为属性"><a href="#作为属性" class="headerlink" title="作为属性"></a>作为属性</h4><p>首先理解下面这个<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> s1 = <span class="built_in">String</span>(<span class="string">"mySymbol"</span>);</span><br><span class="line"><span class="keyword">let</span> s2 = <span class="built_in">String</span>(<span class="string">"mySymbol"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj = &#123;&#125;;</span><br><span class="line">obj[s1] = <span class="string">"hello"</span>;</span><br><span class="line">obj[s2] = <span class="string">"world"</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(obj);</span><br><span class="line"><span class="built_in">console</span>.log(obj[s1]);</span><br><span class="line"><span class="built_in">console</span>.log(obj[s2]);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*  </span></span><br><span class="line"><span class="comment">&#123; mySymbol: 'world' &#125;</span></span><br><span class="line"><span class="comment">world</span></span><br><span class="line"><span class="comment">world</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></p><ul><li>首先 s1 、s2 的值都为 mySymbol</li><li>然后给对象 obj 的 s1 键（mySymbol）赋 hello 值 </li><li>然后给对象 obj 的 s2 键（mySymbol）赋 world 值 , 由于是同一个键就把上面的覆盖了</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> s1 = <span class="built_in">Symbol</span>(<span class="string">"mySymbol"</span>);</span><br><span class="line"><span class="keyword">let</span> s2 = <span class="built_in">Symbol</span>(<span class="string">"mySymbol"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj = &#123;&#125;;</span><br><span class="line">obj[s1] = <span class="string">"hello"</span>;</span><br><span class="line">obj[s2] = <span class="string">"world"</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(obj);</span><br><span class="line"><span class="built_in">console</span>.log(obj[s1]);</span><br><span class="line"><span class="built_in">console</span>.log(obj[s2]);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*  </span></span><br><span class="line"><span class="comment">&#123; [Symbol(mySymbol)]: 'hello', [Symbol(mySymbol)]: 'world' &#125;</span></span><br><span class="line"><span class="comment">hello</span></span><br><span class="line"><span class="comment">world</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>接着这里就好理解了</p><h4 id="半隐藏属性"><a href="#半隐藏属性" class="headerlink" title="半隐藏属性"></a>半隐藏属性</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> MYKEY = <span class="built_in">Symbol</span>();</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(key,name,age)&#123;</span><br><span class="line">        <span class="keyword">this</span>[MYKEY] = key;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    checkKEY(key)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>[MYKEY] === key;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> user = <span class="keyword">new</span> User(<span class="number">123</span>, <span class="string">'Curry'</span>, <span class="number">29</span>);</span><br><span class="line"><span class="built_in">console</span>.log(user.name, user.age, user[MYKEY]); <span class="comment">//Curry 29 123</span></span><br><span class="line"><span class="built_in">console</span>.log(user.checkKEY(<span class="number">123</span>));   <span class="comment">//true</span></span><br><span class="line"><span class="built_in">console</span>.log(user.checkKEY(<span class="number">456</span>));   <span class="comment">//false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.keys(user));    <span class="comment">//[ 'name', 'age' ]    这里用Object.key列出user对象的所有属性</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(user)); <span class="comment">//&#123;"name":"Curry","age":29&#125;   用JSON字符串化</span></span><br></pre></td></tr></table></figure><h3 id="解构赋值"><a href="#解构赋值" class="headerlink" title="解构赋值"></a><center>解构赋值</center></h3><h4 id="数组赋值"><a href="#数组赋值" class="headerlink" title="数组赋值"></a>数组赋值</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> [a, b, c] = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>];</span><br><span class="line"><span class="built_in">console</span>.log(a, b, c); <span class="comment">//10 20 30</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> [x, y, ...other] = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];</span><br><span class="line"><span class="built_in">console</span>.log(x, y, other); <span class="comment">//1 2 [ 3, 4, 5 ]</span></span><br></pre></td></tr></table></figure><h4 id="对象赋值"><a href="#对象赋值" class="headerlink" title="对象赋值"></a>对象赋值</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> &#123;name, age&#125; = &#123; <span class="attr">age</span>: <span class="number">20</span> , <span class="attr">name</span>: <span class="string">'Elias'</span>&#125;; </span><br><span class="line"><span class="built_in">console</span>.log(name, age); <span class="comment">//Elias 20</span></span><br></pre></td></tr></table></figure><h4 id="函数赋值"><a href="#函数赋值" class="headerlink" title="函数赋值"></a>函数赋值</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">func1</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> [<span class="number">10</span>, <span class="number">20</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> [num1, num2] = func1();</span><br><span class="line"><span class="built_in">console</span>.log(num1, num2); <span class="comment">//10 20</span></span><br></pre></td></tr></table></figure><h4 id="函数参数名指定"><a href="#函数参数名指定" class="headerlink" title="函数参数名指定"></a>函数参数名指定</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">func2</span>(<span class="params">&#123;x=<span class="number">1</span>, y=<span class="number">2</span>&#125;</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x+y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(func2(&#123;&#125;));           <span class="comment">//3</span></span><br><span class="line"><span class="built_in">console</span>.log(func2(&#123;<span class="attr">x</span>:<span class="number">10</span>&#125;));       <span class="comment">//12</span></span><br><span class="line"><span class="built_in">console</span>.log(func2(&#123;<span class="attr">y</span>:<span class="number">10</span>&#125;));       <span class="comment">//11</span></span><br><span class="line"><span class="built_in">console</span>.log(func2(&#123;<span class="attr">x</span>:<span class="number">10</span>, <span class="attr">y</span>:<span class="number">20</span>&#125;)); <span class="comment">//30</span></span><br></pre></td></tr></table></figure><h3 id="数组循环-for…of"><a href="#数组循环-for…of" class="headerlink" title="数组循环 for…of"></a><center>数组循环 for…of</center></h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> list = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>];</span><br><span class="line"><span class="built_in">Array</span>.prototype.Len = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> val <span class="keyword">of</span> list)</span><br><span class="line">    <span class="built_in">console</span>.log(val);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> val <span class="keyword">in</span> list)</span><br><span class="line">    <span class="built_in">console</span>.log(val, list[val]);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">10</span></span><br><span class="line"><span class="comment">20</span></span><br><span class="line"><span class="comment">30</span></span><br><span class="line"><span class="comment">0 10</span></span><br><span class="line"><span class="comment">1 20</span></span><br><span class="line"><span class="comment">2 30</span></span><br><span class="line"><span class="comment">Len function()&#123;&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><ul><li>for…of 只关心 list 内的值</li><li>for…in 关心 lis t所有的属性,可根据 <code>Array.prototype.Len = function(){}</code> 得出结论</li><li>前者把 list 当作数组 , 后者把 list 当作变量</li></ul><h3 id="函数默认值"><a href="#函数默认值" class="headerlink" title="函数默认值"></a><center>函数默认值</center></h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//字符参数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sayhello</span>(<span class="params">name = <span class="string">"Curry"</span></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`Hello <span class="subst">$&#123;name&#125;</span>`</span>);</span><br><span class="line">&#125;</span><br><span class="line">sayhello(); <span class="comment">//Hello Curry</span></span><br><span class="line">sayhello(<span class="string">"Elias"</span>); <span class="comment">//Hello Elias</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//数值计算</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">a=<span class="number">1</span>, b=a</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(add());  <span class="comment">//2</span></span><br><span class="line"><span class="built_in">console</span>.log(add(<span class="number">10</span>));  <span class="comment">//20</span></span><br><span class="line"><span class="built_in">console</span>.log(add(<span class="number">10</span>, <span class="number">20</span>));  <span class="comment">//30</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//必须指定参数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">required</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">"参数未制定"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sayBye</span>(<span class="params">name=required(</span>))</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`<span class="subst">$&#123;name&#125;</span> bye!`</span>);</span><br><span class="line">&#125;</span><br><span class="line">sayBye(<span class="string">'Elias'</span>);  </span><br><span class="line">sayBye();</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">Elias bye!</span></span><br><span class="line"><span class="comment">C:\Users\OrekiYuta\Desktop\test.js:18</span></span><br><span class="line"><span class="comment">    throw new Error("参数未制定");</span></span><br><span class="line"><span class="comment">    ^</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Error: 参数未制定</span></span><br><span class="line"><span class="comment">    at requir1ed (C:\Users\OrekiYuta\Desktop\test.js:18:11)</span></span><br><span class="line"><span class="comment">    at sayBye (C:\Users\OrekiYuta\Desktop\test.js:20:22)</span></span><br><span class="line"><span class="comment">    at Object.&lt;anonymous&gt; (C:\Users\OrekiYuta\Desktop\test.js:24:1)</span></span><br><span class="line"><span class="comment">    at Module._compile (internal/modules/cjs/loader.js:776:30)</span></span><br><span class="line"><span class="comment">    at Object.Module._extensions..js (internal/modules/cjs/loader.js:787:10)</span></span><br><span class="line"><span class="comment">    at Module.load (internal/modules/cjs/loader.js:653:32)</span></span><br><span class="line"><span class="comment">    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)</span></span><br><span class="line"><span class="comment">    at Function.Module._load (internal/modules/cjs/loader.js:585:3)</span></span><br><span class="line"><span class="comment">    at Function.Module.runMain (internal/modules/cjs/loader.js:829:12)</span></span><br><span class="line"><span class="comment">    at startup (internal/bootstrap/node.js:283:19)</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="可变长参数"><a href="#可变长参数" class="headerlink" title="可变长参数"></a><center>可变长参数</center></h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">...args</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> result = <span class="number">0</span>;</span><br><span class="line">    args.forEach(<span class="function"><span class="params">val</span> =&gt;</span> &#123;</span><br><span class="line">        result += val;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(sum(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>));  <span class="comment">//6</span></span><br><span class="line"><span class="built_in">console</span>.log(sum(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>));  <span class="comment">//55</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">args.forEach(<span class="function"><span class="params">val</span> =&gt;</span> &#123;</span><br><span class="line">        result += val;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//相当于</span></span><br><span class="line">args.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">val</span>)</span>&#123;</span><br><span class="line">        result += val;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><h3 id="箭头函数-gt"><a href="#箭头函数-gt" class="headerlink" title=" 箭头函数 =&gt; "></a><center> 箭头函数 =&gt; </center></h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> list = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//ES5</span></span><br><span class="line"><span class="keyword">let</span> newlist = list.map(<span class="function"><span class="keyword">function</span>(<span class="params">value, index</span>)</span>&#123; <span class="comment">//value 数组值 , index //索引下标</span></span><br><span class="line">    <span class="keyword">return</span> value * value;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(newlist);</span><br><span class="line"></span><br><span class="line"><span class="comment">// ES6</span></span><br><span class="line"><span class="comment">//(1)</span></span><br><span class="line">newlist = list.map(<span class="function">(<span class="params">value, index</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> value * value;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(newlist);</span><br><span class="line"></span><br><span class="line"><span class="comment">//(2)</span></span><br><span class="line">newlist = list.map(<span class="function"><span class="params">value</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> value * value;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(newlist);</span><br></pre></td></tr></table></figure><p>let 写不写都可以</p><h3 id="基本对象定义"><a href="#基本对象定义" class="headerlink" title="基本对象定义"></a><center>基本对象定义</center></h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> title = <span class="string">"ES6从入门到外出"</span>;</span><br><span class="line"><span class="keyword">let</span> price = <span class="number">25</span>;</span><br><span class="line"><span class="keyword">let</span> publish = <span class="string">"Elias出版社"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> book = &#123;</span><br><span class="line">    title, price, publish,</span><br><span class="line">    toString()&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">`&lt;&lt;<span class="subst">$&#123;<span class="keyword">this</span>.title&#125;</span>&gt;&gt; is <span class="subst">$&#123;price&#125;</span>元。`</span>); <span class="comment">//this 加不加都可以</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">book[<span class="string">'lang'</span>] = <span class="string">"简体中文"</span>; <span class="comment">//给book对象添加了成员变量</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(book);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">&#123; title: 'ES6从入门到外出',</span></span><br><span class="line"><span class="comment">  price: 25,</span></span><br><span class="line"><span class="comment">  publish: 'Elias出版社',</span></span><br><span class="line"><span class="comment">  toString: [Function: toString],</span></span><br><span class="line"><span class="comment">  lang: '简体中文' &#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">book.toString();</span><br><span class="line"><span class="comment">//&lt;&lt;ES6从入门到外出&gt;&gt; is 25元。</span></span><br></pre></td></tr></table></figure><h3 id="类定义-class"><a href="#类定义-class" class="headerlink" title="类定义 class"></a><center>类定义 class</center></h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Player</span> </span>&#123;</span><br><span class="line">    <span class="comment">//关键字 constructor 构造器</span></span><br><span class="line">    <span class="keyword">constructor</span>(name, sex) &#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name; <span class="comment">//这里隐式定义了变量 name , sex</span></span><br><span class="line">        <span class="keyword">this</span>.sex = sex;</span><br><span class="line">    &#125;</span><br><span class="line">    show()&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">`<span class="subst">$&#123;<span class="keyword">this</span>.name&#125;</span>的性别是<span class="subst">$&#123;<span class="keyword">this</span>.sex&#125;</span>。`</span>); <span class="comment">//这里必须 this , 否则找不到该变量</span></span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">static</span> info()&#123;  <span class="comment">//static 方法 , 不用实例化就可以引用</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"这是一个球员类，您可以使用它建立自己的球员。"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> Curryplayer = <span class="keyword">new</span> Player(<span class="string">"库里"</span>, <span class="string">"男"</span>);</span><br><span class="line"><span class="built_in">console</span>.log(Curryplayer.name, Curryplayer.sex); <span class="comment">//库里 男</span></span><br><span class="line">Curryplayer.show();<span class="comment">//库里的性别是男。</span></span><br><span class="line">Player.info();<span class="comment">//这是一个球员类，您可以使用它建立自己的球员。</span></span><br></pre></td></tr></table></figure><h3 id="getting-setting-定义"><a href="#getting-setting-定义" class="headerlink" title="getting / setting 定义"></a><center>getting / setting 定义</center></h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Player</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(name, sex) &#123; </span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.sex = sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">get</span> age()&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.Age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">set</span> age(val)&#123;</span><br><span class="line">        <span class="keyword">this</span>.Age = val;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> Curryplayer = <span class="keyword">new</span> Player(<span class="string">"库里"</span>, <span class="string">"男"</span>);</span><br><span class="line"><span class="built_in">console</span>.log(Curryplayer);</span><br><span class="line">Curryplayer.Age = <span class="number">28</span>;  <span class="comment">//设置值,调用了set</span></span><br><span class="line"><span class="built_in">console</span>.log(Curryplayer);</span><br><span class="line"><span class="built_in">console</span>.log(Curryplayer.Age); <span class="comment">//取值,调用了get</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">Player &#123; name: '库里', sex: '男' &#125;</span></span><br><span class="line"><span class="comment">Player &#123; name: '库里', sex: '男', Age: 28 &#125;</span></span><br><span class="line"><span class="comment">28</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="类继承"><a href="#类继承" class="headerlink" title="类继承"></a><center>类继承</center></h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Car</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(brand)&#123;</span><br><span class="line">        <span class="keyword">this</span>.brand = brand;</span><br><span class="line">    &#125;</span><br><span class="line">    show()&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">`本台车的品牌是<span class="subst">$&#123;<span class="keyword">this</span>.brand&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Lexus</span> <span class="keyword">extends</span> <span class="title">Car</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(brand, lineup) &#123;</span><br><span class="line">        <span class="keyword">super</span>(brand); <span class="comment">//调用父类构造器 , 初始化brand属性</span></span><br><span class="line">        <span class="keyword">this</span>.lineup = lineup;</span><br><span class="line">    &#125;</span><br><span class="line">    getPrice()&#123;</span><br><span class="line">        <span class="keyword">switch</span>(<span class="keyword">this</span>.lineup)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"RX"</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">60</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"NX"</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">40</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">"未知车类别"</span>);  <span class="comment">//抛出异常</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> mycar = <span class="keyword">new</span> Lexus(<span class="string">"Lexus"</span>, <span class="string">"RX"</span>);</span><br><span class="line">mycar.show();  <span class="comment">//调用父类方法</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"价格是："</span>, mycar.getPrice(), <span class="string">"万"</span>); <span class="comment">//调用自己的方法</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">本台车的品牌是Lexus</span></span><br><span class="line"><span class="comment">价格是： 60 万</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="循环对象"><a href="#循环对象" class="headerlink" title="循环对象"></a><center>循环对象</center></h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> list  = [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>];</span><br><span class="line"><span class="keyword">let</span> mystr = <span class="string">'你好啊'</span>;</span><br><span class="line"><span class="keyword">let</span> mymap = <span class="keyword">new</span> <span class="built_in">Map</span>();</span><br><span class="line">mymap.set(<span class="string">'JS'</span>, <span class="string">'Javascript'</span>);</span><br><span class="line">mymap.set(<span class="string">'PL'</span>, <span class="string">'Perl'</span>);</span><br><span class="line">mymap.set(<span class="string">'PY'</span>, <span class="string">'Python'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> val <span class="keyword">of</span> list)&#123;</span><br><span class="line"><span class="built_in">console</span>.log(val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">10</span></span><br><span class="line"><span class="comment">20</span></span><br><span class="line"><span class="comment">30 </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> val <span class="keyword">of</span> mystr)&#123;</span><br><span class="line"><span class="built_in">console</span>.log(val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">你</span></span><br><span class="line"><span class="comment">好</span></span><br><span class="line"><span class="comment">啊</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> [key,value] <span class="keyword">of</span> mymap)&#123;</span><br><span class="line"><span class="built_in">console</span>.log(key, value);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">JS Javascript</span></span><br><span class="line"><span class="comment">PL Perl</span></span><br><span class="line"><span class="comment">PY Python</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">let</span> it = mymap.values();  <span class="comment">//it 迭代器</span></span><br><span class="line"><span class="keyword">let</span> tmp;    </span><br><span class="line"><span class="keyword">while</span>(tmp = it.next())&#123;   <span class="comment">//next() : 取mymap对象下一个值 , 如果有下一个值就取出 , 没有就退出</span></span><br><span class="line">    <span class="keyword">if</span> (tmp.done) <span class="keyword">break</span>;   <span class="comment">// done : 表明是否最后一个 , false:还有下一个值继续执行 , true , 遍历完成</span></span><br><span class="line">    <span class="built_in">console</span>.log(tmp.done)</span><br><span class="line">    <span class="built_in">console</span>.log(tmp.value);</span><br><span class="line">    <span class="built_in">console</span>.log(tmp)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"----------"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(tmp)</span><br><span class="line"><span class="built_in">console</span>.log(tmp.done)</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">false</span></span><br><span class="line"><span class="comment">Javascript</span></span><br><span class="line"><span class="comment">&#123; value: 'Javascript', done: false &#125;</span></span><br><span class="line"><span class="comment">----------</span></span><br><span class="line"><span class="comment">false</span></span><br><span class="line"><span class="comment">Perl</span></span><br><span class="line"><span class="comment">&#123; value: 'Perl', done: false &#125;</span></span><br><span class="line"><span class="comment">----------</span></span><br><span class="line"><span class="comment">false</span></span><br><span class="line"><span class="comment">Python</span></span><br><span class="line"><span class="comment">&#123; value: 'Python', done: false &#125;</span></span><br><span class="line"><span class="comment">----------</span></span><br><span class="line"><span class="comment">&#123; value: undefined, done: true &#125;</span></span><br><span class="line"><span class="comment">true </span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="实现可迭代对象"><a href="#实现可迭代对象" class="headerlink" title="实现可迭代对象"></a><center>实现可迭代对象</center></h3><p>普通的数组内的值可以用 for..of 循环出来 , 因为是在数组内部实现了迭代器 , 因为这些在底层就已经定义好了的。平时使用起来没感觉到而已。</p><p>但是我们自己定义的对象是没有这种功能的,平常实例化的时候多数只是传递一个参数,但是当我们给对象传递了一个数组的时候呢,如何取去操作多个对象呢。</p><p>这里就需要在我们自己定义的类里面去实现迭代器接口</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Player</span> </span>&#123;</span><br><span class="line"><span class="keyword">constructor</span>(list)&#123;</span><br><span class="line"><span class="keyword">this</span>.list = list;</span><br><span class="line">&#125;</span><br><span class="line">[<span class="built_in">Symbol</span>.iterator]()&#123;   <span class="comment">//[Symbol.iterator]()&#123;&#125;</span></span><br><span class="line"><span class="keyword">let</span> current = <span class="number">0</span>;    <span class="comment">//索引</span></span><br><span class="line"><span class="keyword">let</span> that = <span class="keyword">this</span>;     <span class="comment">//this 在不同作用域的里代表的内容不一样 ; this在这里是指整个类对象;所以这个过程是把整个Player对象赋给that</span></span><br><span class="line"><span class="keyword">return</span> &#123;             <span class="comment">//因为在后面this的内容会发现变化,所以先把this转移到that中</span></span><br><span class="line">next()&#123;         <span class="comment">//接口里的一个方法,这里是实现next接口</span></span><br><span class="line">                <span class="keyword">return</span> current &lt; that.list.length ? &#123;<span class="attr">value</span>:that.list[current++], <span class="attr">done</span>:<span class="literal">false</span>&#125; : &#123;<span class="attr">done</span>:<span class="literal">true</span>&#125;;</span><br><span class="line">                <span class="comment">//当前索引小于传进来的数组的长度就把当前这个值赋给value</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> player = <span class="keyword">new</span> Player([<span class="string">'Curry'</span>, <span class="string">'Harden'</span>, <span class="string">'LeBron'</span>]);</span><br><span class="line"><span class="built_in">console</span>.log(player)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> tmp <span class="keyword">of</span> player)&#123;</span><br><span class="line"><span class="built_in">console</span>.log(tmp);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">Player &#123; list: [ 'Curry', 'Harden', 'LeBron' ] &#125;</span></span><br><span class="line"><span class="comment">Curry</span></span><br><span class="line"><span class="comment">Harden</span></span><br><span class="line"><span class="comment">LeBron</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>因为在Player类里面实现了迭代器接口,所以我们才能用 for…of 遍历</p><p><code>Player { list: [ &#39;Curry&#39;, &#39;Harden&#39;, &#39;LeBron&#39; ] }</code> Player 对象里是个键值对<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改一下构造器,观察结果</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Player</span> </span>&#123;</span><br><span class="line"><span class="keyword">constructor</span>(AAA)&#123;</span><br><span class="line"><span class="keyword">this</span>.BBBlist = AAA;</span><br><span class="line">&#125;</span><br><span class="line">[<span class="built_in">Symbol</span>.iterator]()&#123;   </span><br><span class="line"><span class="keyword">let</span> current = <span class="number">0</span>;    </span><br><span class="line"><span class="keyword">let</span> that = <span class="keyword">this</span>;    </span><br><span class="line"><span class="keyword">return</span> &#123;            </span><br><span class="line">next()&#123;         </span><br><span class="line">                <span class="keyword">return</span> current &lt; that.BBBlist.length ? &#123;<span class="attr">value</span>:that.BBBlist[current++], <span class="attr">done</span>:<span class="literal">false</span>&#125; : &#123;<span class="attr">done</span>:<span class="literal">true</span>&#125;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">Player &#123; BBBlist: [ 'Curry', 'Harden', 'LeBron' ] &#125;</span></span><br><span class="line"><span class="comment">Curry</span></span><br><span class="line"><span class="comment">Harden</span></span><br><span class="line"><span class="comment">LeBron</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改参数,观察结果</span></span><br><span class="line"><span class="keyword">let</span> player = <span class="keyword">new</span> Player(<span class="string">'Curry'</span>);</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">Player &#123; BBBlist: 'Curry' &#125;</span></span><br><span class="line"><span class="comment">C</span></span><br><span class="line"><span class="comment">u</span></span><br><span class="line"><span class="comment">r</span></span><br><span class="line"><span class="comment">r</span></span><br><span class="line"><span class="comment">y</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> player = <span class="keyword">new</span> Player();</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">Player &#123; BBBlist: undefined &#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="简单迭代器"><a href="#简单迭代器" class="headerlink" title="简单迭代器"></a><center>简单迭代器</center></h3><ul><li>function* {  } : 迭代生成器</li><li>yield : 迭代返回</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span>* <span class="title">myGenerator</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">yield</span> <span class="string">'一'</span>;</span><br><span class="line"><span class="keyword">yield</span> <span class="string">'条'</span>;</span><br><span class="line"><span class="keyword">yield</span> <span class="string">'大'</span>;</span><br><span class="line"><span class="keyword">yield</span> <span class="string">'河'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> val <span class="keyword">of</span> myGenerator())&#123;  <span class="comment">//注意这里是 myGenerator() </span></span><br><span class="line"><span class="built_in">console</span>.log(val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">一</span></span><br><span class="line"><span class="comment">条</span></span><br><span class="line"><span class="comment">大</span></span><br><span class="line"><span class="comment">河</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这里可以用在读取数据库结果集时</span></span><br><span class="line"><span class="function"><span class="keyword">function</span>* <span class="title">countdown</span>(<span class="params">begin</span>)</span>&#123;</span><br><span class="line"><span class="keyword">while</span>(begin &gt; <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">yield</span> begin--; <span class="comment">//先返回再自减</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> tmp <span class="keyword">of</span> countdown(<span class="number">5</span>))&#123;</span><br><span class="line"><span class="built_in">console</span>.log(tmp);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">5</span></span><br><span class="line"><span class="comment">4</span></span><br><span class="line"><span class="comment">3</span></span><br><span class="line"><span class="comment">2</span></span><br><span class="line"><span class="comment">1</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>yield 就类似方法里的 return , return 一般都是只有一个 , 而 yield 能有多个 , 并且每次能返回不同的内容</p><p>👉<a href="https://zhuanlan.zhihu.com/p/36699390" target="_blank" rel="noopener">理解 ES6 Generator 函数 – yield</a></p><h3 id="实现可迭代对象-yield"><a href="#实现可迭代对象-yield" class="headerlink" title="实现可迭代对象 - yield"></a><center>实现可迭代对象 - yield</center></h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyList</span> </span>&#123;</span><br><span class="line"><span class="keyword">constructor</span>(list)&#123;</span><br><span class="line"><span class="keyword">this</span>.list = list;</span><br><span class="line"><span class="keyword">this</span>[<span class="built_in">Symbol</span>.iterator] = <span class="function"><span class="keyword">function</span>*(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">let</span> current = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">let</span> that = <span class="keyword">this</span>;</span><br><span class="line"><span class="keyword">while</span>(current &lt; that.list.length)&#123;</span><br><span class="line"><span class="keyword">yield</span> that.list[current++];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> mylist = <span class="keyword">new</span> MyList([<span class="number">100</span>, <span class="number">200</span>, <span class="number">300</span>, <span class="number">400</span>, <span class="number">500</span>]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> val <span class="keyword">of</span> mylist)&#123;</span><br><span class="line"><span class="built_in">console</span>.log(val);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Let&quot;&gt;&lt;a href=&quot;#Let&quot; class=&quot;headerlink&quot; title=&quot;Let&quot;&gt;&lt;/a&gt;&lt;center&gt;Let&lt;/center&gt;&lt;/h3&gt;&lt;h4 id=&quot;变量i的作用域&quot;&gt;&lt;a href=&quot;#变量i的作用域&quot; class=&quot;headerlink&quot; title=&quot;变量i的作用域&quot;&gt;&lt;/a&gt;变量i的作用域&lt;/h4&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//ES5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//ES6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(i); &lt;span class=&quot;comment&quot;&gt;//变量i未找到&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;重复定义&quot;&gt;&lt;a href=&quot;#重复定义&quot; class=&quot;headerlink&quot; title=&quot;重复定义&quot;&gt;&lt;/a&gt;重复定义&lt;/h4&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (i) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; value = &lt;span class=&quot;string&quot;&gt;&quot;hello&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; value = &lt;span class=&quot;string&quot;&gt;&quot;world&quot;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//重复定义错误&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="ECMAScript" scheme="http://www.orekiyuta.cn/tags/ECMAScript/"/>
    
      <category term="ES6" scheme="http://www.orekiyuta.cn/tags/ES6/"/>
    
  </entry>
  
  <entry>
    <title>Nice to use Vue.js</title>
    <link href="http://www.orekiyuta.cn/archives/NiceToUseVue/"/>
    <id>http://www.orekiyuta.cn/archives/NiceToUseVue/</id>
    <published>2019-12-09T07:51:26.000Z</published>
    <updated>2019-12-12T07:42:19.295Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Start"><a href="#Start" class="headerlink" title="Start"></a><center>Start</center></h2><h3 id="Vue-cli-版本-2x"><a href="#Vue-cli-版本-2x" class="headerlink" title="Vue-cli 版本 (2x)"></a>Vue-cli 版本 (2x)</h3><p><strong>下文基于2x版本 , 版本跟进需要查看官方文档 👉<a href="https://cli.vuejs.org/zh/" target="_blank" rel="noopener">Vue CLI</a></strong></p><p>先查看一下 Vue-cli 项目构建工具版本信息并安装 Vue-cli </p><ul><li><code>npm show vue-cli</code>  查看 Vue-cli 的版本信息</li><li><code>npm install -g vue-cli@2.9.6</code> 选择最新版本</li><li><code>vue -V</code> 版本确认</li><li><code>vue -h</code> 查看帮助</li></ul><h3 id="Vue-cli-模板"><a href="#Vue-cli-模板" class="headerlink" title="Vue-cli 模板"></a>Vue-cli 模板</h3><p>由于用 Vue-cli 工具初始化项目是基于某些模板下初始化的 , 所以先查看下官方推荐的模板 👉<a href="https://github.com/vuejs-templates" target="_blank" rel="noopener">vuejs-templates</a></p><p><img src="/images/Vue2/01.png" alt></p><ul><li>这里就采用生态较好的 webpack  👉<a href="http://vuejs-templates.github.io/webpack/" target="_blank" rel="noopener">官方说明文档</a></li></ul><h3 id="Vue-cli-初始化项目"><a href="#Vue-cli-初始化项目" class="headerlink" title="Vue-cli 初始化项目"></a>Vue-cli 初始化项目</h3><p>查看下如何初始化</p><p><img src="/images/Vue2/01.png" alt></p><ul><li>两种方式初始化 : 一种是基于官方模板 , 另一种基于第三方模板</li></ul><a id="more"></a><h2 id="创建-webpack-工程"><a href="#创建-webpack-工程" class="headerlink" title="创建 webpack 工程"></a><center>创建 webpack 工程</center></h2><h3 id="安装选项"><a href="#安装选项" class="headerlink" title="安装选项"></a>安装选项</h3><p><img src="/images/Vue2/03.png" alt></p><ul><li><p><code>Runtime + Compiler</code> 一般选择这个 , 安装运行时和编译器 , 一般有很多动态组件 , 只安装运行时的话不能动态编译</p><p>  <img src="/images/Vue2/03-1.png" alt></p></li><li><p><code>Install vue-router</code> 路由</p></li><li><code>Use ESLint to lint your code</code> ES语法检测器</li><li><code>Set up unit tests</code> 单元测试</li><li><code>Setup e2e tests with Nightwatch</code> e2e测试</li><li><code>Should we run npm install for you after the project has been created</code> 选择包管理器</li></ul><h3 id="文件结构"><a href="#文件结构" class="headerlink" title="文件结构"></a>文件结构</h3><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── build/                      <span class="comment"># webpack config files</span></span><br><span class="line">│   └── ...</span><br><span class="line">├── config/</span><br><span class="line">│   ├── index.js                <span class="comment"># main project config</span></span><br><span class="line">│   └── ...</span><br><span class="line">├── src/</span><br><span class="line">│   ├── main.js                 <span class="comment"># app entry file</span></span><br><span class="line">│   ├── App.vue                 <span class="comment"># main app component</span></span><br><span class="line">│   ├── components/             <span class="comment"># ui components</span></span><br><span class="line">│   │   └── ...</span><br><span class="line">│   └── assets/                 <span class="comment"># module assets (processed by webpack)</span></span><br><span class="line">│       └── ...</span><br><span class="line">├── static/                     <span class="comment"># pure static assets (directly copied)</span></span><br><span class="line">├── test/</span><br><span class="line">│   └── unit/                   <span class="comment"># unit tests</span></span><br><span class="line">│   │   ├── specs/              <span class="comment"># test spec files</span></span><br><span class="line">│   │   ├── eslintrc            <span class="comment"># config file for eslint with extra settings only for unit tests</span></span><br><span class="line">│   │   ├── index.js            <span class="comment"># test build entry file</span></span><br><span class="line">│   │   ├── jest.conf.js        <span class="comment"># Config file when using Jest for unit tests</span></span><br><span class="line">│   │   └── karma.conf.js       <span class="comment"># test runner config file when using Karma for unit tests</span></span><br><span class="line">│   │   ├── setup.js            <span class="comment"># file that runs before Jest runs your unit tests</span></span><br><span class="line">│   └── e2e/                    <span class="comment"># e2e tests</span></span><br><span class="line">│   │   ├── specs/              <span class="comment"># test spec files</span></span><br><span class="line">│   │   ├── custom-assertions/  <span class="comment"># custom assertions for e2e tests</span></span><br><span class="line">│   │   ├── runner.js           <span class="comment"># test runner script</span></span><br><span class="line">│   │   └── nightwatch.conf.js  <span class="comment"># test runner config file</span></span><br><span class="line">├── .babelrc                    <span class="comment"># babel config</span></span><br><span class="line">├── .editorconfig               <span class="comment"># indentation, spaces/tabs and similar settings for your editor</span></span><br><span class="line">├── .eslintrc.js                <span class="comment"># eslint config</span></span><br><span class="line">├── .eslintignore               <span class="comment"># eslint ignore rules</span></span><br><span class="line">├── .gitignore                  <span class="comment"># sensible defaults for gitignore</span></span><br><span class="line">├── .postcssrc.js               <span class="comment"># postcss config</span></span><br><span class="line">├── index.html                  <span class="comment"># index.html template</span></span><br><span class="line">├── package.json                <span class="comment"># build scripts and dependencies</span></span><br><span class="line">└── README.md                   <span class="comment"># Default README file</span></span><br></pre></td></tr></table></figure><ul><li>更多详细可查看官方文档 👉<a href="http://vuejs-templates.github.io/webpack/" target="_blank" rel="noopener">webpack</a></li></ul><h2 id="运行与发布-webpack"><a href="#运行与发布-webpack" class="headerlink" title="运行与发布 webpack"></a><center>运行与发布 webpack</center></h2><h3 id="npm-run-dev-npm-start"><a href="#npm-run-dev-npm-start" class="headerlink" title="npm run dev / npm start"></a>npm run dev / npm start</h3><p><img src="/images/Vue2/04.png" alt></p><ul><li><p><code>npm run dev</code> 只是个简写形式 , 实际运行的命令写在项目根目录下的 package.json 中</p><p>  <img src="/images/Vue2/04-1.png" alt></p></li><li><p>可见 <code>npm run dev</code> 和 <code>npm start</code> 是一个效果</p><p>  <img src="/images/Vue2/04-5.png" alt>   </p></li></ul><h3 id="设置依赖"><a href="#设置依赖" class="headerlink" title="设置依赖"></a>设置依赖</h3><p>设置生产环境的依赖列表、指定 vue 和 vue-router 版本依赖</p><p><img src="/images/Vue2/04-2.png" alt></p><ul><li><p>可修改为当前最新版本 v2.6.10 (2019.12.09)</p></li><li><p><code>^</code> 符号的意思是使依赖包向后兼容</p><ul><li><p>比如当前我的依赖为 <code>&quot;vue&quot;: &quot;^2.6.10&quot;</code> </p></li><li><p>然后过了一个月 , 假设 vue 的版本更新到了 2.8.10</p></li><li><p>当我们再次执行 <code>npm install</code> 的时候 , 它会更新 <strong>小版本号</strong>  和 <strong>补丁版本号</strong>  , 依赖就变成了 <code>&quot;vue&quot;:&quot;2.8.10&quot;</code></p></li><li><p>然后过了半年 , 假设 vue 的版本更新到了 3.1.0 , 而它的 2.0 版本最后的版本号为 2.9.10</p></li><li><p>同样执行 <code>npm install</code> , 依赖变成 <code>&quot;vue&quot;:&quot;2.9.10&quot;</code></p></li><li><p><strong>大版本号</strong> 不会改变</p></li><li><p>去掉 <code>^</code> 符号可精确指定版本 , 避免版本更新影响</p></li></ul></li></ul><h3 id="npm-版本号规范"><a href="#npm-版本号规范" class="headerlink" title="npm 版本号规范"></a>npm 版本号规范</h3><p>如果一个项目打算与别人分享，应该从 1.0.0 版本开始。以后要升级版本应该遵循以下标准：</p><ul><li><p>补丁版本(修订版本) : 解决了 Bug 或者一些较小的更改，增加最后一位数字，比如 1.0.1</p></li><li><p>小版本(次版本) : 增加了新特性，同时不会影响之前的版本，增加中间一位数字，比如 1.1.0</p></li><li><p>大版本(主版本) : 大改版，无法兼容之前的，增加第一位数字，比如 2.0.0</p><p>  <img src="/images/Vue2/04-3.png" alt></p></li></ul><p>了解了提供者的版本规范后， npm 包使用者就可以针对自己的需要填写依赖包的版本规则。</p><p>作为使用者，我们可以在 package.json 文件中写明我们可以接受这个包的更新程度（假设当前依赖的是 2.6.1 版本）:</p><ul><li><p>如果只打算接受补丁版本的更新（也就是最后一位的改变），就可以这么写：</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2.6</span><br><span class="line">2.6.x</span><br><span class="line">~2.6.1   //波浪号只会更新补丁版本号</span><br></pre></td></tr></table></figure></li><li><p>如果接受小版本的更新（第二位的改变），就可以这么写：</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">2.x</span><br><span class="line">^2.0.1</span><br></pre></td></tr></table></figure></li><li><p>如果可以接受大版本的更新（自然接受小版本和补丁版本的改变），就可以这么写：</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x</span><br></pre></td></tr></table></figure></li></ul><p>总的来说、三种版本变化类型，接受依赖包哪种类型的更新，就把版本号准确写到前一位。</p><h3 id="浏览页面"><a href="#浏览页面" class="headerlink" title="浏览页面"></a>浏览页面</h3><p><code>npm run dev</code> 运行查看一下</p><p><img src="/images/Vue2/04-4.png" alt></p><h3 id="npm-run-build"><a href="#npm-run-build" class="headerlink" title="npm run build"></a>npm run build</h3><p><code>npm run build</code> 打包发布</p><p><img src="/images/Vue2/05.png" alt></p><ul><li><p>这个执行过程 把在开发环境写好的<strong>代码</strong> <strong>编译</strong>并<strong>加密</strong>后 打包成 前端页面的<strong>静态文件</strong></p></li><li><p>打包完成的文件在项目根目录下的 dist文件夹内</p><p>  <img src="/images/Vue2/05-1.png" alt></p></li><li><p><code>code .</code>  VScode 打开当前目录命令</p></li><li>`shift + alt + f  格式化代码</li></ul><h2 id="引入组件库"><a href="#引入组件库" class="headerlink" title="引入组件库"></a><center>引入组件库</center></h2><p>作为个人开发 , 实际写的时候 , 一个个组件去写的话工作量就太大的了。这时不妨采用一些开源的组件库。</p><ul><li><a href="https://element.eleme.io/#/zh-CN" target="_blank" rel="noopener">ElementUI</a> </li><li><a href="https://www.iviewui.com/" target="_blank" rel="noopener">ViewUI</a> </li><li><a href="https://www.antdv.com/docs/vue/introduce-cn/" target="_blank" rel="noopener">Ant Design of Vue</a> </li><li><a href="https://youzan.github.io/vant/#/zh-CN/intro" target="_blank" rel="noopener">Vant</a> </li><li><a href="https://vuetifyjs.com/zh-Hans/" target="_blank" rel="noopener">Vuetify</a> </li><li><a href="https://bootstrap-vue.js.org/" target="_blank" rel="noopener">BootstrapVue</a> </li><li>etc.</li></ul><h3 id="引入Bootstrap组件"><a href="#引入Bootstrap组件" class="headerlink" title="引入Bootstrap组件"></a>引入Bootstrap组件</h3><ol><li><p><code>npm install bootstrap --save-exact</code> 引入后 , 就可在 package.json 中看到依赖的 bootstrap 版本了</p></li><li><p>在 <code>/src/main.js</code> 中添加 <code>import &#39;bootstrap/dist/css/bootstrap.min.css&#39;</code></p><p> <img src="/images/Vue2/06.png" alt></p></li><li><p>测试引用是否生效</p><p> 在 <code>/src/App.vue</code> 中添加测试代码(这里的用法就和普通的用法一样)</p><p> <img src="/images/Vue2/06-1.png" alt></p></li><li><p><code>npm run dev</code> 预览下效果</p><p> <img src="/images/Vue2/06-2.png" alt></p></li><li><p>熟悉后就可按照官方提供的组件形式使用</p></li></ol><h2 id="axios"><a href="#axios" class="headerlink" title="axios"></a><center>axios</center></h2><p>去官网查看一下👉<a href="https://github.com/axios/axios" target="_blank" rel="noopener">axios</a></p><h3 id="安装axios"><a href="#安装axios" class="headerlink" title="安装axios"></a>安装axios</h3><p><code>npm install --save axios vue-axios</code></p><h3 id="注册组件"><a href="#注册组件" class="headerlink" title="注册组件"></a>注册组件</h3><p>在<code>/src.main.js</code>中引入 axios 和 vue-axios , 然后注册到 Vue 全局组件中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import axios from &apos;axios&apos;</span><br><span class="line">import VueAxios from &apos;vue-axios&apos;</span><br><span class="line">Vue.use(VueAxios, axios)</span><br></pre></td></tr></table></figure></p><h3 id="尝试访问-API"><a href="#尝试访问-API" class="headerlink" title="尝试访问 API"></a>尝试访问 API</h3><p>在 /src/components/HelloWorld.vue 中写入<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">pre</span>&gt;</span>&#123;&#123;content&#125;&#125;<span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">  name: <span class="string">"HelloWorld"</span>,</span></span><br><span class="line"><span class="undefined">  data() &#123;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">      content: <span class="literal">null</span></span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined">  mounted() &#123;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">this</span>.axios</span></span><br><span class="line"><span class="actionscript">    .get(<span class="string">'https://api.coindesk.com/v1/bpi/currentprice.json'</span>)</span></span><br><span class="line"><span class="javascript">    .then(<span class="function"><span class="params">response</span> =&gt;</span> (<span class="keyword">this</span>.content = response))</span></span><br><span class="line"><span class="undefined">    </span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><ul><li>首先设置了个 content 变量来保存数据 </li><li>然后在 Vue 的生命周期函数 mounted 中通过 axios 请求数据</li><li>设置了 response 变量接受数据然后再赋给 content</li></ul><p>运行一下、可见浏览页面有数据返回了</p><p><img src="/images/Vue2/06-3.png" alt></p><h2 id="组件结构"><a href="#组件结构" class="headerlink" title="组件结构"></a><center>组件结构</center></h2><p>组件同一放在 <code>/src/components</code> 中<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript"><span class="comment">// import ...</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">    name: <span class="string">'HelloWorld'</span>,</span></span><br><span class="line"><span class="undefined">    data () &#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">            msg: <span class="string">'Welcome to Your Vue.js App'</span></span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Add "scoped" attribute to limit CSS to this component only --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">h1 &#123;</span></span><br><span class="line"><span class="undefined">    font-weight: normal;</span></span><br><span class="line"><span class="undefined">    color: red;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>一个组件内一般由 <code>&lt;template/&gt; &lt;script/&gt; &lt;style/&gt;</code> 组成</p><h3 id="lt-template-gt"><a href="#lt-template-gt" class="headerlink" title="&lt;template/&gt;"></a><code>&lt;template/&gt;</code></h3><p>组件标签</p><h3 id="lt-script-gt"><a href="#lt-script-gt" class="headerlink" title="&lt;script/&gt;"></a><code>&lt;script/&gt;</code></h3><p>Js 脚本用的是 ES6 语法</p><ul><li><code>import ...</code> 导入各种库</li><li><code>export default { }</code> 输出该组件</li><li><code>data ()</code> data 是方法</li></ul><h3 id="lt-style-gt"><a href="#lt-style-gt" class="headerlink" title="&lt;style/&gt;"></a><code>&lt;style/&gt;</code></h3><p>该组件所应用的样式</p><ul><li><code>scoped</code> 属性 : 加上该属性说这个样式单只对该组件产生影响 , 一般还是加上 , 避免影响其他组件和全局设置</li></ul><h2 id="工程结构"><a href="#工程结构" class="headerlink" title="工程结构"></a><center>工程结构</center></h2><p>webpack模板生成的工程结构<br>👉<a href="https://webpack.js.org/" target="_blank" rel="noopener">webpack</a><br>👉<a href="https://www.webpackjs.com/" target="_blank" rel="noopener">webpack-cn</a></p><p>常用结构<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── build/                      <span class="comment"># webpack config files</span></span><br><span class="line">│   └── ...</span><br><span class="line">├── config/</span><br><span class="line">│   ├── index.js                <span class="comment"># main project config</span></span><br><span class="line">│   └── ...</span><br><span class="line">├── src/</span><br><span class="line">│   ├── main.js                 <span class="comment"># app entry file</span></span><br><span class="line">│   ├── App.vue                 <span class="comment"># main app component</span></span><br><span class="line">│   ├── components/             <span class="comment"># ui components</span></span><br><span class="line">│   │   └── ...</span><br><span class="line">│   └── assets/                 <span class="comment"># module assets (processed by webpack)</span></span><br><span class="line">│       └── ...</span><br><span class="line">├── static/                     <span class="comment"># pure static assets (directly copied)</span></span><br><span class="line">├── .babelrc                    <span class="comment"># babel config</span></span><br><span class="line">├── .editorconfig               <span class="comment"># indentation, spaces/tabs and similar settings for your editor</span></span><br><span class="line">├── .eslintrc.js                <span class="comment"># eslint config</span></span><br><span class="line">├── .eslintignore               <span class="comment"># eslint ignore rules</span></span><br><span class="line">├── .gitignore                  <span class="comment"># sensible defaults for gitignore</span></span><br><span class="line">├── .postcssrc.js               <span class="comment"># postcss config</span></span><br><span class="line">├── index.html                  <span class="comment"># index.html template</span></span><br><span class="line">├── package.json                <span class="comment"># build scripts and dependencies</span></span><br><span class="line">└── README.md                   <span class="comment"># Default README file</span></span><br></pre></td></tr></table></figure></p><ul><li>build : webpack打包工具设置</li><li>config : 整个工程配置文件</li><li>src : 开发源文件 , 基本开发都在这里</li><li>static : 静态文件 , 编译时会自动直接复制到发布文件夹</li><li>index.html : 入口文件</li></ul><h2 id="执行过程⭐"><a href="#执行过程⭐" class="headerlink" title="执行过程⭐"></a><center>执行过程⭐</center></h2><p>关注这个五个文件 :  <strong>index.html</strong>  、 <strong>main.js</strong>  、 <strong>App.vue</strong>  、 <strong>index.js</strong>  、 <strong>HelloWorld.vue</strong></p><p><img src="/images/Vue2/06-5.png" alt></p><ul><li><p>首先是在 <strong>main.js</strong> 中实例化 Vue 对象 , Vue 对象 el 属性选择了 id=”app” 的元素 , 就是 <strong>index.html</strong> 中的 <code>&lt;div id=&quot;app&quot;&gt;&lt;/div&gt;</code></p></li><li><p>然后定义了 Vue 对象的 template 为 <code>&lt;App/&gt;</code> , 这里我们先注释掉 components 观察一下页面元素</p><p>  <img src="/images/Vue2/06-4.png" alt></p><ul><li>可见 template 中定义的 <code>&lt;App/&gt;</code> 标签会替换掉 <strong>index.html</strong> 中的 <code>&lt;div id=&quot;app&quot;&gt;&lt;/div&gt;</code></li><li>template 中定义的标签 <strong>不区分大小写</strong></li></ul></li><li><p>同时也指定了路由元素 router , 详写为 <code>router : router</code></p></li><li><p>接着在 Vue 对象中引入 <strong>子组件 App</strong> , 也就是 <strong>App.vue</strong> , 可见 <strong>main.js</strong> 顶部引入的文件</p></li><li><p>同理 , <strong>子组件会替换掉父组件的标签</strong> , 所以最终页面的标签就变成了 App.vue 中的 <code>&lt;div id=&quot;app&quot;&gt;&lt;/div&gt;</code></p><p>  <img src="/images/Vue2/06-6.png" alt></p><ul><li>整个替换流程为 : <strong>index.html</strong> <code>&lt;div id=&quot;app&quot;&gt;&lt;/div&gt;</code> ← <strong>main.js</strong> <code>&lt;App/&gt;</code>  ←  <strong>App.vue</strong> <code>&lt;div id=&quot;app&quot;&gt;&lt;/div&gt;</code></li></ul></li><li><p>最后路由的部分就比较明朗了 , 先在 <strong>index.js</strong> 中通过 <strong>组件名</strong> 引入自定义的组件 , 然后显示在预先在 <strong>App.vue</strong> 占位的 <code>&lt;router-view&gt;</code> 中</p></li><li><p>对于这些文件的组装方式就是 webpack 需要做的了 , 大概是把 .vue 组件和相关 Js文件统一打包组装起来最终形成单页静态文件 ; 执行 <code>npm run build</code> 就可看到生成的哪些文件</p></li></ul><h2 id="路由⭐⭐⭐"><a href="#路由⭐⭐⭐" class="headerlink" title="路由⭐⭐⭐"></a><center>路由⭐⭐⭐</center></h2><p>👉<a href="https://router.vuejs.org/" target="_blank" rel="noopener">Vue Router</a> 👉<a href="https://router.vuejs.org/zh/" target="_blank" rel="noopener">Vue Router-cn</a></p><h3 id="安装路由"><a href="#安装路由" class="headerlink" title="安装路由"></a>安装路由</h3><p><code>npm install vue-router</code></p><h3 id="路由设置"><a href="#路由设置" class="headerlink" title="路由设置"></a>路由设置</h3><p><img src="/images/Vue2/07.png" alt></p><ul><li>在 <code>/src/router/index.js</code> 中设置</li><li>首先在 components 文件夹中写好一个组件 , 例如 HelloWorld.vue</li><li>然后 import 导入该组件 , 最后在 routes 中把该组件绑定 URL , 这样就完成了 URL 对组件的映射</li></ul><h3 id="静态路由例子"><a href="#静态路由例子" class="headerlink" title="静态路由例子"></a>静态路由例子</h3><h4 id="关键点"><a href="#关键点" class="headerlink" title="关键点"></a>关键点</h4><ul><li><strong>🎈path:’’</strong></li><li><strong>🎈component:</strong></li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><p>先写三个组件 About 、HelloWord 、 News , 然后设置路由预览一下</p><p>About.vue<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>About Page<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>HelloWord.vue<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>News.vue<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>News Page<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>index.js<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> Router <span class="keyword">from</span> <span class="string">'vue-router'</span></span><br><span class="line"><span class="keyword">import</span> HelloWorld <span class="keyword">from</span> <span class="string">'@/components/HelloWorld'</span></span><br><span class="line"><span class="keyword">import</span> About <span class="keyword">from</span> <span class="string">'@/components/About'</span></span><br><span class="line"><span class="keyword">import</span> News <span class="keyword">from</span> <span class="string">'@/components/News'</span></span><br><span class="line">Vue.use(Router)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router(&#123;</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: <span class="string">'/'</span>,</span><br><span class="line">      name: <span class="string">'HelloWorld'</span>,</span><br><span class="line">      component: HelloWorld</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: <span class="string">'/about'</span>,</span><br><span class="line">      name: <span class="string">'About'</span>,</span><br><span class="line">      component: About</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: <span class="string">'/news'</span>,</span><br><span class="line">      name: <span class="string">'News'</span>,</span><br><span class="line">      component: News</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>App.vue<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./assets/logo.png"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 使用 router-link 组件来导航. --&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 通过传入 `to` 属性指定链接. --&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- &lt;router-link&gt; 默认会被渲染成一个 `&lt;a&gt;` 标签 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/"</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/news"</span>&gt;</span>新闻<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/about"</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 路由出口 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 路由匹配到的组件将渲染在这里 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-view</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">  name: <span class="string">"App"</span></span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-id">#app</span> &#123;</span></span><br><span class="line"><span class="undefined">  font-family: "Avenir", Helvetica, Arial, sans-serif;</span></span><br><span class="line"><span class="undefined">  -webkit-font-smoothing: antialiased;</span></span><br><span class="line"><span class="undefined">  -moz-osx-font-smoothing: grayscale;</span></span><br><span class="line"><span class="undefined">  text-align: center;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">color</span>: <span class="selector-id">#2c3e50</span>;</span></span><br><span class="line"><span class="undefined">  margin-top: 60px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="页面"><a href="#页面" class="headerlink" title="页面"></a>页面</h4><p><img src="/images/Vue2/08.png" alt></p><p><img src="/images/Vue2/08-1.png" alt></p><p><img src="/images/Vue2/08-2.png" alt></p><h3 id="动态路由"><a href="#动态路由" class="headerlink" title="动态路由"></a>动态路由</h3><p>指在URL路径中含有动态参数的路由，比如说：/player/1, /player/2, /player/3 …</p><h4 id="关键点-1"><a href="#关键点-1" class="headerlink" title="关键点"></a>关键点</h4><p><strong>🎈<code>path: &#39;/:X &#39;</code></strong></p><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><p>先创建组件并设置路由</p><p>Player.vue<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>球员页面<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; detail &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">        name: <span class="string">"Player"</span>,</span></span><br><span class="line"><span class="undefined">        data() &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="undefined">                detail: &#123;&#125;</span></span><br><span class="line"><span class="undefined">            &#125;;</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        mounted() &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 接受url参数id</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.detail = <span class="keyword">this</span>.getPlayer(<span class="keyword">this</span>.$route.params.uid);</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        /*</span></span><br><span class="line"><span class="javascript">        beforeRouteUpdate(to, <span class="keyword">from</span>, next) &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.detail = <span class="keyword">this</span>.getPlayer(to.params.uid);</span></span><br><span class="line"><span class="undefined">            next();</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        */</span></span><br><span class="line"><span class="undefined">        methods: &#123;</span></span><br><span class="line"><span class="undefined">            getPlayer(uid) &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">switch</span> (uid) &#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">case</span> <span class="string">'1'</span>:</span></span><br><span class="line"><span class="actionscript">                        <span class="keyword">return</span> &#123;uid: <span class="number">1</span>,name: <span class="string">'库里'</span>,point: <span class="number">26</span>&#125;;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">case</span> <span class="string">'2'</span>:</span></span><br><span class="line"><span class="actionscript">                        <span class="keyword">return</span> &#123;uid: <span class="number">2</span>,name: <span class="string">'哈登'</span>,point: <span class="number">30</span>&#125;;</span></span><br><span class="line"><span class="actionscript">                    <span class="keyword">default</span>:</span></span><br><span class="line"><span class="actionscript">                        <span class="keyword">return</span> &#123;uid: <span class="number">-1</span>&#125;;</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>index.js<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> Router <span class="keyword">from</span> <span class="string">'vue-router'</span></span><br><span class="line"><span class="keyword">import</span> Player <span class="keyword">from</span> <span class="string">'@/components/Player'</span></span><br><span class="line"></span><br><span class="line">Vue.use(Router)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router(&#123;</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: <span class="string">'/player/:uid'</span>,</span><br><span class="line">      name: <span class="string">'Player'</span>,</span><br><span class="line">      component: Player</span><br><span class="line">  &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>App.vue<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./assets/logo.png"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/"</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/player/1"</span>&gt;</span>库里<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/player/2"</span>&gt;</span>哈登<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-view</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-view</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">  name: <span class="string">"App"</span></span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-id">#app</span> &#123;</span></span><br><span class="line"><span class="undefined">  font-family: "Avenir", Helvetica, Arial, sans-serif;</span></span><br><span class="line"><span class="undefined">  -webkit-font-smoothing: antialiased;</span></span><br><span class="line"><span class="undefined">  -moz-osx-font-smoothing: grayscale;</span></span><br><span class="line"><span class="undefined">  text-align: center;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">color</span>: <span class="selector-id">#2c3e50</span>;</span></span><br><span class="line"><span class="undefined">  margin-top: 60px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><p><img src="/images/Vue2/09.png" alt></p><ul><li><p>运行测试页面发现在 “库里” 和 “哈登” 之间切换时 , URL有切换但是数据不更新 , 始终为初次选项的数据</p></li><li><p>原因在于进入页面时 , Player 组件还没实例化 </p></li><li><p>当我们点击第一个选项时 , 例如 “库里” ; 此时 Player 组件实例化完成 , 不再实例化了 , 也就是执行过 mounted 方法了</p></li><li><p>然后点击 “哈登” , 也不会再执行 mounted 方法了 , 这是 Vue 设计时考虑到的问题 , 为了提高性能不能总是实例化对象 , 这样会对内存消耗大</p></li><li><p>添加  beforeRouteUpdate 方法即可解决此问题 ; 让第二次点击事件进入该方法</p></li></ul><h3 id="嵌套路由"><a href="#嵌套路由" class="headerlink" title="嵌套路由"></a>嵌套路由</h3><p>嵌套路由是指在动态路由的基础上再加上附加的嵌套URL（即：组件），比如说：(/player/:uid/*) /player/1/profile , /player/1/stats 等</p><h4 id="关键点-2"><a href="#关键点-2" class="headerlink" title="关键点"></a>关键点</h4><p><strong>🎈children:[ ]</strong></p><h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><p>Profile.vue<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>球员简介:&#123;&#123;$route.params.uid&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>Stats.vue<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>球员数据:&#123;&#123;$route.params.uid&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>Player.vue<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>球员页面<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>编号：&#123;&#123;detail.uid&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>名字：&#123;&#123;detail.name&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>得分：&#123;&#123;detail.point&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">"profile"</span>&gt;</span>简介<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">"stats"</span>&gt;</span>数据<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-view</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">  name: <span class="string">"Player"</span>,</span></span><br><span class="line"><span class="undefined">  data() &#123;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="undefined">      detail: &#123;&#125;,</span></span><br><span class="line"><span class="actionscript">      profile: <span class="string">""</span>,</span></span><br><span class="line"><span class="actionscript">      stats: <span class="string">""</span></span></span><br><span class="line"><span class="undefined">    &#125;;</span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined">  mounted() &#123;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">this</span>.detail = <span class="keyword">this</span>.getPlayer(<span class="keyword">this</span>.$route.params.uid);</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">this</span>.profile = <span class="string">"/player/"</span> + <span class="keyword">this</span>.$route.params.uid + <span class="string">"/profile"</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">this</span>.stats = <span class="string">"/player/"</span> + <span class="keyword">this</span>.$route.params.uid + <span class="string">"/stats"</span>;</span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="javascript">  beforeRouteUpdate(to, <span class="keyword">from</span>, next) &#123;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">this</span>.detail = <span class="keyword">this</span>.getPlayer(to.params.uid);</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">this</span>.profile = <span class="string">"/player/"</span> + to.params.uid + <span class="string">"/profile"</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">this</span>.stats = <span class="string">"/player/"</span> + to.params.uid + <span class="string">"/stats"</span>;</span></span><br><span class="line"><span class="undefined">    next();</span></span><br><span class="line"><span class="undefined">  &#125;,</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">  methods: &#123;</span></span><br><span class="line"><span class="undefined">    getPlayer(uid) &#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">switch</span> (uid) &#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">case</span> <span class="string">"1"</span>:</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">return</span> &#123; uid: <span class="number">1</span>, name: <span class="string">"库里"</span>, point: <span class="number">26</span> &#125;;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">case</span> <span class="string">"2"</span>:</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">return</span> &#123; uid: <span class="number">2</span>, name: <span class="string">"哈登"</span>, point: <span class="number">30</span> &#125;;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">default</span>:</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">return</span> &#123; uid: <span class="number">-1</span> &#125;;</span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>index.js<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> Router <span class="keyword">from</span> <span class="string">'vue-router'</span></span><br><span class="line"><span class="keyword">import</span> Player <span class="keyword">from</span> <span class="string">'@/components/Player'</span></span><br><span class="line"><span class="keyword">import</span> PlayerProfile <span class="keyword">from</span> <span class="string">'@/components/Profile'</span></span><br><span class="line"><span class="keyword">import</span> PlayerStats <span class="keyword">from</span> <span class="string">'@/components/Stats'</span></span><br><span class="line">Vue.use(Router)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router(&#123;</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: <span class="string">'/player/:uid'</span>,</span><br><span class="line">      name: <span class="string">'Player'</span>,</span><br><span class="line">      component: Player ,</span><br><span class="line">      children: [</span><br><span class="line">        &#123;</span><br><span class="line">            path: <span class="string">'profile'</span>,</span><br><span class="line">            component: PlayerProfile</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            path: <span class="string">'stats'</span>,</span><br><span class="line">            component: PlayerStats</span><br><span class="line">        &#125;,</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>App.vue<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./assets/logo.png"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/"</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/player/1"</span>&gt;</span>库里<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/player/2"</span>&gt;</span>哈登<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-view</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">  name: <span class="string">"App"</span></span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-id">#app</span> &#123;</span></span><br><span class="line"><span class="undefined">  font-family: "Avenir", Helvetica, Arial, sans-serif;</span></span><br><span class="line"><span class="undefined">  -webkit-font-smoothing: antialiased;</span></span><br><span class="line"><span class="undefined">  -moz-osx-font-smoothing: grayscale;</span></span><br><span class="line"><span class="undefined">  text-align: center;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">color</span>: <span class="selector-id">#2c3e50</span>;</span></span><br><span class="line"><span class="undefined">  margin-top: 60px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h4><p><img src="/images/Vue2/10.png" alt></p><p>在一个路由对象中基于原有的组件创建子路由对象 , 在 children 属性内添加多个路由对象 , 然后在原有的组件中添加 <code>&lt;router-view&gt;</code></p><h3 id="路由跳转多种用法"><a href="#路由跳转多种用法" class="headerlink" title="路由跳转多种用法"></a>路由跳转多种用法</h3><h4 id="关键点-3"><a href="#关键点-3" class="headerlink" title="关键点"></a>关键点</h4><ul><li><strong>🎈$router.push</strong></li><li><strong>🎈<code>:to=&quot; &quot;</code></strong></li></ul><h4 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h4><p>现在基于上面的 App.vue 做改进<br>App.vue<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./assets/logo.png"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/player/1"</span>&gt;</span>库里1<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/player/2"</span>&gt;</span>哈登1<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"btnClick(1)"</span>&gt;</span>库里11<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"btnClick(2)"</span>&gt;</span>哈登22<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">"&#123; name: 'Player', params: &#123; uid: 1 &#125;&#125;"</span>&gt;</span>库里111<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">:to</span>=<span class="string">"&#123; path: '/player/2/stats' &#125;"</span>&gt;</span>哈登222<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-view</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">  name: <span class="string">"App"</span>,</span></span><br><span class="line"><span class="undefined">  methods: &#123;</span></span><br><span class="line"><span class="undefined">    btnClick(UID) &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">this</span>.$router.push(&#123; <span class="attr">path</span>: <span class="string">`/player/<span class="subst">$&#123;uid&#125;</span>`</span> &#125;);</span></span><br><span class="line"><span class="actionscript">      <span class="comment">//this.$router.push(&#123; path: `/player/$&#123;uid&#125;/stats` &#125;);</span></span></span><br><span class="line"><span class="actionscript">      <span class="comment">//this.$router.push(&#123; name: 'Player', params: &#123; uid: UID &#125; &#125;);</span></span></span><br><span class="line"><span class="actionscript">      <span class="comment">//this.$router.push(&#123; path: '/player', query: &#123; uid: UID &#125;&#125;); //url-get参数写法</span></span></span><br><span class="line"><span class="actionscript">      <span class="comment">//url履历控制</span></span></span><br><span class="line"><span class="actionscript">      <span class="comment">//this.$router.go(-1);</span></span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-id">#app</span> &#123;</span></span><br><span class="line"><span class="undefined">  font-family: "Avenir", Helvetica, Arial, sans-serif;</span></span><br><span class="line"><span class="undefined">  -webkit-font-smoothing: antialiased;</span></span><br><span class="line"><span class="undefined">  -moz-osx-font-smoothing: grayscale;</span></span><br><span class="line"><span class="undefined">  text-align: center;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">color</span>: <span class="selector-id">#2c3e50</span>;</span></span><br><span class="line"><span class="undefined">  margin-top: 60px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="router-push-重定向"><a href="#router-push-重定向" class="headerlink" title="$router.push 重定向"></a>$router.push 重定向</h4><ol><li><p>传递 path 路径</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">this.$router.push(&#123; path: `/player/$&#123;uid&#125;` &#125;);</span><br></pre></td></tr></table></figure> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">this.$router.push(&#123; path: `/player/$&#123;uid&#125;/stats` &#125;);</span><br></pre></td></tr></table></figure></li><li><p>传递 name 组件名 , 重定向到该组件绑定的 URL 同时传递参数</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">this.$router.push(&#123; name: &apos;Player&apos;, params: &#123; uid: UID &#125; &#125;);</span><br></pre></td></tr></table></figure> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">this.$router.push(&#123; path: &apos;/player&apos;, query: &#123; uid: UID &#125;&#125;);</span><br></pre></td></tr></table></figure></li><li><p>利用浏览器进行前进后退</p><ul><li><code>this.$router.go(-1);</code></li><li><code>this.$router.go(1);</code></li></ul></li></ol><h4 id="to-quot-quot-直接传递对象"><a href="#to-quot-quot-直接传递对象" class="headerlink" title=":to=&quot; &quot; 直接传递对象"></a><code>:to=&quot; &quot;</code> 直接传递对象</h4><p>:to 也就是 v-bind:to</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;router-link :to=&quot;&#123; name: &apos;Player&apos;, params: &#123; uid: 1 &#125;&#125;&quot;&gt;库里111&lt;/router-link&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;router-link :to=&quot;&#123; path: &apos;/player/2/stats&apos; &#125;&quot;&gt;哈登222&lt;/router-link&gt;</span><br></pre></td></tr></table></figure><h3 id="多组件整合到同一路由"><a href="#多组件整合到同一路由" class="headerlink" title="多组件整合到同一路由"></a>多组件整合到同一路由</h3><h4 id="关键点-4"><a href="#关键点-4" class="headerlink" title="关键点"></a>关键点</h4><ul><li><strong>🎈components</strong></li><li><strong>🎈<code>&lt;router-view name=&quot; &quot;&gt;</code></strong></li></ul><h4 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h4><p>Header.vue<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>标题栏<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>我是标题栏<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>Sidebar.vue<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是侧边栏<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>Detail.vue<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>详细显示<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Vue.js是一套用于构建用户界面的渐进式框架。Vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合。另一方面，当与现代化的工具链以及各种支持类库结合使用时，Vue 也完全能够为复杂的单页应用提供驱动。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>index.js<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> Router <span class="keyword">from</span> <span class="string">'vue-router'</span></span><br><span class="line"><span class="keyword">import</span> SettingDetail <span class="keyword">from</span> <span class="string">'@/components/Detail'</span></span><br><span class="line"><span class="keyword">import</span> SettingHeader <span class="keyword">from</span> <span class="string">'@/components/Header'</span></span><br><span class="line"><span class="keyword">import</span> SettingSidebar <span class="keyword">from</span> <span class="string">'@/components/Sidebar'</span></span><br><span class="line">Vue.use(Router)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router(&#123;</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: <span class="string">'/'</span>,</span><br><span class="line">      name: <span class="string">'Home'</span>,</span><br><span class="line">      components: &#123;</span><br><span class="line">          myHeader: SettingHeader,</span><br><span class="line">          mySidebar: SettingSidebar,</span><br><span class="line">          myDetail: SettingDetail</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>App.vue<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">"100%"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span> <span class="attr">style</span>=<span class="string">"background-color:darkgoldenrod"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">router-view</span> <span class="attr">name</span>=<span class="string">"myHeader"</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">"20%"</span> <span class="attr">style</span>=<span class="string">"background-color:thistle"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">router-view</span> <span class="attr">name</span>=<span class="string">"mySidebar"</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">"80%"</span> <span class="attr">style</span>=<span class="string">"background-color:aquamarine"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">router-view</span> <span class="attr">name</span>=<span class="string">"myDetail"</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">  name: <span class="string">"App"</span>,</span></span><br><span class="line"><span class="undefined"> </span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-id">#app</span> &#123;</span></span><br><span class="line"><span class="undefined">  font-family: "Avenir", Helvetica, Arial, sans-serif;</span></span><br><span class="line"><span class="undefined">  -webkit-font-smoothing: antialiased;</span></span><br><span class="line"><span class="undefined">  -moz-osx-font-smoothing: grayscale;</span></span><br><span class="line"><span class="undefined">  text-align: center;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">color</span>: <span class="selector-id">#2c3e50</span>;</span></span><br><span class="line"><span class="undefined">  margin-top: 60px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="分析-2"><a href="#分析-2" class="headerlink" title="分析"></a>分析</h4><p><img src="/images/Vue2/11.png" alt></p><p>这里的关键在于 <strong>components</strong> 和 <code>&lt;router-view name=&quot; &quot;&gt;</code> </p><h3 id="URL-别名与重定向"><a href="#URL-别名与重定向" class="headerlink" title="URL 别名与重定向"></a>URL 别名与重定向</h3><h4 id="关键点-5"><a href="#关键点-5" class="headerlink" title="关键点"></a>关键点</h4><ul><li><strong>🎈路由别名 alias</strong></li><li><strong>🎈重定向指令 redirect</strong></li></ul><h4 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h4><p>在 <a href="#嵌套路由">嵌套路由</a> 的代码基础上作修改</p><p>About.vue<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>About Page<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>index.js<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> Router <span class="keyword">from</span> <span class="string">'vue-router'</span></span><br><span class="line"><span class="keyword">import</span> Player <span class="keyword">from</span> <span class="string">'@/components/Player'</span></span><br><span class="line"><span class="keyword">import</span> PlayerProfile <span class="keyword">from</span> <span class="string">'@/components/Profile'</span></span><br><span class="line"><span class="keyword">import</span> PlayerStats <span class="keyword">from</span> <span class="string">'@/components/Stats'</span></span><br><span class="line"><span class="keyword">import</span> About <span class="keyword">from</span> <span class="string">'@/components/About'</span></span><br><span class="line">Vue.use(Router)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router(&#123;</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: <span class="string">'/player/:uid'</span>,</span><br><span class="line">      name: <span class="string">'Player'</span>,</span><br><span class="line">      component: Player,</span><br><span class="line">      children: [</span><br><span class="line">        &#123;</span><br><span class="line">          path: <span class="string">'profile'</span>,</span><br><span class="line">          component: PlayerProfile</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          path: <span class="string">'stats'</span>,</span><br><span class="line">          component: PlayerStats</span><br><span class="line">        &#125;,</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: <span class="string">'/about'</span>,</span><br><span class="line">      name: <span class="string">'About'</span>,</span><br><span class="line">      component: About,</span><br><span class="line">      alias: <span class="string">'/aboutme'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: <span class="string">'/curry'</span>,</span><br><span class="line">      redirect: <span class="string">'/player/1'</span></span><br><span class="line">      <span class="comment">//redirect: &#123; name: 'About' &#125;</span></span><br><span class="line">      <span class="comment">//redirect: '/about'</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>App.vue<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/"</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/about"</span>&gt;</span>About<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/player/1"</span>&gt;</span>Player1<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/curry"</span>&gt;</span>Curry<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">  name: <span class="string">"App"</span>,</span></span><br><span class="line"><span class="undefined"> </span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-id">#app</span> &#123;</span></span><br><span class="line"><span class="undefined">  font-family: "Avenir", Helvetica, Arial, sans-serif;</span></span><br><span class="line"><span class="undefined">  -webkit-font-smoothing: antialiased;</span></span><br><span class="line"><span class="undefined">  -moz-osx-font-smoothing: grayscale;</span></span><br><span class="line"><span class="undefined">  text-align: center;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">color</span>: <span class="selector-id">#2c3e50</span>;</span></span><br><span class="line"><span class="undefined">  margin-top: 60px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="分析-3"><a href="#分析-3" class="headerlink" title="分析"></a>分析</h4><ul><li><p><code>alias: &#39;/aboutme&#39;</code> 就是给 <code>path: &#39;/about&#39;</code> 中的 /about 路径起了个别名 , 访问 /aboutme 和 /about 是一个效果</p></li><li><p><code>path: &#39;/curry&#39;</code> 和 <code>redirect: &#39;/player/1&#39;</code> 组合起来就是 , 当访问 /curry 的时候会重定向到 /player/1 </p></li><li><p><code>redirect: { name: &#39;About&#39; }</code> 也可以用组件的名称</p></li><li><code>redirect: &#39;/about&#39;</code> 同上</li><li><code>redirect: &#39;/aboutme&#39;</code> 重定向到别名也是可以的</li></ul><h3 id="多参数路由"><a href="#多参数路由" class="headerlink" title="多参数路由"></a>多参数路由</h3><h4 id="关键点-6"><a href="#关键点-6" class="headerlink" title="关键点"></a>关键点</h4><p><strong>🎈路由属性 props</strong></p><h4 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h4><p>User.vue<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>User<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>uid=&#123;&#123; uid &#125;&#125;, &#123;&#123; nationality &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>$route.params.uid=&#123;&#123; $route.params.uid &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>$route.params.uid=&#123;&#123; $route.params.nationality &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">        name: <span class="string">"User"</span>,</span></span><br><span class="line"><span class="actionscript">        props: [<span class="string">'uid'</span>, <span class="string">'nationality'</span>]</span></span><br><span class="line"><span class="undefined">    &#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>index.js<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">import Vue from 'vue'</span><br><span class="line">import Router from 'vue-router'</span><br><span class="line">import User from '@/components/User'</span><br><span class="line">Vue.use(Router)</span><br><span class="line"></span><br><span class="line">export default new Router(&#123;</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: '/',</span><br><span class="line">      name: 'Home',</span><br><span class="line">  &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      path: '/user/:uid/:nationality',</span><br><span class="line">      name: 'User',</span><br><span class="line">      component: User,</span><br><span class="line">      props: true</span><br><span class="line">    &#125;,</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>App.vue<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/"</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/user/1/usa"</span>&gt;</span>User1<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/user/2/china"</span>&gt;</span>User2<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/user/3/korea"</span>&gt;</span>User3<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="actionscript">  name: <span class="string">"App"</span>,</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-id">#app</span> &#123;</span></span><br><span class="line"><span class="undefined">  font-family: "Avenir", Helvetica, Arial, sans-serif;</span></span><br><span class="line"><span class="undefined">  -webkit-font-smoothing: antialiased;</span></span><br><span class="line"><span class="undefined">  -moz-osx-font-smoothing: grayscale;</span></span><br><span class="line"><span class="undefined">  text-align: center;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">color</span>: <span class="selector-id">#2c3e50</span>;</span></span><br><span class="line"><span class="undefined">  margin-top: 60px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="分析-4"><a href="#分析-4" class="headerlink" title="分析"></a>分析</h4><p><img src="/images/Vue2/12.png" alt></p><p>这里主要在于在路由对象里开启 props 属性 , 同时在对应组件里也要设置 props 变量来接收参数</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Start&quot;&gt;&lt;a href=&quot;#Start&quot; class=&quot;headerlink&quot; title=&quot;Start&quot;&gt;&lt;/a&gt;&lt;center&gt;Start&lt;/center&gt;&lt;/h2&gt;&lt;h3 id=&quot;Vue-cli-版本-2x&quot;&gt;&lt;a href=&quot;#Vue-cli-版本-2x&quot; class=&quot;headerlink&quot; title=&quot;Vue-cli 版本 (2x)&quot;&gt;&lt;/a&gt;Vue-cli 版本 (2x)&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;下文基于2x版本 , 版本跟进需要查看官方文档 👉&lt;a href=&quot;https://cli.vuejs.org/zh/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Vue CLI&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;先查看一下 Vue-cli 项目构建工具版本信息并安装 Vue-cli &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;npm show vue-cli&lt;/code&gt;  查看 Vue-cli 的版本信息&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm install -g vue-cli@2.9.6&lt;/code&gt; 选择最新版本&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vue -V&lt;/code&gt; 版本确认&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vue -h&lt;/code&gt; 查看帮助&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Vue-cli-模板&quot;&gt;&lt;a href=&quot;#Vue-cli-模板&quot; class=&quot;headerlink&quot; title=&quot;Vue-cli 模板&quot;&gt;&lt;/a&gt;Vue-cli 模板&lt;/h3&gt;&lt;p&gt;由于用 Vue-cli 工具初始化项目是基于某些模板下初始化的 , 所以先查看下官方推荐的模板 👉&lt;a href=&quot;https://github.com/vuejs-templates&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;vuejs-templates&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/Vue2/01.png&quot; alt&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;这里就采用生态较好的 webpack  👉&lt;a href=&quot;http://vuejs-templates.github.io/webpack/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方说明文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Vue-cli-初始化项目&quot;&gt;&lt;a href=&quot;#Vue-cli-初始化项目&quot; class=&quot;headerlink&quot; title=&quot;Vue-cli 初始化项目&quot;&gt;&lt;/a&gt;Vue-cli 初始化项目&lt;/h3&gt;&lt;p&gt;查看下如何初始化&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/Vue2/01.png&quot; alt&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;两种方式初始化 : 一种是基于官方模板 , 另一种基于第三方模板&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
      <category term="Vue.js" scheme="http://www.orekiyuta.cn/tags/Vue-js/"/>
    
  </entry>
  
</feed>
