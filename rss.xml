<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Canoe</title>
  
  <subtitle>「ろくでなし」</subtitle>
  <link href="/rss.xml" rel="self"/>
  
  <link href="http://www.orekiyuta.cn/"/>
  <updated>2021-01-10T18:13:12.605Z</updated>
  <id>http://www.orekiyuta.cn/</id>
  
  <author>
    <name>Orekiyuta</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Reptiles and Raspberries</title>
    <link href="http://www.orekiyuta.cn/archives/reptilesAndRaspberries/"/>
    <id>http://www.orekiyuta.cn/archives/reptilesAndRaspberries/</id>
    <published>2021-01-08T13:49:18.000Z</published>
    <updated>2021-01-10T18:13:12.605Z</updated>
    
    <content type="html"><![CDATA[<h2 id="分析接口数据结构"><a href="#分析接口数据结构" class="headerlink" title="分析接口数据结构"></a>分析接口数据结构</h2><ul><li>找到数据的接口信息之后，请求获取数据并逐层分析数据结构</li><li>然后提取需要的数据</li><li>最后封装成方法<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PY"><figure class="iseeu highlight /py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_tencent_virus_data</span><span class="params">()</span>:</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit'</span></span><br><span class="line">                      <span class="string">'/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safar'</span></span><br><span class="line">                      <span class="string">'i/537.36'</span>,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># https://news.qq.com/zt2020/page/feiyan.htm#/</span></span><br><span class="line">    url = <span class="string">"https://view.inews.qq.com/g2/getOnsInfo?name=disease_h5"</span></span><br><span class="line">    res = requests.get(url, headers=headers)</span><br><span class="line">    res.encoding = <span class="string">"utf-8"</span></span><br><span class="line">    getSource = json.loads(res.text)</span><br><span class="line">    sourceData = json.loads(getSource[<span class="string">"data"</span>])</span><br><span class="line"></span><br><span class="line">    lastUpdateTime = sourceData[<span class="string">"lastUpdateTime"</span>]  <span class="comment"># 最后更新时间</span></span><br><span class="line">    chinaTotal = sourceData[<span class="string">"chinaTotal"</span>]  <span class="comment"># 总情况</span></span><br><span class="line">    chinaAdd = sourceData[<span class="string">"chinaAdd"</span>]  <span class="comment"># 总确诊</span></span><br><span class="line">    areaTree = sourceData[<span class="string">"areaTree"</span>]  <span class="comment"># 国家</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 国家列表,中国</span></span><br><span class="line">    name = areaTree[<span class="number">0</span>][<span class="string">"name"</span>]  <span class="comment"># 中国</span></span><br><span class="line">    today = areaTree[<span class="number">0</span>][<span class="string">"today"</span>]  <span class="comment"># 今天新增确诊</span></span><br><span class="line">    total = areaTree[<span class="number">0</span>][<span class="string">"total"</span>]  <span class="comment"># 今日总情况</span></span><br><span class="line">    provinces = areaTree[<span class="number">0</span>][<span class="string">"children"</span>]  <span class="comment"># 34个省份</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># print(name)</span></span><br><span class="line">    <span class="comment"># print(today)</span></span><br><span class="line">    <span class="comment"># print(total)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 今日确诊，目前确诊，总确诊，总死亡数，总死亡概率，总康复数，总康复概率</span></span><br><span class="line">    daily_data = [name, today[<span class="string">"confirm"</span>], total[<span class="string">"nowConfirm"</span>], total[<span class="string">"confirm"</span>], total[<span class="string">"dead"</span>], total[<span class="string">"deadRate"</span>],</span><br><span class="line">                  total[<span class="string">"heal"</span>], total[<span class="string">"healRate"</span>]]</span><br><span class="line"></span><br><span class="line">    today_details = []</span><br><span class="line">    <span class="keyword">for</span> province <span class="keyword">in</span> provinces:</span><br><span class="line">        <span class="comment"># print(province["name"])  # 省名</span></span><br><span class="line">        <span class="comment"># print(province["today"])</span></span><br><span class="line">        <span class="comment"># print(province["total"])</span></span><br><span class="line">        province_name_ = province[<span class="string">"name"</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 省所属城市</span></span><br><span class="line">        <span class="keyword">for</span> city <span class="keyword">in</span> province[<span class="string">"children"</span>]:</span><br><span class="line">            city_name_ = city[<span class="string">"name"</span>]</span><br><span class="line">            city_today_confirm_ = city[<span class="string">"today"</span>][<span class="string">"confirm"</span>]  <span class="comment"># 该城市今日确诊</span></span><br><span class="line">            city_total_confirm_ = city[<span class="string">"total"</span>][<span class="string">"confirm"</span>]  <span class="comment"># 该城市总确诊</span></span><br><span class="line">            city_total_heal_ = city[<span class="string">"total"</span>][<span class="string">"heal"</span>]  <span class="comment"># 该城市总康复</span></span><br><span class="line">            city_total_heal_rate_ = city[<span class="string">"total"</span>][<span class="string">"healRate"</span>]  <span class="comment"># 该城市总康复概率</span></span><br><span class="line">            city_total_dead_ = city[<span class="string">"total"</span>][<span class="string">"dead"</span>]  <span class="comment"># 该城市总死亡</span></span><br><span class="line">            city_total_dead_rate_ = city[<span class="string">"total"</span>][<span class="string">"deadRate"</span>]  <span class="comment"># 该城市总死亡概率</span></span><br><span class="line">            today_details.append([lastUpdateTime, province_name_, city_name_, city_today_confirm_,</span><br><span class="line">                                  city_total_confirm_, city_total_heal_, city_total_heal_rate_,</span><br><span class="line">                                  city_total_dead_, city_total_dead_rate_</span><br><span class="line">                                  ])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> today_details, daily_data</span><br></pre></td></tr></table></figure></div></li></ul><a id="more"></a><h2 id="数据库连接"><a href="#数据库连接" class="headerlink" title="数据库连接"></a>数据库连接</h2><ul><li>这里主要在于建立数据库连接，并取得游标去操作数据</li><li>连接数据库操作完毕之后需要及时关闭连接<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PY"><figure class="iseeu highlight /py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mariadb_conn</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        conn = mariadb.connect(</span><br><span class="line">            user=<span class="string">"root"</span>,</span><br><span class="line">            password=<span class="string">"raspberry"</span>,</span><br><span class="line">            host=<span class="string">"192.168.137.47"</span>,</span><br><span class="line">            port=<span class="number">3306</span>,</span><br><span class="line">            database=<span class="string">"virus"</span></span><br><span class="line">        )</span><br><span class="line">        cursor = conn.cursor()</span><br><span class="line">        <span class="keyword">return</span> conn, cursor</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> mariadb.Error <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="string">f"Error connecting to MariaDB Platform: <span class="subst">&#123;e&#125;</span>"</span>)</span><br><span class="line">        sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mariadb_conn_close</span><span class="params">(conn, cursor)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> cursor:</span><br><span class="line">        cursor.close()</span><br><span class="line">    <span class="keyword">if</span> conn:</span><br><span class="line">        conn.close()</span><br></pre></td></tr></table></figure></div></li></ul><h2 id="获取数据并持久化"><a href="#获取数据并持久化" class="headerlink" title="获取数据并持久化"></a>获取数据并持久化</h2><ul><li>这里需要注意的是游标的操作 <code>cursor.execute()</code></li><li>如果是查询语句的话，游标执行之后就能得到返回的数据</li><li>其他的语句需要提交事务<code>conn.commit()</code>才能得到返回的数据<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PY"><figure class="iseeu highlight /py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 更新每日的详情数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">update_virus_data</span><span class="params">()</span>:</span></span><br><span class="line">    cursor = <span class="literal">None</span></span><br><span class="line">    conn = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        virus_data = get_tencent_virus_data()[<span class="number">0</span>]</span><br><span class="line">        <span class="comment"># conn, cursor = mariadb_conn("root", "raspberry", "192.168.137.165", 3306, "virus")</span></span><br><span class="line">        conn, cursor = mariadb_conn()</span><br><span class="line">        setDataTime = time.strftime(<span class="string">'%Y-%m-%d %H:%M:%S'</span>, time.localtime(time.time()))</span><br><span class="line">        sql_insert_data = <span class="string">"insert into tencent_virus_data(lastUpdateTime,province_name_,"</span> \</span><br><span class="line">                          <span class="string">"city_name_,city_today_confirm_,city_total_confirm_,"</span> \</span><br><span class="line">                          <span class="string">"city_total_heal_,city_total_heal_rate_,"</span> \</span><br><span class="line">                          <span class="string">"city_total_dead_,city_total_dead_rate_,"</span> \</span><br><span class="line">                          <span class="string">"setDataTime"</span><span class="string">") values (%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 取数据库最后一个记录的时间字段</span></span><br><span class="line">        sql_lastTime = <span class="string">"select lastUpdateTime from tencent_virus_data order by id desc limit 1"</span></span><br><span class="line">        cursor.execute(sql_lastTime)</span><br><span class="line">        lastUpdateTime = cursor.fetchone()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 第一次初始化数据</span></span><br><span class="line">        <span class="keyword">if</span> lastUpdateTime <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            print(<span class="string">f"<span class="subst">&#123;time.asctime()&#125;</span>    ---&gt;    滴滴！初始化最初的数据！"</span>)</span><br><span class="line">            <span class="keyword">for</span> item <span class="keyword">in</span> virus_data:</span><br><span class="line">                item.append(setDataTime)</span><br><span class="line">                print(item)</span><br><span class="line">                cursor.execute(sql_insert_data, item)</span><br><span class="line">            conn.commit()</span><br><span class="line">            print(<span class="string">f"<span class="subst">&#123;time.asctime()&#125;</span>    ---&gt;    嗒嗒！初始化数据完毕！"</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 非第一次更新数据</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># virus_data[0][0] 拿第一条数据的时间字段,因为每条数据时间都是一样的</span></span><br><span class="line">            dataNowTime = datetime.strptime(virus_data[<span class="number">0</span>][<span class="number">0</span>], <span class="string">'%Y-%m-%d %H:%M:%S'</span>)</span><br><span class="line">            <span class="comment"># 数据库最新记录时间 与 当前请求的数据时间对比，判断是否更新数据</span></span><br><span class="line">            <span class="keyword">if</span> dataNowTime &gt; lastUpdateTime[<span class="number">0</span>]:</span><br><span class="line">                print(<span class="string">f"<span class="subst">&#123;time.asctime()&#125;</span>    ---&gt;    滴滴！开始更新最新数据！"</span>)</span><br><span class="line">                <span class="keyword">for</span> item <span class="keyword">in</span> virus_data:</span><br><span class="line">                    item.append(setDataTime)</span><br><span class="line">                    cursor.execute(sql_insert_data, item)</span><br><span class="line">                conn.commit()</span><br><span class="line">                print(<span class="string">f"<span class="subst">&#123;time.asctime()&#125;</span>    ---&gt;    嗒嗒！更新最新数据完毕！"</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">f"<span class="subst">&#123;time.asctime()&#125;</span>    ---&gt;    嗯！已是最新数据！"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        traceback.print_exc()</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        mariadb_conn_close(conn, cursor)</span><br></pre></td></tr></table></figure></div></li></ul><h2 id="从页面抓取数据"><a href="#从页面抓取数据" class="headerlink" title="从页面抓取数据"></a>从页面抓取数据</h2><h3 id="一般的页面，直接请求解析获取即可"><a href="#一般的页面，直接请求解析获取即可" class="headerlink" title="一般的页面，直接请求解析获取即可"></a>一般的页面，直接请求解析获取即可</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PY"><figure class="iseeu highlight /py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">baidu_hotPoint</span><span class="params">()</span>:</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit'</span></span><br><span class="line">                      <span class="string">'/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safar'</span></span><br><span class="line">                      <span class="string">'i/537.36'</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    url = <span class="string">"http://top.baidu.com/buzz?b=1&amp;fr=topindex"</span></span><br><span class="line"></span><br><span class="line">    res = requests.get(url, headers=headers)</span><br><span class="line">    res.encoding = <span class="string">"gb2312"</span></span><br><span class="line">    html = res.text</span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">"lxml"</span>)</span><br><span class="line">    titles = soup.find_all(name=<span class="string">"a"</span>, attrs=&#123;<span class="string">"class"</span>: <span class="string">"list-title"</span>&#125;)</span><br><span class="line">    content = [title.text <span class="keyword">for</span> title <span class="keyword">in</span> titles]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> content</span><br></pre></td></tr></table></figure></div><h3 id="如果页面用的是-JS-加载的话，可以使用-selenium-模拟人工获取"><a href="#如果页面用的是-JS-加载的话，可以使用-selenium-模拟人工获取" class="headerlink" title="如果页面用的是 JS 加载的话，可以使用 selenium 模拟人工获取"></a>如果页面用的是 JS 加载的话，可以使用 selenium 模拟人工获取</h3><ul><li>在这里需要浏览器和浏览器驱动配合</li><li>获得和 chrome 浏览器版本一致的 chromedriver 驱动</li><li>👉 <a href="https://npm.taobao.org/mirrors/chromedriver/" target="_blank" rel="noopener">https://npm.taobao.org/mirrors/chromedriver/</a><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PY"><figure class="iseeu highlight /py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sogou_hotSearch</span><span class="params">()</span>:</span></span><br><span class="line">    headers = <span class="string">'user-agent="MQQBrowser/26 Mozilla/5.0 (Linux; U; Android 2.3.7; zh-cn; MB200 Build/GRJ22; '</span> \</span><br><span class="line">              <span class="string">'CyanogenMod-7) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1" '</span></span><br><span class="line"></span><br><span class="line">    url = <span class="string">"https://sa.sogou.com/new-weball/page/sgs/epidemic?type_page=VR"</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">from</span> selenium.webdriver.chrome.options <span class="keyword">import</span> Options</span><br><span class="line"></span><br><span class="line">    options = ChromeOptions()</span><br><span class="line">    options.add_argument(headers)</span><br><span class="line">    options.add_argument(<span class="string">"--headless"</span>)  <span class="comment"># 隐藏浏览器</span></span><br><span class="line">    options.add_argument(<span class="string">"--no-sandbox"</span>)  <span class="comment"># linux 需要禁用这个</span></span><br><span class="line">    options.add_argument(<span class="string">"--disable-gpu"</span>)</span><br><span class="line">    options.add_argument(<span class="string">'blink-settings=imagesEnabled=false'</span>)  <span class="comment"># 不加载图片资源</span></span><br><span class="line">    chrome = Chrome(executable_path=<span class="string">"./chromedriver.exe"</span>, options=options)  <span class="comment"># 路径加载驱动</span></span><br><span class="line">    <span class="comment"># chrome = Chrome(options=options)</span></span><br><span class="line">    chrome.get(url)</span><br><span class="line">    el_lis = chrome.find_elements_by_xpath(<span class="string">'//*[@id="no_active_pane"]/div/div/div[2]/ul/li'</span>)</span><br><span class="line">    content = [el_li.text <span class="keyword">for</span> el_li <span class="keyword">in</span> el_lis]</span><br><span class="line">    chrome.close()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> content</span><br></pre></td></tr></table></figure></div></li></ul><h2 id="建立-Web-服务"><a href="#建立-Web-服务" class="headerlink" title="建立 Web 服务"></a>建立 Web 服务</h2><h3 id="数据交互"><a href="#数据交互" class="headerlink" title="数据交互"></a>数据交互</h3><ul><li>这里使用 flask 建立简单的请求服务</li><li><p>在服务端返回页面需要用到 render_template</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PY"><figure class="iseeu highlight /py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> render_template</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/', methods=["get", "post"])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"index.html"</span>)</span><br></pre></td></tr></table></figure></div></li><li><p>接着在页面发送 ajax 请求对应的路由即可</p></li></ul><h3 id="建立工具类来处理数据"><a href="#建立工具类来处理数据" class="headerlink" title="建立工具类来处理数据"></a>建立工具类来处理数据</h3><ul><li>在项目根路径建一个 xxx.py 来专门处理数据<ul><li>数据库连接方法</li><li>查询类方法</li><li>每个数据接口方法<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PY"><figure class="iseeu highlight /py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_time</span><span class="params">()</span>:</span></span><br><span class="line">    time_str = time.strftime(<span class="string">"%Y&#123;&#125;%m&#123;&#125;%d&#123;&#125; %X"</span>)</span><br><span class="line">    <span class="keyword">return</span> time_str.format(<span class="string">"年"</span>, <span class="string">"月"</span>, <span class="string">"日"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mariadb_conn</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        conn = mariadb.connect(</span><br><span class="line">            user=<span class="string">"root"</span>,</span><br><span class="line">            password=<span class="string">"raspberry"</span>,</span><br><span class="line">            host=<span class="string">"192.168.137.47"</span>,</span><br><span class="line">            port=<span class="number">3306</span>,</span><br><span class="line">            database=<span class="string">"virus"</span></span><br><span class="line">        )</span><br><span class="line">        cursor = conn.cursor()</span><br><span class="line">        <span class="keyword">return</span> conn, cursor</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> mariadb.Error <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="string">f"Error connecting to MariaDB Platform: <span class="subst">&#123;e&#125;</span>"</span>)</span><br><span class="line">        sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mariadb_conn_close</span><span class="params">(conn, cursor)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> cursor:</span><br><span class="line">        cursor.close()</span><br><span class="line">    <span class="keyword">if</span> conn:</span><br><span class="line">        conn.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">query</span><span class="params">(sql, *args)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    :param sql:</span></span><br><span class="line"><span class="string">    :param args</span></span><br><span class="line"><span class="string">    :return 返回查询结果 ((),())</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    conn, cursor = mariadb_conn()</span><br><span class="line">    cursor.execute(sql, args)</span><br><span class="line">    res = cursor.fetchall()</span><br><span class="line">    mariadb_conn_close(conn, cursor)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_daily_data</span><span class="params">()</span>:</span></span><br><span class="line">    sql = <span class="string">"select today_confirm,total_nowConfirm,"</span> \</span><br><span class="line">          <span class="string">"total_confirm,total_dead,total_deadRate,"</span> \</span><br><span class="line">          <span class="string">"total_heal,total_healRate from daily_data "</span> \</span><br><span class="line">          <span class="string">"where setDataTime=(select setDataTime from daily_data "</span> \</span><br><span class="line">          <span class="string">"order by setDataTime desc limit 1)"</span></span><br><span class="line">    res = query(sql)</span><br><span class="line">    <span class="keyword">return</span> res[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 地图整体数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_area_data</span><span class="params">()</span>:</span></span><br><span class="line">    sql = <span class="string">"select province_name_,sum(city_total_confirm_) "</span> \</span><br><span class="line">          <span class="string">"from tencent_virus_data where lastUpdateTime=("</span> \</span><br><span class="line">          <span class="string">"select lastUpdateTime from tencent_virus_data "</span> \</span><br><span class="line">          <span class="string">"order by lastUpdateTime desc limit 1) "</span> \</span><br><span class="line">          <span class="string">"group by province_name_"</span></span><br><span class="line">    res = query(sql)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 总趋势最近十天</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_GeneralTrend_data</span><span class="params">()</span>:</span></span><br><span class="line">    sql = <span class="string">"select today_confirm,total_nowConfirm,total_confirm,"</span> \</span><br><span class="line">          <span class="string">"total_dead,total_heal,setDataTime from daily_data "</span> \</span><br><span class="line">          <span class="string">"order by  id desc limit 10"</span></span><br><span class="line">    res = query(sql)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"><span class="comment"># get_GeneralTrend_data()[1:] # 从第二条数据开始取</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 今日有新增确诊的省市</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_todayNewConfrim_data</span><span class="params">()</span>:</span></span><br><span class="line">    sql = <span class="string">"select CONCAT(province_name_,'-',city_name_) as province_city,"</span> \</span><br><span class="line">          <span class="string">"city_today_confirm_,lastUpdateTime from tencent_virus_data "</span> \</span><br><span class="line">          <span class="string">"where city_today_confirm_ &gt;0 and lastUpdateTime=("</span> \</span><br><span class="line">          <span class="string">"select lastUpdateTime from tencent_virus_data "</span> \</span><br><span class="line">          <span class="string">"ORDER BY lastUpdateTime desc limit 1 )"</span></span><br><span class="line"></span><br><span class="line">    res = query(sql)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="comment"># 目前各省市累计确诊数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_confrimUntilNow</span><span class="params">()</span>:</span></span><br><span class="line">    sql = <span class="string">"select province_name_,sum(city_total_confirm_),lastUpdateTime "</span> \</span><br><span class="line">          <span class="string">"from tencent_virus_data where lastUpdateTime = ( "</span> \</span><br><span class="line">          <span class="string">"select lastUpdateTime from tencent_virus_data "</span> \</span><br><span class="line">          <span class="string">"order by lastUpdateTime desc limit 1) "</span> \</span><br><span class="line">          <span class="string">"group by province_name_"</span></span><br><span class="line"></span><br><span class="line">    res = query(sql)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取最新50条热搜数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_hotPoint</span><span class="params">()</span>:</span></span><br><span class="line">    sql = <span class="string">"select content,setDataTime from  hotpoint order by id desc limit 50"</span></span><br><span class="line">    res = query(sql)</span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure></div></li></ul></li></ul><h3 id="建立路由调用工具类方法返回数据值"><a href="#建立路由调用工具类方法返回数据值" class="headerlink" title="建立路由调用工具类方法返回数据值"></a>建立路由调用工具类方法返回数据值</h3><ul><li>这里需要注意的是需要引入写好的工具类<ul><li><code>import xxx</code></li></ul></li><li>在这里得到工具类查询数据库得到的值，再做进一步处理返回给页面关注的数据结构<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PY"><figure class="iseeu highlight /py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route('/', methods=["get", "post"])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"index.html"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route("/getTime")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_time</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> utils.get_time()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route("/getDailyData")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_daily_data</span><span class="params">()</span>:</span></span><br><span class="line">    data = utils.get_daily_data()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> jsonify(&#123;<span class="string">"today_confirm"</span>: data[<span class="number">0</span>],</span><br><span class="line">                    <span class="string">"total_nowConfirm"</span>: data[<span class="number">1</span>],</span><br><span class="line">                    <span class="string">"total_confirm"</span>: data[<span class="number">2</span>],</span><br><span class="line">                    <span class="string">"total_dead"</span>: data[<span class="number">3</span>],</span><br><span class="line">                    <span class="string">"total_deadRate"</span>: data[<span class="number">4</span>],</span><br><span class="line">                    <span class="string">"total_heal"</span>: data[<span class="number">5</span>],</span><br><span class="line">                    <span class="string">"total_healRate"</span>: data[<span class="number">6</span>]&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route("/getAreaData")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_area_data</span><span class="params">()</span>:</span></span><br><span class="line">    areaData = []</span><br><span class="line">    <span class="keyword">for</span> city <span class="keyword">in</span> utils.get_area_data():</span><br><span class="line">        areaData.append(&#123;<span class="string">"name"</span>: city[<span class="number">0</span>], <span class="string">"value"</span>: int(city[<span class="number">1</span>])&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> jsonify(&#123;<span class="string">"data"</span>: areaData&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route("/getGeneralTrend")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_generalTrend_data</span><span class="params">()</span>:</span></span><br><span class="line">    gT_data = utils.get_GeneralTrend_data()</span><br><span class="line">    today_confirm, total_nowConfirm, total_confirm = [], [], []</span><br><span class="line">    total_dead, total_heal, setDataTime = [], [], []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> a, b, c, d, e, f <span class="keyword">in</span> gT_data:</span><br><span class="line">        today_confirm.append(a)</span><br><span class="line">        total_nowConfirm.append(b)</span><br><span class="line">        total_confirm.append(c)</span><br><span class="line">        total_dead.append(d)</span><br><span class="line">        total_heal.append(e)</span><br><span class="line">        setDataTime.append(f.strftime(<span class="string">"%m-%d"</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># reverse() 没有返回值</span></span><br><span class="line">    today_confirm.reverse()</span><br><span class="line">    total_nowConfirm.reverse()</span><br><span class="line">    total_confirm.reverse()</span><br><span class="line">    total_dead.reverse()</span><br><span class="line">    total_heal.reverse()</span><br><span class="line">    setDataTime.reverse()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> jsonify(&#123;<span class="string">"today_confirm"</span>: today_confirm,</span><br><span class="line">                    <span class="string">"total_nowConfirm"</span>: total_nowConfirm,</span><br><span class="line">                    <span class="string">"total_confirm"</span>: total_confirm,</span><br><span class="line">                    <span class="string">"total_dead"</span>: total_dead,</span><br><span class="line">                    <span class="string">"total_heal"</span>: total_heal,</span><br><span class="line">                    <span class="string">"setDataTime"</span>: setDataTime&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route("/getTodayNewConfrim")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_todayNewConfrim_data</span><span class="params">()</span>:</span></span><br><span class="line">    tNC_data = utils.get_todayNewConfrim_data()</span><br><span class="line">    province_city, city_today_confirm_ = [], []</span><br><span class="line">    setDateTime = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> tNC_data:</span><br><span class="line">        province_city.append(i[<span class="number">0</span>])</span><br><span class="line">        city_today_confirm_.append(i[<span class="number">1</span>])</span><br><span class="line">        setDateTime = i[<span class="number">2</span>].strftime(<span class="string">"%Y/%m/%d"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> jsonify(&#123;<span class="string">"setDateTime"</span>: setDateTime,</span><br><span class="line">                    <span class="string">"city_today_confirm_"</span>: city_today_confirm_,</span><br><span class="line">                    <span class="string">"province_city"</span>: province_city&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route("/getConfrimUntilNow")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_confrimUntilNow_data</span><span class="params">()</span>:</span></span><br><span class="line">    cUN_data = utils.get_confrimUntilNow()</span><br><span class="line">    provinces = []</span><br><span class="line">    setDateTime = <span class="string">""</span></span><br><span class="line">    provinceConfrim = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> cUN_data:</span><br><span class="line">        provinces.append(i[<span class="number">0</span>])</span><br><span class="line">        setDateTime = i[<span class="number">2</span>].strftime(<span class="string">"%Y/%m/%d"</span>)</span><br><span class="line">        pC = int(decimal.Decimal(i[<span class="number">1</span>]).quantize(decimal.Decimal(<span class="string">'0'</span>)))  <span class="comment"># 把 Decimal 转换成可用于 json 序列化的 int 类型</span></span><br><span class="line">        provinceConfrim.append(&#123;<span class="string">"name"</span>: i[<span class="number">0</span>], <span class="string">"value"</span>: pC&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> jsonify(&#123;<span class="string">"provinces"</span>: provinces,</span><br><span class="line">                    <span class="string">"provinceConfrim"</span>: provinceConfrim,</span><br><span class="line">                    <span class="string">"setDateTime"</span>: setDateTime&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route("/getHotPoint")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_hotPoint_data</span><span class="params">()</span>:</span></span><br><span class="line">    hP_data = utils.get_hotPoint()</span><br><span class="line">    keywords = []</span><br><span class="line">    setDataTime = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> hP_data:</span><br><span class="line">        content = i[<span class="number">0</span>]</span><br><span class="line">        keyword_weight = extract_tags(content, topK=<span class="number">20</span>, withWeight=<span class="literal">True</span>)</span><br><span class="line">        setDataTime = i[<span class="number">1</span>].strftime(<span class="string">"%Y/%m/%d"</span>)</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> keyword_weight:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> j[<span class="number">0</span>].isdigit():  <span class="comment"># 如果是数字就不加入数组</span></span><br><span class="line">                weight = <span class="number">20</span> * round(j[<span class="number">1</span>], <span class="number">1</span>)</span><br><span class="line">                keywords.append(&#123;<span class="string">"name"</span>: j[<span class="number">0</span>], <span class="string">"value"</span>: str(weight)&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> jsonify(&#123;<span class="string">"keywords"</span>: keywords,</span><br><span class="line">                    <span class="string">"setDataTime"</span>: setDataTime&#125;)</span><br></pre></td></tr></table></figure></div></li></ul><h3 id="页面请求数据并对接展示"><a href="#页面请求数据并对接展示" class="headerlink" title="页面请求数据并对接展示"></a>页面请求数据并对接展示</h3><ul><li>这里展示数据用的 Echarts </li><li>Echarts 的话，需要关注它的 options 内需要传入的数据结构</li><li><p>然后在 ajax 请求获得数据后，赋给对应的位置即可</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JS"><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getAreaData</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url: <span class="string">"/getAreaData"</span>,</span><br><span class="line">        success:<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">            center_option.series[<span class="number">0</span>].data=data.data;</span><br><span class="line">            center.setOption(center_option);</span><br><span class="line">        &#125;,</span><br><span class="line">        error:<span class="function"><span class="keyword">function</span> (<span class="params">x</span>) </span>&#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></li><li><p>使用 Echarts 的 wordCloud 需要注意的是 5.0 版本不支持</p></li><li>需要切换 5.0 之前的版本</li><li>这样的话，可以在项目中引入两个不同版本的 Echarts.js </li><li>然后打开其中一个，把内部的 echarts 对象全部修改<ul><li>比如需要单独把 4.0 版本的做处理，就打开该 js 文件，将全部默认的 echarts 对象修改成 echarts4</li><li>区分开不同版本</li></ul></li><li>最后获取对象的时候使用 echarts4 即可</li></ul><h2 id="树莓派部署测试"><a href="#树莓派部署测试" class="headerlink" title="树莓派部署测试"></a>树莓派部署测试</h2><h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><ul><li>配置好基本环境</li><li>然后直接通过 python 命令启动 flask 即可</li><li><p>需要对外访问就需要设置一下 host</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PY"><figure class="iseeu highlight /py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(host=<span class="string">"0.0.0.0"</span>)</span><br></pre></td></tr></table></figure></div></li><li><p>浏览器输入 ip:5000 即可看到服务</p></li></ul><h3 id="Nginx-反代"><a href="#Nginx-反代" class="headerlink" title="Nginx 反代"></a>Nginx 反代</h3><ul><li>配置好 nginx ,将服务的地址代理到 nginx</li><li>找到配置文件，我的树莓派默认的 nginx 配置文件是 <code>/etc/nginx/nginx.conf</code></li><li><p>主要配置</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SHELL"><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">    upstream hgo &#123;</span><br><span class="line"></span><br><span class="line">        server 127.0.0.1:5000 weight=10;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       8080 default_server;</span><br><span class="line">        listen       [::]:8080 default_server;</span><br><span class="line">        server_name  _;</span><br><span class="line">        root         /usr/share/nginx/html;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">         Load configuration files <span class="keyword">for</span> the default server block.</span></span><br><span class="line"><span class="meta">#</span><span class="bash">         include /etc/nginx/default.d/*.conf;</span></span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">                proxy_pass http://hgo;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page 404 /404.html;</span><br><span class="line">        location = /404.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page 500 502 503 504 /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div></li><li><p>整个配置文件</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SHELL"><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> For more information on configuration, see:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   * Official English Documentation: http://nginx.org/en/docs/</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   * Official Russian Documentation: http://nginx.org/ru/docs/</span></span><br><span class="line"></span><br><span class="line">user nginx;</span><br><span class="line">worker_processes auto;</span><br><span class="line">error_log /var/log/nginx/error.log;</span><br><span class="line">pid /run/nginx.pid;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.</span></span><br><span class="line">include /usr/share/nginx/modules/*.conf;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections 1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '</span><br><span class="line">                      '$status $body_bytes_sent "$http_referer" '</span><br><span class="line">                      '"$http_user_agent" "$http_x_forwarded_for"';</span><br><span class="line"></span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile            on;</span><br><span class="line">    tcp_nopush          on;</span><br><span class="line">    tcp_nodelay         on;</span><br><span class="line">    keepalive_timeout   65;</span><br><span class="line">    types_hash_max_size 2048;</span><br><span class="line"></span><br><span class="line">    include             /etc/nginx/mime.types;</span><br><span class="line">    default_type        application/octet-stream;</span><br><span class="line"></span><br><span class="line">    # Load modular configuration files from the /etc/nginx/conf.d directory.</span><br><span class="line">    # See http://nginx.org/en/docs/ngx_core_module.html#include</span><br><span class="line">    # for more information.</span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line"></span><br><span class="line">    upstream hgo &#123;</span><br><span class="line"></span><br><span class="line">        server 127.0.0.1:5000 weight=10;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       8080 default_server;</span><br><span class="line">        listen       [::]:8080 default_server;</span><br><span class="line">        server_name  _;</span><br><span class="line">        root         /usr/share/nginx/html;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">         Load configuration files <span class="keyword">for</span> the default server block.</span></span><br><span class="line"><span class="meta">#</span><span class="bash">         include /etc/nginx/default.d/*.conf;</span></span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">                proxy_pass http://hgo;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page 404 /404.html;</span><br><span class="line">        location = /404.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page 500 502 503 504 /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Settings <span class="keyword">for</span> a TLS enabled server.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">    server &#123;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">        listen       443 ssl http2 default_server;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">        listen       [::]:443 ssl http2 default_server;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">        server_name  _;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">        root         /usr/share/nginx/html;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">        ssl_certificate <span class="string">"/etc/pki/nginx/server.crt"</span>;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">        ssl_certificate_key <span class="string">"/etc/pki/nginx/private/server.key"</span>;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">        ssl_session_cache shared:SSL:1m;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">        ssl_session_timeout  10m;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">        ssl_ciphers HIGH:!aNULL:!MD5;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">        ssl_prefer_server_ciphers on;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">        <span class="comment"># Load configuration files for the default server block.</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">        include /etc/nginx/default.d/*.conf;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">        location / &#123;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">        &#125;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">        error_page 404 /404.html;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">        location = /404.html &#123;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">        &#125;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">        error_page 500 502 503 504 /50x.html;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">        location = /50x.html &#123;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">        &#125;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">    &#125;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></li><li><p>这样一来就可通过 nginx 代理出来的地址去访问服务器内部的地址了</p></li></ul><h3 id="使用-WSGI-服务"><a href="#使用-WSGI-服务" class="headerlink" title="使用 WSGI 服务"></a>使用 WSGI 服务</h3><ul><li>不建议直接用 python 命令去启动 flask </li><li>使用 gunicorn 将服务启动</li><li><code>gunicorn -b 127.0.0.1:5000 -D app:app</code></li><li><code>gunicorn -b 127.0.0.1:5000 -D 文件名:文件内部的 flask 对象名</code><ul><li><code>app = Flask(__name__)</code></li></ul></li></ul><h3 id="定时任务"><a href="#定时任务" class="headerlink" title="定时任务"></a>定时任务</h3><ul><li><code>crontab -l</code> 查看正在执行的定时任务</li><li><p><code>crontab -e</code> 编辑定时任务</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SHELL"><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Edit this file to introduce tasks to be run by cron.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Each task to run has to be defined through a single line</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> indicating with different fields when the task will be run</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> and what <span class="built_in">command</span> to run <span class="keyword">for</span> the task</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> To define the time you can provide concrete values <span class="keyword">for</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> minute (m), hour (h), day of month (dom), month (mon),</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> and day of week (dow) or use <span class="string">'*'</span> <span class="keyword">in</span> these fields (<span class="keyword">for</span> <span class="string">'any'</span>).</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Notice that tasks will be started based on the cron<span class="string">'s system</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> daemon<span class="string">'s notion of time and timezones.</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Output of the crontab <span class="built_in">jobs</span> (including errors) is sent through</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> email to the user the crontab file belongs to (unless redirected).</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For example, you can run a backup of all your user accounts</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> at 5 a.m every week with:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For more information see the manual pages of crontab(5) and cron(8)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> m h  dom mon dow   <span class="built_in">command</span></span></span><br><span class="line">45 * * * * python3 /home/pi/Documents/FkZi/gunicorn/virus.py dd &gt;&gt; /home/pi/Documents/log/dd 2&gt;&amp;1 &amp;</span><br><span class="line">45 * * * * python3 /home/pi/Documents/FkZi/gunicorn/virus.py vd &gt;&gt; /home/pi/Documents/log/vd 2&gt;&amp;1 &amp;</span><br><span class="line">45 * * * * python3 /home/pi/Documents/FkZi/gunicorn/virus.py hp &gt;&gt; /home/pi/Documents/log/hp 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure></div></li><li><p>定时任务执行成功可在对应的目录看到生成的日志文件 <code>/home/pi/Documents/log/dd</code></p></li><li>可看到对应的参数设置</li><li><code>virus.py hp</code> 这里是给 py 脚本传递参数</li><li>需要在文件内设置<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PY"><figure class="iseeu highlight /py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    length = len(sys.argv)</span><br><span class="line">    <span class="keyword">if</span> length == <span class="number">1</span>:</span><br><span class="line">        s = <span class="string">"""</span></span><br><span class="line"><span class="string">                请输入参数：</span></span><br><span class="line"><span class="string">                dd 更新详细数据</span></span><br><span class="line"><span class="string">                vd 更新汇总数据</span></span><br><span class="line"><span class="string">                hp 更新热点信息</span></span><br><span class="line"><span class="string">            """</span></span><br><span class="line">        print(s)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        order = sys.argv[<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">if</span> order == <span class="string">"vd"</span>:</span><br><span class="line">            update_virus_data()</span><br><span class="line">        <span class="keyword">elif</span> order == <span class="string">"dd"</span>:</span><br><span class="line">            update_daily_data()</span><br><span class="line">        <span class="keyword">elif</span> order == <span class="string">"hp"</span>:</span><br><span class="line">            update_hotPoint()</span><br></pre></td></tr></table></figure></div></li></ul><h2 id="生产服务器部署"><a href="#生产服务器部署" class="headerlink" title="生产服务器部署"></a>生产服务器部署</h2><ul><li>和在测试环境一样的步骤即可，这里生产的设备为 x86 的 Linux,OS 为 CentOS</li><li>先拉项目到设备里，把依赖安装好</li><li>将项目启动起来，配置 nginx 把端口代理出来</li><li>然后用 gunicorn 启动项目</li><li>设置定时任务</li><li>测试定时任务的脚本，把依赖装好，主要问题在 chromedirver<ul><li>👉 <a href="https://cloud.tencent.com/developer/article/1647905" target="_blank" rel="noopener">爬虫在linux下启动selenium-安装谷歌浏览器和驱动</a></li></ul></li><li>‘chromedriver’ executable needs to be in PATH. Please see <a href="https://sites.google.com/a/chromium.org/chromedriver/home" target="_blank" rel="noopener">https://sites.google.com/a/chromium.org/chromedriver/home</a><ul><li>如果出现这个问题，在代码里指定 chrome 对象驱动路径即可</li></ul></li></ul><h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><h3 id="在-selenium-中获取浏览器对象的时候，浏览器启动后一会就关闭了"><a href="#在-selenium-中获取浏览器对象的时候，浏览器启动后一会就关闭了" class="headerlink" title="在 selenium 中获取浏览器对象的时候，浏览器启动后一会就关闭了"></a>在 selenium 中获取浏览器对象的时候，浏览器启动后一会就关闭了</h3><ul><li>因为获取浏览器的对象在方法中，方法执行完浏览器自然就跟着关闭了</li><li>如果需要浏览器一直存在，把浏览器对象在方法外部，使其成为全局对象就可以了<h3 id="print-cursor-execute-sql-为空"><a href="#print-cursor-execute-sql-为空" class="headerlink" title="print(cursor.execute(sql)) 为空"></a>print(cursor.execute(sql)) 为空</h3></li><li>因为执行的语句未非查询语句，只有查询语句才有返回值</li><li>其他语句，如插入语句等，都需要提交事务 commit() 之后才能得到返回值 <h3 id="树莓派-arm-架构安装的-nginx-默认配置缺失"><a href="#树莓派-arm-架构安装的-nginx-默认配置缺失" class="headerlink" title="树莓派 arm 架构安装的 nginx 默认配置缺失"></a>树莓派 arm 架构安装的 nginx 默认配置缺失</h3></li><li>找到对的位置的配置文件</li><li>然后可以从其他已安装 nginx 的设备中把 配置文件 传过来<h3 id="nginx-没有把服务代理出来"><a href="#nginx-没有把服务代理出来" class="headerlink" title="nginx 没有把服务代理出来"></a>nginx 没有把服务代理出来</h3></li><li><p>可能需要配置一下组和用 root 来启动</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- `groupadd nginx` </span><br><span class="line">- `useradd -g nginx nginx -s /sbin/nologin`</span><br></pre></td></tr></table></figure></div></li><li><p>还需要关注当前的用户和 root 用户的包是否有 nginx</p><h3 id="arm-架构的-chromedriver-版本"><a href="#arm-架构的-chromedriver-版本" class="headerlink" title="arm 架构的 chromedriver 版本"></a>arm 架构的 chromedriver 版本</h3></li><li>首先是要确保 chrome 浏览器和 chromedriver 版本一致</li><li>arm 架构的 chromedriver 实在难找，树莓派 4b 里的 chromiun 的版本为 78<ul><li>arm 架构的 chromedriver 版本为 78 根本找不到 </li></ul></li><li>这样的话，我们可以换个思路，把浏览器和驱动都升级到最新即可</li><li><code>sudo apt-get install chromium-browser</code> 更新最新</li><li><code>chromium-browser --version</code></li><li>👉 <a href="https://mirrors.tuna.tsinghua.edu.cn/raspberrypi/pool/main/c/chromium-browser/" target="_blank" rel="noopener">mirrors.tuna.tsinghua.edu.cn</a></li><li><code>sudo apt-get install chromium-chromedriver</code> 下载浏览器驱动，默认下了最新的</li><li>👉 <a href="https://launchpad.net/+search?field.text=chromium-chromedriver+armhf" target="_blank" rel="noopener">Launchpad.net</a></li></ul><h3 id="mysql-和-mariadb-的-group-by-字段"><a href="#mysql-和-mariadb-的-group-by-字段" class="headerlink" title="mysql 和 mariadb 的 group by 字段"></a>mysql 和 mariadb 的 group by 字段</h3><ul><li>[Err] 1055 - Expression #3 of SELECT list is not in GROUP BY clause and contains nonaggregated column ‘virus.tencent_virus_data.lastUpdateTime’ which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by</li><li>👉<a href="https://www.cnblogs.com/Wayou/p/mysql_group_by_issue.html" target="_blank" rel="noopener">MySQL GROUP BY 的问题</a></li><li>👉<a href="https://cloud.tencent.com/developer/article/1533773" target="_blank" rel="noopener">sql_mode之only_full_group_by</a><h3 id="mysql-和-mariadb-的-group-by-结果顺序"><a href="#mysql-和-mariadb-的-group-by-结果顺序" class="headerlink" title="mysql 和 mariadb 的 group by 结果顺序"></a>mysql 和 mariadb 的 group by 结果顺序</h3></li><li>👉<a href="https://www.coder.work/article/508344" target="_blank" rel="noopener">mysql - MariaDB上的“GROUP BY”的行为与MySQL不同</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;分析接口数据结构&quot;&gt;&lt;a href=&quot;#分析接口数据结构&quot; class=&quot;headerlink&quot; title=&quot;分析接口数据结构&quot;&gt;&lt;/a&gt;分析接口数据结构&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;找到数据的接口信息之后，请求获取数据并逐层分析数据结构&lt;/li&gt;
&lt;li&gt;然后提取需要的数据&lt;/li&gt;
&lt;li&gt;最后封装成方法&lt;figure class=&quot;highlight py&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;get_tencent_virus_data&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    headers = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;User-Agent&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      &lt;span class=&quot;string&quot;&gt;&#39;/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safar&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      &lt;span class=&quot;string&quot;&gt;&#39;i/537.36&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# https://news.qq.com/zt2020/page/feiyan.htm#/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    url = &lt;span class=&quot;string&quot;&gt;&quot;https://view.inews.qq.com/g2/getOnsInfo?name=disease_h5&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    res = requests.get(url, headers=headers)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    res.encoding = &lt;span class=&quot;string&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getSource = json.loads(res.text)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sourceData = json.loads(getSource[&lt;span class=&quot;string&quot;&gt;&quot;data&quot;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    lastUpdateTime = sourceData[&lt;span class=&quot;string&quot;&gt;&quot;lastUpdateTime&quot;&lt;/span&gt;]  &lt;span class=&quot;comment&quot;&gt;# 最后更新时间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    chinaTotal = sourceData[&lt;span class=&quot;string&quot;&gt;&quot;chinaTotal&quot;&lt;/span&gt;]  &lt;span class=&quot;comment&quot;&gt;# 总情况&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    chinaAdd = sourceData[&lt;span class=&quot;string&quot;&gt;&quot;chinaAdd&quot;&lt;/span&gt;]  &lt;span class=&quot;comment&quot;&gt;# 总确诊&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    areaTree = sourceData[&lt;span class=&quot;string&quot;&gt;&quot;areaTree&quot;&lt;/span&gt;]  &lt;span class=&quot;comment&quot;&gt;# 国家&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# 国家列表,中国&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name = areaTree[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;][&lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;]  &lt;span class=&quot;comment&quot;&gt;# 中国&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    today = areaTree[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;][&lt;span class=&quot;string&quot;&gt;&quot;today&quot;&lt;/span&gt;]  &lt;span class=&quot;comment&quot;&gt;# 今天新增确诊&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    total = areaTree[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;][&lt;span class=&quot;string&quot;&gt;&quot;total&quot;&lt;/span&gt;]  &lt;span class=&quot;comment&quot;&gt;# 今日总情况&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    provinces = areaTree[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;][&lt;span class=&quot;string&quot;&gt;&quot;children&quot;&lt;/span&gt;]  &lt;span class=&quot;comment&quot;&gt;# 34个省份&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# print(name)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# print(today)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# print(total)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# 今日确诊，目前确诊，总确诊，总死亡数，总死亡概率，总康复数，总康复概率&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    daily_data = [name, today[&lt;span class=&quot;string&quot;&gt;&quot;confirm&quot;&lt;/span&gt;], total[&lt;span class=&quot;string&quot;&gt;&quot;nowConfirm&quot;&lt;/span&gt;], total[&lt;span class=&quot;string&quot;&gt;&quot;confirm&quot;&lt;/span&gt;], total[&lt;span class=&quot;string&quot;&gt;&quot;dead&quot;&lt;/span&gt;], total[&lt;span class=&quot;string&quot;&gt;&quot;deadRate&quot;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  total[&lt;span class=&quot;string&quot;&gt;&quot;heal&quot;&lt;/span&gt;], total[&lt;span class=&quot;string&quot;&gt;&quot;healRate&quot;&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    today_details = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; province &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; provinces:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# print(province[&quot;name&quot;])  # 省名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# print(province[&quot;today&quot;])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# print(province[&quot;total&quot;])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        province_name_ = province[&lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# 省所属城市&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; city &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; province[&lt;span class=&quot;string&quot;&gt;&quot;children&quot;&lt;/span&gt;]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            city_name_ = city[&lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            city_today_confirm_ = city[&lt;span class=&quot;string&quot;&gt;&quot;today&quot;&lt;/span&gt;][&lt;span class=&quot;string&quot;&gt;&quot;confirm&quot;&lt;/span&gt;]  &lt;span class=&quot;comment&quot;&gt;# 该城市今日确诊&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            city_total_confirm_ = city[&lt;span class=&quot;string&quot;&gt;&quot;total&quot;&lt;/span&gt;][&lt;span class=&quot;string&quot;&gt;&quot;confirm&quot;&lt;/span&gt;]  &lt;span class=&quot;comment&quot;&gt;# 该城市总确诊&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            city_total_heal_ = city[&lt;span class=&quot;string&quot;&gt;&quot;total&quot;&lt;/span&gt;][&lt;span class=&quot;string&quot;&gt;&quot;heal&quot;&lt;/span&gt;]  &lt;span class=&quot;comment&quot;&gt;# 该城市总康复&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            city_total_heal_rate_ = city[&lt;span class=&quot;string&quot;&gt;&quot;total&quot;&lt;/span&gt;][&lt;span class=&quot;string&quot;&gt;&quot;healRate&quot;&lt;/span&gt;]  &lt;span class=&quot;comment&quot;&gt;# 该城市总康复概率&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            city_total_dead_ = city[&lt;span class=&quot;string&quot;&gt;&quot;total&quot;&lt;/span&gt;][&lt;span class=&quot;string&quot;&gt;&quot;dead&quot;&lt;/span&gt;]  &lt;span class=&quot;comment&quot;&gt;# 该城市总死亡&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            city_total_dead_rate_ = city[&lt;span class=&quot;string&quot;&gt;&quot;total&quot;&lt;/span&gt;][&lt;span class=&quot;string&quot;&gt;&quot;deadRate&quot;&lt;/span&gt;]  &lt;span class=&quot;comment&quot;&gt;# 该城市总死亡概率&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            today_details.append([lastUpdateTime, province_name_, city_name_, city_today_confirm_,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                  city_total_confirm_, city_total_heal_, city_total_heal_rate_,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                  city_total_dead_, city_total_dead_rate_&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                  ])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; today_details, daily_data&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
      <category term="Linux" scheme="http://www.orekiyuta.cn/tags/Linux/"/>
    
      <category term="Selenium" scheme="http://www.orekiyuta.cn/tags/Selenium/"/>
    
      <category term="ChromeDriver" scheme="http://www.orekiyuta.cn/tags/ChromeDriver/"/>
    
      <category term="JavaScript" scheme="http://www.orekiyuta.cn/tags/JavaScript/"/>
    
      <category term="Flask" scheme="http://www.orekiyuta.cn/tags/Flask/"/>
    
      <category term="Python" scheme="http://www.orekiyuta.cn/tags/Python/"/>
    
      <category term="RaspberryPi" scheme="http://www.orekiyuta.cn/tags/RaspberryPi/"/>
    
      <category term="Nginx" scheme="http://www.orekiyuta.cn/tags/Nginx/"/>
    
      <category term="Chromium" scheme="http://www.orekiyuta.cn/tags/Chromium/"/>
    
      <category term="Mariadb" scheme="http://www.orekiyuta.cn/tags/Mariadb/"/>
    
      <category term="MySQL" scheme="http://www.orekiyuta.cn/tags/MySQL/"/>
    
      <category term="BeautifulSoup" scheme="http://www.orekiyuta.cn/tags/BeautifulSoup/"/>
    
      <category term="Echarts" scheme="http://www.orekiyuta.cn/tags/Echarts/"/>
    
      <category term="Gunicorn" scheme="http://www.orekiyuta.cn/tags/Gunicorn/"/>
    
      <category term="Crontab" scheme="http://www.orekiyuta.cn/tags/Crontab/"/>
    
      <category term="Arm" scheme="http://www.orekiyuta.cn/tags/Arm/"/>
    
  </entry>
  
  <entry>
    <title>In Jupyter Notebook</title>
    <link href="http://www.orekiyuta.cn/archives/inJupyterNotebook/"/>
    <id>http://www.orekiyuta.cn/archives/inJupyterNotebook/</id>
    <published>2020-12-30T14:29:11.000Z</published>
    <updated>2020-12-30T15:38:05.120Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Configure"><a href="#Configure" class="headerlink" title="Configure"></a>Configure</h2><ul><li><code>pip install notebook</code></li><li><code>jupyter notebook</code> 启动,工作空间是当前目录</li><li><code>jupyter notebook --generate-config</code> 创建配置文件，指定工作空间的目录</li><li><code>c.NotebookApp.notebook_dir = r&#39;F:\Code&#39;</code>打开配置文件找到这个配置并修改<a id="more"></a><h2 id="QuickStart"><a href="#QuickStart" class="headerlink" title="QuickStart"></a>QuickStart</h2></li><li>进入编辑器后，可以进行文本操作</li><li>点击右侧的 New ,新建文件<br><img src="/images/inJupyterNotebook/Snipaste_2020-12-30_22-49-43.png" alt></li><li>绿色为编辑模式，蓝色为命令模式（按 ESC 切换）</li><li><img src="/images/inJupyterNotebook/Snipaste_2020-12-30_22-53-12.png" alt></li><li><img src="/images/inJupyterNotebook/Snipaste_2020-12-30_22-52-56.png" alt>      </li><li><p>单元格类型有两种，默认是代码类型</p><ul><li>在命令模式按 Y 切换为代码类型</li><li>按 M 切换为 Markdown 文本类型<br><img src="/images/inJupyterNotebook/Snipaste_2020-12-30_22-55-20.png" alt></li></ul></li><li><p>在单元格类输入内容后，ctrl + enter 执行</p><ul><li>代码单元格为执行代码，Markdown 单元格为输出文本样式<br><img src="/images/inJupyterNotebook/Snipaste_2020-12-30_22-56-59.png" alt></li></ul></li><li><p>常用快捷键</p><ul><li>ctrl + enter 执行并光标停留在当前单元格</li><li>shift + enter 执行并在下面创建新单元格，进入命令模式</li><li>alt + enter 执行并在下面创建新单元格，进入编辑模式</li><li>单元格类型切换 Y / M</li><li>在命令模式下，A 在上一行插入单元格</li><li>在命令模式下，B 在下一行插入单元格</li><li>在命令模式下，DD 删除当前单元格</li></ul></li><li><p>使用测试<br><img src="/images/inJupyterNotebook/Snipaste_2020-12-30_23-27-24.png" alt></p></li><li>这里需要注意的是,每个单元格是单独执行的,分单元格写代码的话,要从上到到下按顺序执行各个单元格</li></ul><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li>👉 <a href="https://jupyter.org/" target="_blank" rel="noopener">jupyter</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Configure&quot;&gt;&lt;a href=&quot;#Configure&quot; class=&quot;headerlink&quot; title=&quot;Configure&quot;&gt;&lt;/a&gt;Configure&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pip install notebook&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jupyter notebook&lt;/code&gt; 启动,工作空间是当前目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jupyter notebook --generate-config&lt;/code&gt; 创建配置文件，指定工作空间的目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;c.NotebookApp.notebook_dir = r&amp;#39;F:\Code&amp;#39;&lt;/code&gt;打开配置文件找到这个配置并修改
    
    </summary>
    
    
    
      <category term="Jupyter" scheme="http://www.orekiyuta.cn/tags/Jupyter/"/>
    
  </entry>
  
  <entry>
    <title>Flask Run</title>
    <link href="http://www.orekiyuta.cn/archives/flaskRun/"/>
    <id>http://www.orekiyuta.cn/archives/flaskRun/</id>
    <published>2020-12-28T14:08:59.000Z</published>
    <updated>2021-01-08T13:54:49.935Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Quickstart"><a href="#Quickstart" class="headerlink" title="Quickstart"></a>Quickstart</h2><ul><li><p>On PowerShell</p>  <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PY"><figure class="iseeu highlight /py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkdir flk</span><br><span class="line">cd flk</span><br><span class="line">py -m venv venv</span><br><span class="line">pip install flask</span><br><span class="line">mk hello.py</span><br><span class="line">New-Item hello.py -type file</span><br></pre></td></tr></table></figure></div></li><li><p>在 hello.py 写入 </p>  <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PY"><figure class="iseeu highlight /py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span><span class="params">()</span>:</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">'Hello, World!'</span></span><br></pre></td></tr></table></figure></div></li><li><p>run</p>  <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PY"><figure class="iseeu highlight /py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$env:FLASK_APP = <span class="string">"hello.py"</span></span><br><span class="line">flask run</span><br></pre></td></tr></table></figure></div></li><li><p>get / post</p>  <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PY"><figure class="iseeu highlight /py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hello, World!'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/name')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">elias</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hello, elias!'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/login', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"A"</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"B"</span></span><br></pre></td></tr></table></figure></div></li></ul><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li>👉<a href="https://flask.palletsprojects.com/en/1.1.x/" target="_blank" rel="noopener">Flask</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Quickstart&quot;&gt;&lt;a href=&quot;#Quickstart&quot; class=&quot;headerlink&quot; title=&quot;Quickstart&quot;&gt;&lt;/a&gt;Quickstart&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;On PowerShell&lt;/p&gt;
  &lt;div clas
      
    
    </summary>
    
    
    
      <category term="Flask" scheme="http://www.orekiyuta.cn/tags/Flask/"/>
    
      <category term="Python" scheme="http://www.orekiyuta.cn/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Scrapy Learning Log</title>
    <link href="http://www.orekiyuta.cn/archives/scrapyLearningLog/"/>
    <id>http://www.orekiyuta.cn/archives/scrapyLearningLog/</id>
    <published>2020-12-27T13:53:56.000Z</published>
    <updated>2020-12-27T16:11:10.345Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Scrapy-调试"><a href="#Scrapy-调试" class="headerlink" title="Scrapy 调试"></a>Scrapy 调试</h2><h3 id="通过-Shell-层层调试"><a href="#通过-Shell-层层调试" class="headerlink" title="通过 Shell 层层调试"></a>通过 Shell 层层调试</h3><ul><li><code>scrapy shell http://doc.scrapy.org/en/latest/_static/selectors-sample1.html</code></li><li>然后用选择器筛选</li></ul><h3 id="IDE-debug-启动-Shell"><a href="#IDE-debug-启动-Shell" class="headerlink" title="IDE debug 启动 Shell"></a>IDE debug 启动 Shell</h3><ul><li><p>在代码中加入</p>  <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PY"><figure class="iseeu highlight /py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> scrapy.shell <span class="keyword">import</span> inspect_response</span><br><span class="line">inspect_response(response, self)</span><br></pre></td></tr></table></figure></div></li><li><p><code>scrapy crwal AAA</code> 启动项目</p></li><li>然后项目执行到上面两句插入的位置的时候，就会启动 Shell </li><li>接着就在 Shell 里调试<br><img src="/images/scrapyLearningLog/Snipaste_2020-12-27_22-04-22.png" alt></li></ul><a id="more"></a><h3 id="直接在-IDE-里调试"><a href="#直接在-IDE-里调试" class="headerlink" title="直接在 IDE 里调试"></a>直接在 IDE 里调试</h3><ul><li>新建文件写入  <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PY"><figure class="iseeu highlight /py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> scrapy <span class="keyword">import</span> cmdline</span><br><span class="line"><span class="comment"># douban 为要调试的文件名</span></span><br><span class="line">name = <span class="string">'douban'</span></span><br><span class="line">cmd = <span class="string">'scrapy crawl &#123;0&#125;'</span>.format(name)</span><br><span class="line">cmdline.execute(cmd.split())</span><br></pre></td></tr></table></figure></div></li></ul><p><img src="/images/scrapyLearningLog/Snipaste_2020-12-27_22-06-33.png" alt></p><ul><li>然后到要调试的文件里设置断点</li><li>最后回到上面新建的文件里面右键 debug 即可</li></ul><h2 id="设置请求头"><a href="#设置请求头" class="headerlink" title="设置请求头"></a>设置请求头</h2><ul><li>有时候不设置请求头，会被拒绝访问 403</li><li><p>scrapy 有两种方式设置请求头，一种是在 settings.py 里配置</p>  <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PY"><figure class="iseeu highlight /py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">USER_AGENT = <span class="string">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36'</span></span><br></pre></td></tr></table></figure></div></li><li><p>另一种是在函数里写</p>  <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PY"><figure class="iseeu highlight /py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DoubanSpider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line">   headers = &#123;</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) '</span></span><br><span class="line">                    <span class="string">'Chrome/53.0.2785.143 Safari/537.36'</span>,</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div></li><li><p>然后在 start_request()里调用</p>  <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PY"><figure class="iseeu highlight /py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DoubanSpider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line">name = <span class="string">'douban'</span></span><br><span class="line">allowed_domains = [<span class="string">'movie.douban.com/top250'</span>]</span><br><span class="line"><span class="comment"># 把 这里的 start_urls 写在 start_requests() 里能执行更多操作，这里的只是简单的设置 url</span></span><br><span class="line"><span class="comment"># start_urls = ['http://movie.douban.com/top250/']</span></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) '</span></span><br><span class="line">                <span class="string">'Chrome/53.0.2785.143 Safari/537.36'</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这些方法参数 self 应该是指上面定义的那些变量</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">start_requests</span><span class="params">(self)</span>:</span></span><br><span class="line">    url = <span class="string">'https://movie.douban.com/top250'</span></span><br><span class="line">    <span class="keyword">yield</span> Request(url, headers=self.headers)</span><br></pre></td></tr></table></figure></div></li></ul><h2 id="请求下一页-但没返回"><a href="#请求下一页-但没返回" class="headerlink" title="请求下一页,但没返回"></a>请求下一页,但没返回</h2><ul><li>DEBUG: Filtered offsite request to</li><li>原因是 request 的地址和 allow_domain 里面的冲突，从而被过滤掉,可以停用过滤功能<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DIFF"><figure class="iseeu highlight /diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">next_url = response.xpath('//span[@class="next"]/a/@href').extract_first()</span><br><span class="line">if next_url:</span><br><span class="line">next_url = 'https://movie.douban.com/top250' + next_url</span><br><span class="line"><span class="deletion">-yield Request(next_url, headers=self.headers)</span></span><br><span class="line"><span class="addition">+yield Request(next_url, headers=self.headers, dont_filter=True)</span></span><br></pre></td></tr></table></figure></div></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Scrapy-调试&quot;&gt;&lt;a href=&quot;#Scrapy-调试&quot; class=&quot;headerlink&quot; title=&quot;Scrapy 调试&quot;&gt;&lt;/a&gt;Scrapy 调试&lt;/h2&gt;&lt;h3 id=&quot;通过-Shell-层层调试&quot;&gt;&lt;a href=&quot;#通过-Shell-层层调试&quot; class=&quot;headerlink&quot; title=&quot;通过 Shell 层层调试&quot;&gt;&lt;/a&gt;通过 Shell 层层调试&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;scrapy shell http://doc.scrapy.org/en/latest/_static/selectors-sample1.html&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;然后用选择器筛选&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;IDE-debug-启动-Shell&quot;&gt;&lt;a href=&quot;#IDE-debug-启动-Shell&quot; class=&quot;headerlink&quot; title=&quot;IDE debug 启动 Shell&quot;&gt;&lt;/a&gt;IDE debug 启动 Shell&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在代码中加入&lt;/p&gt;
  &lt;figure class=&quot;highlight py&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; scrapy.shell &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; inspect_response&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;inspect_response(response, self)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;scrapy crwal AAA&lt;/code&gt; 启动项目&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;然后项目执行到上面两句插入的位置的时候，就会启动 Shell &lt;/li&gt;
&lt;li&gt;接着就在 Shell 里调试&lt;br&gt;&lt;img src=&quot;/images/scrapyLearningLog/Snipaste_2020-12-27_22-04-22.png&quot; alt&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
      <category term="Python" scheme="http://www.orekiyuta.cn/tags/Python/"/>
    
      <category term="Scrapy" scheme="http://www.orekiyuta.cn/tags/Scrapy/"/>
    
  </entry>
  
  <entry>
    <title>Step into Scrapy</title>
    <link href="http://www.orekiyuta.cn/archives/stepIntoScrapy/"/>
    <id>http://www.orekiyuta.cn/archives/stepIntoScrapy/</id>
    <published>2020-12-26T11:24:56.000Z</published>
    <updated>2020-12-27T09:56:15.823Z</updated>
    
    <content type="html"><![CDATA[<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ul><li><code>pip install scrapy</code></li><li><code>scrapy</code> 查看用法</li><li><code>scrapy startproject getTiobe</code> 新建 scrapy 项目</li><li><code>cd getTiobe\spiders</code> 进入该目录</li><li><code>scrapy genspider tiobe www.tiobe.com/tiobe-index</code> 生成该链接的爬虫文件<br><img src="/images/stepIntoScrapy/Snipaste_2020-12-26_19-34-43.png" alt><a id="more"></a><h2 id="获取"><a href="#获取" class="headerlink" title="获取"></a>获取</h2></li><li>获取该元素对应的 css 选择器<br><img src="/images/stepIntoScrapy/Snipaste_2020-12-26_19-36-35.png" alt></li><li>修改 parse 方法</li><li><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PY"><figure class="iseeu highlight /py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> response.css(<span class="string">'#top20 &gt; tbody &gt; tr'</span>):</span><br><span class="line">    <span class="keyword">yield</span> &#123;</span><br><span class="line">        <span class="string">'rank_this-year'</span>: item.css(<span class="string">'td:nth-child(1)::text'</span>).get().strip(),</span><br><span class="line">        <span class="string">'rank_last-year'</span>: item.css(<span class="string">'td:nth-child(2)::text'</span>).get().strip(),</span><br><span class="line">        <span class="string">'programming_language'</span>: item.css(<span class="string">'td:nth-child(4)::text'</span>).get().strip(),</span><br><span class="line">        <span class="string">'ratings'</span>: item.css(<span class="string">'td:nth-child(5)::text'</span>).get().strip(),</span><br><span class="line">        <span class="string">'change'</span>: item.css(<span class="string">'td:nth-child(6)::text'</span>).get().strip(),</span><br><span class="line">        <span class="string">'date'</span>: time.strftime(<span class="string">'%Y/%m/%d %H:%M:%S'</span>, time.localtime(time.time()))</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div></li></ul><h2 id="实施"><a href="#实施" class="headerlink" title="实施"></a>实施</h2><ul><li><p>在 spiders 目录下的 settings.py 设置导出 json 格式</p><ul><li><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FEED_FORMAT = &quot;json&quot;</span><br><span class="line">FEED_URI = &quot;tiobe.json&quot;</span><br></pre></td></tr></table></figure></div></li></ul></li><li><p><code>scrapy crawl tiobe</code></p></li><li>就可以在项目的目录下找到 tiobe.json 获得的数据了</li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li>👉 <a href="https://blog.csdn.net/mieleizhi0522/article/details/82142856" target="_blank" rel="noopener">python中yield的用法详解——最简单，最清晰的解释</a></li><li>👉 <a href="https://scrapy.org/" target="_blank" rel="noopener">https://scrapy.org/</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;配置&quot;&gt;&lt;a href=&quot;#配置&quot; class=&quot;headerlink&quot; title=&quot;配置&quot;&gt;&lt;/a&gt;配置&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pip install scrapy&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;scrapy&lt;/code&gt; 查看用法&lt;/li&gt;
&lt;li&gt;&lt;code&gt;scrapy startproject getTiobe&lt;/code&gt; 新建 scrapy 项目&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd getTiobe\spiders&lt;/code&gt; 进入该目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;scrapy genspider tiobe www.tiobe.com/tiobe-index&lt;/code&gt; 生成该链接的爬虫文件&lt;br&gt;&lt;img src=&quot;/images/stepIntoScrapy/Snipaste_2020-12-26_19-34-43.png&quot; alt&gt;
    
    </summary>
    
    
    
      <category term="Python" scheme="http://www.orekiyuta.cn/tags/Python/"/>
    
      <category term="Scrapy" scheme="http://www.orekiyuta.cn/tags/Scrapy/"/>
    
  </entry>
  
  <entry>
    <title>Batch Note</title>
    <link href="http://www.orekiyuta.cn/archives/batchNote/"/>
    <id>http://www.orekiyuta.cn/archives/batchNote/</id>
    <published>2020-12-12T17:17:13.000Z</published>
    <updated>2021-01-09T14:51:08.053Z</updated>
    
    <content type="html"><![CDATA[<h3 id="搜索当前目录下的所有文件"><a href="#搜索当前目录下的所有文件" class="headerlink" title="搜索当前目录下的所有文件"></a>搜索当前目录下的所有文件</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BAT"><figure class="iseeu highlight /bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="variable">%%i</span> <span class="keyword">in</span> (*.*) <span class="keyword">do</span> <span class="built_in">echo</span> "<span class="variable">%%i</span>"</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure></div><h3 id="搜索当前目录下被筛选的文件"><a href="#搜索当前目录下被筛选的文件" class="headerlink" title="搜索当前目录下被筛选的文件"></a>搜索当前目录下被筛选的文件</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BAT"><figure class="iseeu highlight /bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="variable">%%i</span> <span class="keyword">in</span> (*.<span class="built_in">md</span>) <span class="keyword">do</span> <span class="built_in">echo</span> "<span class="variable">%%i</span>"</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure></div><p>可用正则表达式<br><a id="more"></a></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BAT"><figure class="iseeu highlight /bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="variable">%%i</span> <span class="keyword">in</span> (?.<span class="built_in">md</span>) <span class="keyword">do</span> <span class="built_in">echo</span> "<span class="variable">%%i</span>"</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure></div><p>上面表示搜索只有一个字符名，且后缀为 md 的文件</p><h3 id="以管理员身份执行命令"><a href="#以管理员身份执行命令" class="headerlink" title="以管理员身份执行命令"></a>以管理员身份执行命令</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BAT"><figure class="iseeu highlight /bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%<span class="number">1</span> mshta vbscript:CreateObject("Shell.Application").ShellExecute("<span class="built_in">cmd</span>.exe","/c %~s0 ::","","runas",<span class="number">1</span>)(window.close)&amp;&amp;<span class="keyword">exit</span></span><br></pre></td></tr></table></figure></div><p>写在脚本文件顶部即可</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BAT"><figure class="iseeu highlight /bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">setlocal</span> EnableDelayedExpansion</span><br><span class="line"><span class="built_in">color</span> <span class="number">3</span>e</span><br><span class="line"></span><br><span class="line"><span class="built_in">PUSHD</span> %~DP0 &amp; <span class="built_in">cd</span> /d "%~dp0"</span><br><span class="line">%<span class="number">1</span> %<span class="number">2</span></span><br><span class="line">mshta vbscript:createobject("shell.application").shellexecute("%~s0","<span class="keyword">goto</span> :runas","","runas",<span class="number">1</span>)(window.close)&amp;<span class="keyword">goto</span> :eof</span><br><span class="line">:runas</span><br><span class="line"> </span><br><span class="line">::填写自己的脚本</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> 执行完毕,任意键退出</span><br><span class="line"></span><br><span class="line"><span class="built_in">pause</span> &gt;<span class="built_in">nul</span></span><br><span class="line"><span class="keyword">exit</span></span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BAT"><figure class="iseeu highlight /bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="built_in">NUL</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span> REG.exe query "HKU\S-<span class="number">1</span>-<span class="number">5</span>-<span class="number">19</span>" || (</span><br><span class="line">    <span class="built_in">ECHO</span> <span class="built_in">SET</span> UAC = CreateObject^("Shell.Application"^) &gt; "<span class="variable">%TEMP%</span>\Getadmin.vbs"</span><br><span class="line">    <span class="built_in">ECHO</span> UAC.ShellExecute "%~f0", "%<span class="number">1</span>", "", "runas", <span class="number">1</span> &gt;&gt; "<span class="variable">%TEMP%</span>\Getadmin.vbs"</span><br><span class="line">    "<span class="variable">%TEMP%</span>\Getadmin.vbs"</span><br><span class="line">    <span class="built_in">DEL</span> /f /q "<span class="variable">%TEMP%</span>\Getadmin.vbs" <span class="number">2</span>&gt;<span class="built_in">NUL</span></span><br><span class="line">    <span class="keyword">Exit</span> /b</span><br><span class="line">)</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BAT"><figure class="iseeu highlight /bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="built_in">nul</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span> "<span class="variable">%SYSTEMROOT%</span>\system32\<span class="built_in">cacls</span>.exe" "<span class="variable">%SYSTEMROOT%</span>\system32\config\system"</span><br><span class="line"><span class="keyword">if</span> '<span class="variable">%errorlevel%</span>' <span class="keyword">NEQ</span> '<span class="number">0</span>' (</span><br><span class="line"><span class="keyword">goto</span> UACPrompt</span><br><span class="line">) <span class="keyword">else</span> ( <span class="keyword">goto</span> gotAdmin )</span><br><span class="line">:UACPrompt</span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">Set</span> UAC = CreateObject^("Shell.Application"^) &gt; "<span class="variable">%temp%</span>\getadmin.vbs"</span><br><span class="line"><span class="built_in">echo</span> UAC.ShellExecute "%~s0", "", "", "runas", <span class="number">1</span> &gt;&gt; "<span class="variable">%temp%</span>\getadmin.vbs"</span><br><span class="line">"<span class="variable">%temp%</span>\getadmin.vbs"</span><br><span class="line"><span class="keyword">exit</span> /B</span><br><span class="line">:gotAdmin</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">exist</span> "<span class="variable">%temp%</span>\getadmin.vbs" ( <span class="built_in">del</span> "<span class="variable">%temp%</span>\getadmin.vbs" )</span><br></pre></td></tr></table></figure></div><h3 id="在指定目录下打开-git-bash"><a href="#在指定目录下打开-git-bash" class="headerlink" title="在指定目录下打开 git-bash"></a>在指定目录下打开 git-bash</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BAT"><figure class="iseeu highlight /bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">start</span> C:\Program" "Files\Git\git-bash.exe --<span class="built_in">cd</span>=f:\Code\</span><br></pre></td></tr></table></figure></div><p>路径里的空格需要用双引号<br><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BAT"><figure class="iseeu highlight /bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">call</span> f: </span><br><span class="line"><span class="keyword">call</span> <span class="built_in">cd</span> Code\</span><br><span class="line"><span class="built_in">start</span> C:\Program" "Files\Git\git-bash.exe</span><br></pre></td></tr></table></figure></div></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BAT"><figure class="iseeu highlight /bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> /p input="输入要在git-bash中打开的项目路径:"</span><br><span class="line"><span class="built_in">start</span> c:\Program" "Files\Git\git-bash.exe --<span class="built_in">cd</span>=<span class="variable">%input%</span></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure></div><p>输入的项目路径需要在同一个盘符，因为切换盘符不用 cd</p><h3 id="输出内容到剪贴板"><a href="#输出内容到剪贴板" class="headerlink" title="输出内容到剪贴板"></a>输出内容到剪贴板</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BAT"><figure class="iseeu highlight /bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Windows\System&gt; clip /?</span><br><span class="line"></span><br><span class="line">CLIP</span><br><span class="line"></span><br><span class="line">描述:</span><br><span class="line">    将命令行工具的输出重定向到 Windows 剪贴板。这个文本输出可以被粘贴</span><br><span class="line">    到其他程序中。</span><br><span class="line"></span><br><span class="line">参数列表:</span><br><span class="line">    /?                  显示此帮助消息。</span><br><span class="line"></span><br><span class="line">示例:</span><br><span class="line">    <span class="built_in">DIR</span> | CLIP          将一份当前目录列表的副本放入 Windows 剪贴板。</span><br><span class="line"></span><br><span class="line">    CLIP &lt; README.TXT   将 readme.txt 的一份文本放入 Windows 剪贴板。</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BAT"><figure class="iseeu highlight /bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> elias | clip</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BAT"><figure class="iseeu highlight /bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> /p="<span class="variable">%date%</span>"&lt;<span class="built_in">nul</span> | clip</span><br></pre></td></tr></table></figure></div><h3 id="连续执行命令"><a href="#连续执行命令" class="headerlink" title="连续执行命令"></a>连续执行命令</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BAT"><figure class="iseeu highlight /bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">call</span> f: </span><br><span class="line"><span class="keyword">call</span> <span class="built_in">cd</span> Code\</span><br><span class="line"><span class="keyword">call</span> hexo clean</span><br><span class="line"><span class="keyword">call</span> hexo g</span><br><span class="line"><span class="keyword">call</span> hexo d</span><br></pre></td></tr></table></figure></div><p>这里每个命令前面最好保留 call ,没有 call 的话, cmd 会在中途关闭</p><h3 id="配置-java-环境变量"><a href="#配置-java-环境变量" class="headerlink" title="配置 java 环境变量"></a>配置 java 环境变量</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BAT"><figure class="iseeu highlight /bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">%<span class="number">1</span> mshta vbscript:CreateObject(“Shell.Application”).ShellExecute(“<span class="built_in">cmd</span>.exe”,"/c %~s0 ::","",“runas”,<span class="number">1</span>)(window.close)&amp;&amp;<span class="keyword">exit</span> </span><br><span class="line"><span class="built_in">echo</span> 正在设置 Java 环境变量</span><br><span class="line">wmic ENVIRONMENT create name="JAVA_HOME",username="&lt;system&gt;",VariableValue="C:\Program Files (x86)\Java\jdk1.<span class="number">7</span>.<span class="number">0</span>_79"</span><br><span class="line">wmic ENVIRONMENT create name="CLASSPATH",username="&lt;system&gt;",VariableValue=".;<span class="variable">%%J</span>AVA_HOME<span class="variable">%%\</span>lib;<span class="variable">%%J</span>AVA_HOME<span class="variable">%%\</span>lib\tools.jar"</span><br><span class="line">wmic ENVIRONMENT where "name='<span class="built_in">PATH</span>' and username='&lt;system&gt;'" <span class="built_in">set</span> VariableValue="<span class="variable">%path%</span>;<span class="variable">%%J</span>AVA_HOME<span class="variable">%%\</span>bin;<span class="variable">%%J</span>AVA_HOME<span class="variable">%%\</span>jre\bin;"</span><br><span class="line"><span class="built_in">echo</span> 设置完成</span><br><span class="line"><span class="keyword">call</span> java -version</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure></div><h3 id="获取时间"><a href="#获取时间" class="headerlink" title="获取时间"></a>获取时间</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BAT"><figure class="iseeu highlight /bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">%date%</span> <span class="variable">%time%</span></span><br></pre></td></tr></table></figure></div><h3 id="截取字符串"><a href="#截取字符串" class="headerlink" title="截取字符串"></a>截取字符串</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BAT"><figure class="iseeu highlight /bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">%date:~0,4%</span></span><br></pre></td></tr></table></figure></div><p>开始位置 0，截取字符数 4</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BAT"><figure class="iseeu highlight /bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> str=<span class="number">123456789</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%str:~3,4%</span></span><br></pre></td></tr></table></figure></div><h3 id="语音读取"><a href="#语音读取" class="headerlink" title="语音读取"></a>语音读取</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BAT"><figure class="iseeu highlight /bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mshta vbscript:CreateObject("SAPI.SpVoice").speak("elias")(Window.close)</span><br></pre></td></tr></table></figure></div><h3 id="内容重定向"><a href="#内容重定向" class="headerlink" title="内容重定向"></a>内容重定向</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BAT"><figure class="iseeu highlight /bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ipconfig</span> &gt; d:ip.txt</span><br></pre></td></tr></table></figure></div><ul><li>将内容重定向输出到新的位置</li><li><code>&gt;</code>   覆盖式重定向</li><li><code>&gt;&gt;</code>  增量式重定向</li><li><code>&gt;nul</code> 重定向到空设备 nul,所以没有输出内容</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;搜索当前目录下的所有文件&quot;&gt;&lt;a href=&quot;#搜索当前目录下的所有文件&quot; class=&quot;headerlink&quot; title=&quot;搜索当前目录下的所有文件&quot;&gt;&lt;/a&gt;搜索当前目录下的所有文件&lt;/h3&gt;&lt;figure class=&quot;highlight bat&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;%%i&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; (*.*) &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &quot;&lt;span class=&quot;variable&quot;&gt;%%i&lt;/span&gt;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;pause&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;搜索当前目录下被筛选的文件&quot;&gt;&lt;a href=&quot;#搜索当前目录下被筛选的文件&quot; class=&quot;headerlink&quot; title=&quot;搜索当前目录下被筛选的文件&quot;&gt;&lt;/a&gt;搜索当前目录下被筛选的文件&lt;/h3&gt;&lt;figure class=&quot;highlight bat&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;%%i&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; (*.&lt;span class=&quot;built_in&quot;&gt;md&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &quot;&lt;span class=&quot;variable&quot;&gt;%%i&lt;/span&gt;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;pause&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可用正则表达式&lt;br&gt;
    
    </summary>
    
    
    
      <category term="Batch" scheme="http://www.orekiyuta.cn/tags/Batch/"/>
    
  </entry>
  
  <entry>
    <title>Fish:The Friendly Interactive Shell</title>
    <link href="http://www.orekiyuta.cn/archives/Thefriendlyinteractiveshell/"/>
    <id>http://www.orekiyuta.cn/archives/Thefriendlyinteractiveshell/</id>
    <published>2020-12-11T18:18:43.000Z</published>
    <updated>2020-12-12T15:01:37.416Z</updated>
    
    <content type="html"><![CDATA[<ul><li><code>$ sudo apt-get install fish</code></li><li><code>fish</code> 启动 fish</li><li><p>有下划线提示表明路径存在</p><ul><li><img src="/images/fishShell/Snipaste_2020-12-12_02-51-05.png" alt></li></ul></li><li><p>无效命令显示红色，有效命令为蓝色</p><ul><li><img src="/images/fishShell/Snipaste_2020-12-12_02-52-37.png" alt></li></ul></li><li><p>输入命令后，fish 会有历史记录提示和猜测提示，按下 tab 也有提示</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ sudo apt-get install fish&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fish&lt;/code&gt; 启动 fish&lt;/li&gt;
&lt;li&gt;&lt;p&gt;有下划线提示表明路径存在&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&quot;/images
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="http://www.orekiyuta.cn/tags/Linux/"/>
    
      <category term="Shell" scheme="http://www.orekiyuta.cn/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>I got a Raspberry Pi</title>
    <link href="http://www.orekiyuta.cn/archives/IgotaRaspberryPi/"/>
    <id>http://www.orekiyuta.cn/archives/IgotaRaspberryPi/</id>
    <published>2020-12-11T14:34:39.000Z</published>
    <updated>2021-01-08T19:45:59.301Z</updated>
    
    <content type="html"><![CDATA[<h2 id="通过网络分享连接树莓派"><a href="#通过网络分享连接树莓派" class="headerlink" title="通过网络分享连接树莓派"></a>通过网络分享连接树莓派</h2><ul><li>确保一台能上网的主机</li><li>把已经连接的网络通过想要共享的形式共享出去</li><li><img src="/images/IgotaRaspberryPi/Snipaste_2020-12-11_22-49-28.png" alt></li><li>开启共享前后的本机 ipv4</li><li><img src="/images/IgotaRaspberryPi/Snipaste_2020-12-11_23-03-18.png" alt></li></ul><a id="more"></a><ul><li>开启共享前后的局域网内 ip 变化<ul><li>我这里之前是连接过了,有缓存记录了，未连接过的情况下，新分配的 ip 就是新连接的设备所属 ip</li></ul></li><li><img src="/images/IgotaRaspberryPi/Snipaste_2020-12-11_23-06-54.png" alt></li><li>然后通过 SSH 连接树莓派即可<ul><li>树莓派默认用户名 pi , 密码 raspberry</li></ul></li><li><img src="/images/IgotaRaspberryPi/Snipaste_2020-12-11_23-10-14.png" alt></li></ul><h2 id="查看树莓派基本信息"><a href="#查看树莓派基本信息" class="headerlink" title="查看树莓派基本信息"></a>查看树莓派基本信息</h2><ul><li><code>pinout</code> 查看针脚等基本硬件信息</li><li><img src="/images/IgotaRaspberryPi/Snipaste_2020-12-12_03-05-18.png" alt></li><li><code>vcgencmd measure_temp</code> 查看 cpu 温度</li><li><code>cat /proc/cpuinfo</code> 查看 cpu 信息</li><li><code>lscpu</code></li><li><img src="/images/IgotaRaspberryPi/Snipaste_2020-12-12_02-29-37.png" alt></li><li><code>free -h</code> 查看内存</li><li><code>lsblk</code> 查看磁盘</li><li><code>df -hT</code></li><li><code>date</code> 查看时间</li><li><code>cat /proc/device-tree/model</code> 查看树莓派型号</li><li><code>getconf LONG_BIT</code> 查看树莓派系统位数</li><li><code>file /bin/ls</code></li><li><img src="/images/IgotaRaspberryPi/Snipaste_2020-12-12_02-39-09.png" alt></li><li><code>lsusb</code> 查看 usb</li><li><code>lsmod</code> 查看其他硬件</li><li><img src="/images/IgotaRaspberryPi/Snipaste_2020-12-12_02-41-36.png" alt></li><li><code>vcgencmd get_config arm_freq</code> 查看 CPU 的时钟频率</li><li><code>cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq</code></li><li><img src="/images/IgotaRaspberryPi/Snipaste_2020-12-12_02-42-21.png" alt></li><li><p><code>dmesg | more</code> 查看更多硬件信息</p></li><li><p><code>ifconfig</code> 查看 ip </p></li><li><p><img src="/images/IgotaRaspberryPi/Snipaste_2020-12-12_02-45-49.png" alt></p></li><li><p><code>sudo ifconfig wlan0 down</code> 关闭 wlan</p></li><li><code>sudo ifconfig wlan0 up</code></li><li><img src="/images/IgotaRaspberryPi/Snipaste_2020-12-12_02-49-22.png" alt></li></ul><h2 id="Windows-远程桌面连接"><a href="#Windows-远程桌面连接" class="headerlink" title="Windows 远程桌面连接"></a>Windows 远程桌面连接</h2><ul><li><code>sudo apt-get purge tightvnc xrdp</code> 先删除之前系统自带的 xrdp 和 tightvnc</li><li><code>sudo apt-get install tightvncserver xrdp</code> 重新安装</li><li><p><code>sudo apt update &amp;&amp; sudo apt upgrade</code> 如果有错误可以执行这个</p></li><li><p>然后 Win+r , 输入 mstsc </p></li><li>接着在远程桌面连接窗口输入 树莓派 ip , 账户密码</li></ul><h2 id="开启-SSH"><a href="#开启-SSH" class="headerlink" title="开启 SSH"></a>开启 SSH</h2><h3 id="已连接树莓派"><a href="#已连接树莓派" class="headerlink" title="已连接树莓派"></a>已连接树莓派</h3><ul><li><code>sudo raspi-config</code></li><li>interfacing Options</li></ul><h3 id="未连接树莓派"><a href="#未连接树莓派" class="headerlink" title="未连接树莓派"></a>未连接树莓派</h3><ul><li>在内存卡根目录新建 SSH 文件,无后缀</li></ul><!-- ## 设置静态 IP-`sudo nano /etc.dhcpcd.conf`- ![](/images/IgotaRaspberryPi/Snipaste_2020-12-14_21-53-29.png)- 修改完毕，ctrl+x ， y 保存 - `sudo reboot` 重启树莓派，再次 ifconfig 查看 ip --><h2 id="设置-mariadb-远程连接"><a href="#设置-mariadb-远程连接" class="headerlink" title="设置 mariadb 远程连接"></a>设置 mariadb 远程连接</h2><p>👉 <a href="https://www.jianshu.com/p/f440099f056d" target="_blank" rel="noopener">树莓派4 官方系统 安装mysql</a><br>👉 <a href="https://blog.csdn.net/Co_zy/article/details/73923962" target="_blank" rel="noopener">解决MariaDB无法远程连接</a></p><h2 id="开启远程-FTP"><a href="#开启远程-FTP" class="headerlink" title="开启远程 FTP"></a>开启远程 FTP</h2><p>👉 <a href="https://blog.csdn.net/madrabbit1987/article/details/53750272" target="_blank" rel="noopener">FTP连接树莓派（Linux）进行文件传输</a></p><h2 id="树莓派磁盘没有占满整个-SD-卡"><a href="#树莓派磁盘没有占满整个-SD-卡" class="headerlink" title="树莓派磁盘没有占满整个 SD 卡"></a>树莓派磁盘没有占满整个 SD 卡</h2><ul><li><code>df -h</code></li><li><img src="/images/IgotaRaspberryPi/Snipaste_2020-12-24_14-44-40.png" alt></li><li><code>sudo fdisk -l</code></li><li><img src="/images/IgotaRaspberryPi/Snipaste_2020-12-24_14-45-17.png" alt></li><li>看到了 SD 卡的磁盘空间</li><li><code>sudo fdisk /dev/mmcblk0</code></li><li><img src="/images/IgotaRaspberryPi/Snipaste_2020-12-24_14-56-29.png" alt></li><li><code>sudo reboot</code></li><li><code>sudo resize2fs /dev/mmcblk0p2</code> 更新硬盘大小</li><li><code>df -h</code></li><li>上面操作不行的话就切换到管理员用户 <code>sudo su</code>,再试一次</li><li><img src="/images/IgotaRaspberryPi/Snipaste_2020-12-24_15-36-11.png" alt></li></ul><p>👉 <a href="https://blog.csdn.net/ourkix/article/details/109445090" target="_blank" rel="noopener">解决树莓派磁盘没有占满整个sd卡的方法</a><br>👉 <a href="https://blog.csdn.net/ls0111/article/details/85607792?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.control" target="_blank" rel="noopener">充分使用树莓派SD卡容量</a></p><h2 id="修正时间"><a href="#修正时间" class="headerlink" title="修正时间"></a>修正时间</h2><ul><li><code>date</code></li><li><code>sudo dpkg-reconfigure tzdata</code> 选择时区</li><li><code>sudo date  --s=&quot;2019-11-27 14:54:00&quot;</code> 强制手动修正</li></ul><h2 id="离线安装-Redis"><a href="#离线安装-Redis" class="headerlink" title="离线安装 Redis"></a>离线安装 Redis</h2><ul><li>下载 arm 架构的安装包</li><li>ftp 到树莓派里</li><li><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar xzf 4.0-rc2.tar.gz</span><br><span class="line">cd redis-4.0-rc2</span><br><span class="line">make</span><br><span class="line">make install </span><br><span class="line">redis-server</span><br></pre></td></tr></table></figure></div></li></ul><p>👉 <a href="https://www.lxx1.com/2532" target="_blank" rel="noopener">Redis编译安装及卸载方法</a></p><h2 id="设置-Redis-远程连接"><a href="#设置-Redis-远程连接" class="headerlink" title="设置 Redis 远程连接"></a>设置 Redis 远程连接</h2><ul><li>我这里是修改了 Redis 压缩包解压后的文件里面的 redis.conf</li><li>进入解压后的 Redis 文件目录下 读取该目录下的配置启动 Redis</li><li><code>redis-server redis.conf</code> redis 启动后,到本地测试连接</li><li><img src="/images/IgotaRaspberryPi/Snipaste_2020-12-25_15-06-33.png" alt></li><li>再用可视化客户端测试一下</li><li><img src="/images/IgotaRaspberryPi/Snipaste_2020-12-25_15-28-39.png" alt><br>👉 <a href="https://www.cnblogs.com/liuxiutianxia/p/11057120.html" target="_blank" rel="noopener">redis设置远程连接</a></li></ul><h2 id="Linux-切换用户"><a href="#Linux-切换用户" class="headerlink" title="Linux 切换用户"></a>Linux 切换用户</h2><ul><li><code>sudo su</code> 切换成 root</li><li><code>su [username]</code> 切换成其他用户,如:<code>sudo pi</code></li><li>👉 <a href="https://blog.csdn.net/farYang/article/details/50779767" target="_blank" rel="noopener">初次使用树莓派并启用root管理员</a></li></ul><h2 id="不同网段问题"><a href="#不同网段问题" class="headerlink" title="不同网段问题"></a>不同网段问题</h2><ul><li>当前内网的网段为 172 </li><li>而新接入的交换机和树莓派的网段为 192 </li><li>需要在网络连接的以太网 ipv4 里设置 192 网段 , 如 192.168.137.1 来访问树莓派</li><li>切换回内网需要切换为 172 网段 或者 设置自动获取ip</li></ul><h2 id="离线安装-pip-包"><a href="#离线安装-pip-包" class="headerlink" title="离线安装 pip 包"></a>离线安装 pip 包</h2><ul><li><code>pip3 freeze &gt;requirements.txt</code> 在已安装好包的设备上导出依赖列表</li><li><code>pip3 download -r requirements.txt -d -d E:\a\</code>  下载到对应目录</li><li>用 FTP 把包传到离线的设备上</li><li><code>pip3 install ./*</code> 进入包目录安装全部或者选择安装</li></ul><h2 id="查看-apt-get-已安装的程序"><a href="#查看-apt-get-已安装的程序" class="headerlink" title="查看 apt-get 已安装的程序"></a>查看 apt-get 已安装的程序</h2><ul><li><code>dpkg --get-selections | grep nginx</code></li><li><code>dpkg -i | grep &#39;^ii&#39;</code></li><li><code>sudo apt-get install aptitude</code> 或者使用这个工具</li><li><code>sudo aptitude</code></li></ul><h2 id="Nginx-无法正常工作相关"><a href="#Nginx-无法正常工作相关" class="headerlink" title="Nginx 无法正常工作相关"></a>Nginx 无法正常工作相关</h2><ul><li>树莓派上 apt-get 安装的 nginx 的默认配置文件内容很少，从其他设备安装 nginx 然后把配置文件复制过来</li><li>主要配置就是把通过默认nginx 80 端口的请求转发到自己定义的 upstream 里</li><li><p>添加多个服务，配置权重就可以实现负载均衡，就是请求一个地址，按照权重轮询服务</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NGINX"><figure class="iseeu highlight /nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">upstream</span> hgo &#123;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">server</span> <span class="number">127.0.0.1:5000</span> weight=<span class="number">10</span>;</span><br><span class="line">    <span class="attribute">server</span> <span class="number">127.0.0.1:2021</span> weight=<span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span>       <span class="number">80</span> default_server;</span><br><span class="line">    <span class="attribute">listen</span>       [::]:<span class="number">80</span> default_server;</span><br><span class="line">    <span class="attribute">server_name</span>  _;</span><br><span class="line">    <span class="attribute">root</span>         /usr/share/nginx/html;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Load configuration files for the default server block.</span></span><br><span class="line">    <span class="attribute">include</span> /etc/nginx/default.d/<span class="regexp">*.conf</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">            <span class="attribute">proxy_pass</span> http://hgo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">error_page</span> <span class="number">404</span> /<span class="number">404</span>.html;</span><br><span class="line">    <span class="attribute">location</span> = /<span class="number">404</span>.html &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">error_page</span> <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span> /50x.html;</span><br><span class="line">    <span class="attribute">location</span> = /50x.html &#123;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div></li><li><p><img src="/images/IgotaRaspberryPi/Snipaste_2021-01-06_20-58-26.png" alt></p></li><li><p><code>nginx</code> 启动</p></li><li><code>nginx -s reopen</code>重启</li><li><code>nginx -s reload</code> 热加载</li><li><code>nginx -t</code> 检查配置文件是否合法</li><li><code>nano /etc/nginx/nginx.conf</code> 我的树莓派 nginx 配置文件地址</li><li><code>nano /etc/nginx/sites-available/default</code> 这里也有个配置文件</li><li><p>👉 <a href="https://www.jianshu.com/p/439cd2a7c84e" target="_blank" rel="noopener">linux彻底删除nginx</a></p></li><li><p>Nginx启动报错[emerg] getpwnam(“nginx”) failed</p><ul><li><code>groupadd nginx</code> </li><li><code>useradd -g nginx nginx -s /sbin/nologin</code></li></ul></li></ul><h2 id="谷歌-chromium-版本更换"><a href="#谷歌-chromium-版本更换" class="headerlink" title="谷歌 chromium 版本更换"></a>谷歌 chromium 版本更换</h2><ul><li>为了使 chromedriver 和 chromium 版本一致</li><li><code>sudo apt-get install chromium-browser</code> 更新最新</li><li><code>chromium-browser --version</code></li><li>👉 <a href="https://mirrors.tuna.tsinghua.edu.cn/raspberrypi/pool/main/c/chromium-browser/" target="_blank" rel="noopener">mirrors.tuna.tsinghua.edu.cn</a></li><li><code>sudo apt-get install chromium-chromedriver</code></li><li><p>👉 <a href="https://launchpad.net/+search?field.text=chromium-chromedriver+armhf" target="_blank" rel="noopener">Launchpad.net</a></p></li><li><p>最终要使两者版本一致</p></li></ul><h2 id="Docker-安装界面"><a href="#Docker-安装界面" class="headerlink" title="Docker 安装界面"></a>Docker 安装界面</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo curl -sSL https://get.docker.com | sh</span><br><span class="line">sudo docker pull portainer/portainer</span><br><span class="line">sudo docker volume create portainer_data</span><br><span class="line">sudo docker run -d -p 9000:9000 --name portainer --restart always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer</span><br></pre></td></tr></table></figure></div><ul><li>浏览器输入 ip:9000</li><li>👉 <a href="https://shumeipai.nxez.com/2019/05/20/how-to-install-docker-on-your-raspberry-pi.html" target="_blank" rel="noopener">树莓派上 Docker 的安装和使用</a></li></ul><h2 id="Pi-dashboard-树莓派监控页面"><a href="#Pi-dashboard-树莓派监控页面" class="headerlink" title="Pi dashboard 树莓派监控页面"></a>Pi dashboard 树莓派监控页面</h2><ul><li><code>sudo apt update</code></li><li><code>sudo apt install docker</code></li><li><code>sudo docker run -d --name docker-pi-dashboard -e &#39;LISTEN=1024&#39; --net=host ecat/docker-pi-dashboard</code></li><li>浏览器输入 ip:1024</li><li>👉 <a href="https://blog.nocode.site/2018/03/25/docker-pi-dashboard.html" target="_blank" rel="noopener">一行命令部署pi dashboard</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;通过网络分享连接树莓派&quot;&gt;&lt;a href=&quot;#通过网络分享连接树莓派&quot; class=&quot;headerlink&quot; title=&quot;通过网络分享连接树莓派&quot;&gt;&lt;/a&gt;通过网络分享连接树莓派&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;确保一台能上网的主机&lt;/li&gt;
&lt;li&gt;把已经连接的网络通过想要共享的形式共享出去&lt;/li&gt;
&lt;li&gt;&lt;img src=&quot;/images/IgotaRaspberryPi/Snipaste_2020-12-11_22-49-28.png&quot; alt&gt;&lt;/li&gt;
&lt;li&gt;开启共享前后的本机 ipv4&lt;/li&gt;
&lt;li&gt;&lt;img src=&quot;/images/IgotaRaspberryPi/Snipaste_2020-12-11_23-03-18.png&quot; alt&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
      <category term="Linux" scheme="http://www.orekiyuta.cn/tags/Linux/"/>
    
      <category term="RaspberryPi" scheme="http://www.orekiyuta.cn/tags/RaspberryPi/"/>
    
      <category term="Nginx" scheme="http://www.orekiyuta.cn/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript get/set</title>
    <link href="http://www.orekiyuta.cn/archives/JSgetter-setter/"/>
    <id>http://www.orekiyuta.cn/archives/JSgetter-setter/</id>
    <published>2020-12-05T14:03:45.000Z</published>
    <updated>2020-12-05T18:18:53.260Z</updated>
    
    <content type="html"><![CDATA[<h2 id="用原生-JavaScript-实现数据-单向绑定"><a href="#用原生-JavaScript-实现数据-单向绑定" class="headerlink" title="用原生 JavaScript 实现数据-单向绑定"></a>用原生 JavaScript 实现数据-单向绑定</h2><ul><li>首先得知道,在 JavaScript 中为一个对象赋值会触发对象的 set 属性方法,而获取对象则会触发 get 属性方法</li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span>  <span class="attr">id</span>=<span class="string">"inputurl"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span>  <span class="attr">id</span>=<span class="string">"inputpost"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span>  <span class="attr">id</span>=<span class="string">"inputparam"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span> =<span class="string">"texturi"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></div><ul><li>实现单向绑定只需要设置 get 属性方法即可</li><li>通过监听元素的 keyup 动作,然后执行方法,在方法中获取对象即可触发 get 属性方法</li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JS"><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> url = &#123;</span><br><span class="line">    <span class="keyword">get</span> inputValue() &#123; </span><br><span class="line">        xurl = <span class="built_in">document</span>.getElementById(<span class="string">'inputurl'</span>).value;</span><br><span class="line">        <span class="keyword">return</span> xurl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> post = &#123;</span><br><span class="line">    <span class="keyword">get</span> inputValue() &#123; </span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">document</span>.getElementById(<span class="string">'inputpost'</span>).value;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> param = &#123;</span><br><span class="line">    <span class="keyword">get</span> inputValue() &#123; </span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">document</span>.getElementById(<span class="string">'inputparam'</span>).value;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">'inputurl'</span>).addEventListener(<span class="string">'keyup'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    uri = url.inputValue + post.inputValue + param.inputValue</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">'texturi'</span>).innerHTML = uri</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">'inputpost'</span>).addEventListener(<span class="string">'keyup'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    uri = url.inputValue + post.inputValue + param.inputValue</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">'texturi'</span>).innerHTML = uri</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">'inputparam'</span>).addEventListener(<span class="string">'keyup'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    uri = url.inputValue + post.inputValue + param.inputValue</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">'texturi'</span>).innerHTML = uri</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></div><a id="more"></a><ul><li><img src="/images/JSgetter-setter/1.png" alt></li><li><img src="/images/JSgetter-setter/2.png" alt></li><li><img src="/images/JSgetter-setter/3.png" alt></li></ul><h2 id="实现数据-双向绑定-“-三绑一！？-”"><a href="#实现数据-双向绑定-“-三绑一！？-”" class="headerlink" title="实现数据-双向绑定 / “ 三绑一！？ ”"></a>实现数据-双向绑定 / “ 三绑一！？ ”</h2><ul><li>实现双向绑定就再设置 set 属性方法即可</li></ul><h3 id="DOM-操作"><a href="#DOM-操作" class="headerlink" title="DOM 操作"></a>DOM 操作</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JS"><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> url = &#123;</span><br><span class="line">    <span class="keyword">get</span> inputValue() &#123; </span><br><span class="line">        xurl = <span class="built_in">document</span>.getElementById(<span class="string">'inputurl'</span>).value;</span><br><span class="line">        <span class="keyword">return</span> xurl;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="keyword">set</span> inputValue(newVal)&#123;     </span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">'inputurl'</span>).value = newVal;</span><br><span class="line">        xpost = <span class="built_in">document</span>.getElementById(<span class="string">'inputpost'</span>).value</span><br><span class="line">        xparam = <span class="built_in">document</span>.getElementById(<span class="string">'inputparam'</span>).value</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">'texturi'</span>).innerHTML = newVal + xpost + xparam;        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> post = &#123;</span><br><span class="line">    <span class="keyword">get</span> inputValue() &#123; </span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">document</span>.getElementById(<span class="string">'inputpost'</span>).value;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="keyword">set</span> inputValue(newVal)&#123;     </span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">'inputpost'</span>).value = newVal;</span><br><span class="line">        xurl = <span class="built_in">document</span>.getElementById(<span class="string">'inputurl'</span>).value</span><br><span class="line">        xparam = <span class="built_in">document</span>.getElementById(<span class="string">'inputparam'</span>).value</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">'texturi'</span>).innerHTML = xurl + newVal + xparam;        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> param = &#123;</span><br><span class="line">    <span class="keyword">get</span> inputValue() &#123; </span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">document</span>.getElementById(<span class="string">'inputparam'</span>).value;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="keyword">set</span> inputValue(newVal)&#123;     </span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">'inputparam'</span>).value = newVal;</span><br><span class="line">        xurl = <span class="built_in">document</span>.getElementById(<span class="string">'inputurl'</span>).value</span><br><span class="line">        xpost = <span class="built_in">document</span>.getElementById(<span class="string">'inputpost'</span>).value</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">'texturi'</span>).innerHTML = xurl + xpost + newVal;        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">'inputurl'</span>).addEventListener(<span class="string">'keyup'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    uri = url.inputValue + post.inputValue + param.inputValue</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">'texturi'</span>).innerHTML = uri</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">'inputpost'</span>).addEventListener(<span class="string">'keyup'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    uri = url.inputValue + post.inputValue + param.inputValue</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">'texturi'</span>).innerHTML = uri</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">'inputparam'</span>).addEventListener(<span class="string">'keyup'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    uri = url.inputValue + post.inputValue + param.inputValue</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">'texturi'</span>).innerHTML = uri</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></div><ul><li><p>双向绑定在这里指的是 input 输入框内的值改变, p 标签的值同时也在变,并且 p 标签的值更改, input 输入框内的值也会更改</p></li><li><p>在这里直接在 console 操作 DOM 的话,并不会触发 input 的监听方法,所以数据没有同步</p></li><li><img src="/images/JSgetter-setter/4.png" alt></li><li>我们可以直接调用对象的 set 属性方法,让数据同步 </li><li><p><img src="/images/JSgetter-setter/5.png" alt></p></li><li><p>在这里值得注意的是 url 对象的名称和它 get 方法里的变量名 xurl 最好不要同名</p></li><li><img src="/images/JSgetter-setter/6.png" alt></li><li>因为从 input 输入值后,执行 url 对象的 get 方法,然后里面的变量就被初始化出来了</li><li>如果 get 方法里面的变量名和对象名一样的话,就会定位不到变量 undefined</li></ul><ul><li><p>同名的话就会出现以下问题:</p><ul><li><img src="/images/JSgetter-setter/7.png" alt></li><li>上图是未在 input 输入之前先在 console 获取了 url , 是一个对象 ,正常</li><li><img src="/images/JSgetter-setter/8.png" alt></li><li><p>然后 input 输入内容后, 再次获取 url 就是一个 undefined </p><ul><li>在此我目前猜测可能是:</li><li>(1)触发 set 属性方法后, url 对象实例化之后 变量 url 也初始化成功了,因为同时存在两个 url 名称,一个为 url 对象,一个为 url 变量,所以 DOM 操作无法分辨出应该赋值给哪个 url ,造成异常抛出,结果 url 就为初始值 undefined</li></ul></li><li><p><img src="/images/JSgetter-setter/9.png" alt></p></li><li>紧接着,上图是先在 input 输入内容后 ,再获取的 url <ul><li>结合这两张图的操作,再次猜测:</li><li>这两图的区别在于是否先在 console 里获取了 url 对象 , 可能获取 url 对象的过程是一个实例化的过程</li><li>(1)的猜想就改变了,可能在触发 set 前已经实例化了一个 url 对象,后面触发的时候 url 对象由于已有同名对象,后者 url 对象就被未实例化,因此里面的 url 就没初始化成功</li><li>(2) 上图的 url 获取到了输入内容的首个字符,多次测试后,发现获取字符也是不确定的,这里猜测在这里实例化了 url 对象,之后 url 变量把 url 对象给覆盖了</li><li>这里可能要对浏览器执行过程,加载 DOM 和操作系统有更深的理解才能有结果</li></ul></li></ul></li></ul><h3 id="对象调用"><a href="#对象调用" class="headerlink" title="对象调用"></a>对象调用</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JS"><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;&#125;;</span><br><span class="line"><span class="keyword">var</span> inputurl = <span class="built_in">document</span>.getElementById(<span class="string">"inputurl"</span>);</span><br><span class="line"><span class="keyword">var</span> inputpost = <span class="built_in">document</span>.getElementById(<span class="string">"inputpost"</span>);</span><br><span class="line"><span class="keyword">var</span> inputparam = <span class="built_in">document</span>.getElementById(<span class="string">"inputparam"</span>);</span><br><span class="line"><span class="keyword">var</span> texturi = <span class="built_in">document</span>.getElementById(<span class="string">"texturi"</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.defineProperties(obj, &#123;</span><br><span class="line"></span><br><span class="line">    <span class="string">"inputurl"</span>:&#123;</span><br><span class="line">        <span class="keyword">get</span>:function(newVal)&#123;</span><br><span class="line">            inputurl.value = newVal;</span><br><span class="line">            texturi.innerHTML = newVal;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="keyword">set</span>:function(newVal)&#123;</span><br><span class="line"></span><br><span class="line">            inputurl.value = newVal.url;</span><br><span class="line">            texturi.innerHTML = newVal.uri;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"inputpost"</span>:&#123;</span><br><span class="line">        <span class="keyword">get</span>:function(newVal)&#123;</span><br><span class="line">            inputpost.value = newVal;</span><br><span class="line">            texturi.innerHTML = newVal;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="keyword">set</span>:function(newVal)&#123;</span><br><span class="line"></span><br><span class="line">            inputpost.value = newVal.post;</span><br><span class="line">            texturi.innerHTML = newVal.uri;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"inputparam"</span>:&#123;</span><br><span class="line">        <span class="keyword">get</span>:function(newVal)&#123;</span><br><span class="line">            inputparam.value = newVal;</span><br><span class="line">            texturi.innerHTML = newVal;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="keyword">set</span>:function(newVal)&#123;</span><br><span class="line">            inputparam.value = newVal.param;</span><br><span class="line">            texturi.innerHTML = newVal.uri;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">inputurl.addEventListener(<span class="string">'input'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    inputuri = e.target.value + inputpost.value + inputparam.value;</span><br><span class="line">    obj.inputurl = &#123;<span class="attr">uri</span>:inputuri , <span class="attr">url</span>:e.target.value&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">inputpost.addEventListener(<span class="string">'input'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    inputuri = inputurl.value + e.target.value + inputparam.value;</span><br><span class="line">    obj.inputpost = &#123;<span class="attr">uri</span>:inputuri , <span class="attr">post</span>:e.target.value&#125;</span><br><span class="line">&#125;);</span><br><span class="line">inputparam.addEventListener(<span class="string">'input'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    inputuri = inputurl.value + inputpost.value + e.target.value;</span><br><span class="line">    obj.inputparam = &#123;<span class="attr">uri</span>:inputuri , <span class="attr">param</span>:e.target.value&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><ul><li>在这里的话,问题就在于 set 属性方法只能传递一个值,因此可以通过传对象去传多个值</li><li><img src="/images/JSgetter-setter/10.png" alt></li></ul><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul><li><a href="https://segmentfault.com/a/1190000003882976" target="_blank" rel="noopener">浅谈 JS 对象添加 getter与 setter 的5种方法以及如何让对象属性不可配置或枚举</a></li><li><a href="https://www.imooc.com/qadetail/125923" target="_blank" rel="noopener">set方法只能接受一个参数吗？</a></li><li><a href="https://www.codenong.com/5815757/" target="_blank" rel="noopener">关于javascript：为什么这个函数用括号括起来，后面跟着括号？</a></li><li><a href="https://www.codenong.com/8228281/" target="_blank" rel="noopener">关于iife：javascript中的 (function() { } )() 构造是什么？</a></li><li><a href="https://stackoverflow.com/questions/39718122/javascript-addeventlistener-input-versus-keyup" target="_blank" rel="noopener">JavaScript addEventListener : ‘input’ versus ‘keyup’ [duplicate]</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;用原生-JavaScript-实现数据-单向绑定&quot;&gt;&lt;a href=&quot;#用原生-JavaScript-实现数据-单向绑定&quot; class=&quot;headerlink&quot; title=&quot;用原生 JavaScript 实现数据-单向绑定&quot;&gt;&lt;/a&gt;用原生 JavaScript 实现数据-单向绑定&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;首先得知道,在 JavaScript 中为一个对象赋值会触发对象的 set 属性方法,而获取对象则会触发 get 属性方法&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt;  &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;inputurl&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt;  &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;inputpost&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt;  &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;inputparam&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt; =&lt;span class=&quot;string&quot;&gt;&quot;texturi&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;实现单向绑定只需要设置 get 属性方法即可&lt;/li&gt;
&lt;li&gt;通过监听元素的 keyup 动作,然后执行方法,在方法中获取对象即可触发 get 属性方法&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; url = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt; inputValue() &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        xurl = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;inputurl&#39;&lt;/span&gt;).value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; xurl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; post = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt; inputValue() &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;inputpost&#39;&lt;/span&gt;).value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; param = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt; inputValue() &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;inputparam&#39;&lt;/span&gt;).value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;inputurl&#39;&lt;/span&gt;).addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;keyup&#39;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    uri = url.inputValue + post.inputValue + param.inputValue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;texturi&#39;&lt;/span&gt;).innerHTML = uri&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;inputpost&#39;&lt;/span&gt;).addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;keyup&#39;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    uri = url.inputValue + post.inputValue + param.inputValue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;texturi&#39;&lt;/span&gt;).innerHTML = uri&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;inputparam&#39;&lt;/span&gt;).addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;keyup&#39;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    uri = url.inputValue + post.inputValue + param.inputValue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;texturi&#39;&lt;/span&gt;).innerHTML = uri&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="JavaScript" scheme="http://www.orekiyuta.cn/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>One Line</title>
    <link href="http://www.orekiyuta.cn/archives/OneLine/"/>
    <id>http://www.orekiyuta.cn/archives/OneLine/</id>
    <published>2020-12-02T13:04:30.000Z</published>
    <updated>2020-12-02T16:31:20.118Z</updated>
    
    <content type="html"><![CDATA[<ul><li>We’ve always fooled around together since we were kids.<ul><li>We’ve shared the most exciting moments, but every story has an end.</li><li>No one can stay a kid forever.</li><li>Time moves on, and people grow up.</li><li>We must go our separate ways.</li><li>You keep going even after Im gone.</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;We’ve always fooled around together since we were kids.&lt;ul&gt;
&lt;li&gt;We’ve shared the most exciting moments, but every story has an end.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
