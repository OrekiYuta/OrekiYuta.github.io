<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Canoe</title>
  
  <subtitle>「ろくでなし」</subtitle>
  <link href="/rss.xml" rel="self"/>
  
  <link href="http://www.orekiyuta.cn/"/>
  <updated>2020-12-19T17:49:39.055Z</updated>
  <id>http://www.orekiyuta.cn/</id>
  
  <author>
    <name>Orekiyuta</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Batch Note</title>
    <link href="http://www.orekiyuta.cn/archives/batchNote/"/>
    <id>http://www.orekiyuta.cn/archives/batchNote/</id>
    <published>2020-12-12T17:17:13.000Z</published>
    <updated>2020-12-19T17:49:39.055Z</updated>
    
    <content type="html"><![CDATA[<h3 id="搜索当前目录下的所有文件"><a href="#搜索当前目录下的所有文件" class="headerlink" title="搜索当前目录下的所有文件"></a>搜索当前目录下的所有文件</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="variable">%%i</span> <span class="keyword">in</span> (*.*) <span class="keyword">do</span> <span class="built_in">echo</span> "<span class="variable">%%i</span>"</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure><h3 id="搜索当前目录下被筛选的文件"><a href="#搜索当前目录下被筛选的文件" class="headerlink" title="搜索当前目录下被筛选的文件"></a>搜索当前目录下被筛选的文件</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="variable">%%i</span> <span class="keyword">in</span> (*.<span class="built_in">md</span>) <span class="keyword">do</span> <span class="built_in">echo</span> "<span class="variable">%%i</span>"</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure><p>可用正则表达式<br><a id="more"></a></p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="variable">%%i</span> <span class="keyword">in</span> (?.<span class="built_in">md</span>) <span class="keyword">do</span> <span class="built_in">echo</span> "<span class="variable">%%i</span>"</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure><p>上面表示搜索只有一个字符名，且后缀为 md 的文件</p><h3 id="以管理员身份执行命令"><a href="#以管理员身份执行命令" class="headerlink" title="以管理员身份执行命令"></a>以管理员身份执行命令</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%<span class="number">1</span> mshta vbscript:CreateObject("Shell.Application").ShellExecute("<span class="built_in">cmd</span>.exe","/c %~s0 ::","","runas",<span class="number">1</span>)(window.close)&amp;&amp;<span class="keyword">exit</span></span><br></pre></td></tr></table></figure><p>写在脚本文件顶部即可</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">setlocal</span> EnableDelayedExpansion</span><br><span class="line"><span class="built_in">color</span> <span class="number">3</span>e</span><br><span class="line"></span><br><span class="line"><span class="built_in">PUSHD</span> %~DP0 &amp; <span class="built_in">cd</span> /d "%~dp0"</span><br><span class="line">%<span class="number">1</span> %<span class="number">2</span></span><br><span class="line">mshta vbscript:createobject("shell.application").shellexecute("%~s0","<span class="keyword">goto</span> :runas","","runas",<span class="number">1</span>)(window.close)&amp;<span class="keyword">goto</span> :eof</span><br><span class="line">:runas</span><br><span class="line"> </span><br><span class="line">::填写自己的脚本</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> 执行完毕,任意键退出</span><br><span class="line"></span><br><span class="line"><span class="built_in">pause</span> &gt;<span class="built_in">nul</span></span><br><span class="line"><span class="keyword">exit</span></span><br></pre></td></tr></table></figure><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="built_in">NUL</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span> REG.exe query "HKU\S-<span class="number">1</span>-<span class="number">5</span>-<span class="number">19</span>" || (</span><br><span class="line">    <span class="built_in">ECHO</span> <span class="built_in">SET</span> UAC = CreateObject^("Shell.Application"^) &gt; "<span class="variable">%TEMP%</span>\Getadmin.vbs"</span><br><span class="line">    <span class="built_in">ECHO</span> UAC.ShellExecute "%~f0", "%<span class="number">1</span>", "", "runas", <span class="number">1</span> &gt;&gt; "<span class="variable">%TEMP%</span>\Getadmin.vbs"</span><br><span class="line">    "<span class="variable">%TEMP%</span>\Getadmin.vbs"</span><br><span class="line">    <span class="built_in">DEL</span> /f /q "<span class="variable">%TEMP%</span>\Getadmin.vbs" <span class="number">2</span>&gt;<span class="built_in">NUL</span></span><br><span class="line">    <span class="keyword">Exit</span> /b</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="built_in">nul</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span> "<span class="variable">%SYSTEMROOT%</span>\system32\<span class="built_in">cacls</span>.exe" "<span class="variable">%SYSTEMROOT%</span>\system32\config\system"</span><br><span class="line"><span class="keyword">if</span> '<span class="variable">%errorlevel%</span>' <span class="keyword">NEQ</span> '<span class="number">0</span>' (</span><br><span class="line"><span class="keyword">goto</span> UACPrompt</span><br><span class="line">) <span class="keyword">else</span> ( <span class="keyword">goto</span> gotAdmin )</span><br><span class="line">:UACPrompt</span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">Set</span> UAC = CreateObject^("Shell.Application"^) &gt; "<span class="variable">%temp%</span>\getadmin.vbs"</span><br><span class="line"><span class="built_in">echo</span> UAC.ShellExecute "%~s0", "", "", "runas", <span class="number">1</span> &gt;&gt; "<span class="variable">%temp%</span>\getadmin.vbs"</span><br><span class="line">"<span class="variable">%temp%</span>\getadmin.vbs"</span><br><span class="line"><span class="keyword">exit</span> /B</span><br><span class="line">:gotAdmin</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">exist</span> "<span class="variable">%temp%</span>\getadmin.vbs" ( <span class="built_in">del</span> "<span class="variable">%temp%</span>\getadmin.vbs" )</span><br></pre></td></tr></table></figure><h3 id="在指定目录下打开-git-bash"><a href="#在指定目录下打开-git-bash" class="headerlink" title="在指定目录下打开 git-bash"></a>在指定目录下打开 git-bash</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">start</span> C:\Program" "Files\Git\git-bash.exe --<span class="built_in">cd</span>=f:\Code\</span><br></pre></td></tr></table></figure><p>路径里的空格需要用双引号<br><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">call</span> f: </span><br><span class="line"><span class="keyword">call</span> <span class="built_in">cd</span> Code\</span><br><span class="line"><span class="built_in">start</span> C:\Program" "Files\Git\git-bash.exe</span><br></pre></td></tr></table></figure></p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> /p input="输入要在git-bash中打开的项目路径:"</span><br><span class="line"><span class="built_in">start</span> c:\Program" "Files\Git\git-bash.exe --<span class="built_in">cd</span>=<span class="variable">%input%</span></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure><p>输入的项目路径需要在同一个盘符，因为切换盘符不用 cd</p><h3 id="输出内容到剪贴板"><a href="#输出内容到剪贴板" class="headerlink" title="输出内容到剪贴板"></a>输出内容到剪贴板</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Windows\System&gt; clip /?</span><br><span class="line"></span><br><span class="line">CLIP</span><br><span class="line"></span><br><span class="line">描述:</span><br><span class="line">    将命令行工具的输出重定向到 Windows 剪贴板。这个文本输出可以被粘贴</span><br><span class="line">    到其他程序中。</span><br><span class="line"></span><br><span class="line">参数列表:</span><br><span class="line">    /?                  显示此帮助消息。</span><br><span class="line"></span><br><span class="line">示例:</span><br><span class="line">    <span class="built_in">DIR</span> | CLIP          将一份当前目录列表的副本放入 Windows 剪贴板。</span><br><span class="line"></span><br><span class="line">    CLIP &lt; README.TXT   将 readme.txt 的一份文本放入 Windows 剪贴板。</span><br></pre></td></tr></table></figure><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> elias | clip</span><br></pre></td></tr></table></figure><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> /p="<span class="variable">%date%</span>"&lt;<span class="built_in">nul</span> | clip</span><br></pre></td></tr></table></figure><h3 id="连续执行命令"><a href="#连续执行命令" class="headerlink" title="连续执行命令"></a>连续执行命令</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">call</span> f: </span><br><span class="line"><span class="keyword">call</span> <span class="built_in">cd</span> Code\</span><br><span class="line"><span class="keyword">call</span> hexo clean</span><br><span class="line"><span class="keyword">call</span> hexo g</span><br><span class="line"><span class="keyword">call</span> hexo d</span><br></pre></td></tr></table></figure><p>这里每个命令前面最好保留 call ,没有 call 的话, cmd 会在中途关闭</p><h3 id="配置-java-环境变量"><a href="#配置-java-环境变量" class="headerlink" title="配置 java 环境变量"></a>配置 java 环境变量</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">%<span class="number">1</span> mshta vbscript:CreateObject(“Shell.Application”).ShellExecute(“<span class="built_in">cmd</span>.exe”,"/c %~s0 ::","",“runas”,<span class="number">1</span>)(window.close)&amp;&amp;<span class="keyword">exit</span> </span><br><span class="line"><span class="built_in">echo</span> 正在设置 Java 环境变量</span><br><span class="line">wmic ENVIRONMENT create name="JAVA_HOME",username="&lt;system&gt;",VariableValue="C:\Program Files (x86)\Java\jdk1.<span class="number">7</span>.<span class="number">0</span>_79"</span><br><span class="line">wmic ENVIRONMENT create name="CLASSPATH",username="&lt;system&gt;",VariableValue=".;<span class="variable">%%J</span>AVA_HOME<span class="variable">%%\</span>lib;<span class="variable">%%J</span>AVA_HOME<span class="variable">%%\</span>lib\tools.jar"</span><br><span class="line">wmic ENVIRONMENT where "name='<span class="built_in">PATH</span>' and username='&lt;system&gt;'" <span class="built_in">set</span> VariableValue="<span class="variable">%path%</span>;<span class="variable">%%J</span>AVA_HOME<span class="variable">%%\</span>bin;<span class="variable">%%J</span>AVA_HOME<span class="variable">%%\</span>jre\bin;"</span><br><span class="line"><span class="built_in">echo</span> 设置完成</span><br><span class="line"><span class="keyword">call</span> java -version</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure><h3 id="获取时间"><a href="#获取时间" class="headerlink" title="获取时间"></a>获取时间</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">%date%</span> <span class="variable">%time%</span></span><br></pre></td></tr></table></figure><h3 id="截取字符串"><a href="#截取字符串" class="headerlink" title="截取字符串"></a>截取字符串</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">%date:~0,4%</span></span><br></pre></td></tr></table></figure><p>开始位置 0，截取字符数 4</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> str=<span class="number">123456789</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%str:~3,4%</span></span><br></pre></td></tr></table></figure><h3 id="语音读取"><a href="#语音读取" class="headerlink" title="语音读取"></a>语音读取</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mshta vbscript:CreateObject("SAPI.SpVoice").speak("elias")(Window.close)</span><br></pre></td></tr></table></figure><h3 id="内容重定向"><a href="#内容重定向" class="headerlink" title="内容重定向"></a>内容重定向</h3><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ipconfig</span> &gt; d:ip.txt</span><br></pre></td></tr></table></figure><ul><li>将内容重定向输出到新的位置</li><li><code>&gt;</code>   覆盖式重定向</li><li><code>&gt;&gt;</code>  增量式重定向</li><li><code>&gt;nul</code> 重定向到空设备 nul,所以没有输出内容</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;搜索当前目录下的所有文件&quot;&gt;&lt;a href=&quot;#搜索当前目录下的所有文件&quot; class=&quot;headerlink&quot; title=&quot;搜索当前目录下的所有文件&quot;&gt;&lt;/a&gt;搜索当前目录下的所有文件&lt;/h3&gt;&lt;figure class=&quot;highlight bat&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;%%i&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; (*.*) &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &quot;&lt;span class=&quot;variable&quot;&gt;%%i&lt;/span&gt;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;pause&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;搜索当前目录下被筛选的文件&quot;&gt;&lt;a href=&quot;#搜索当前目录下被筛选的文件&quot; class=&quot;headerlink&quot; title=&quot;搜索当前目录下被筛选的文件&quot;&gt;&lt;/a&gt;搜索当前目录下被筛选的文件&lt;/h3&gt;&lt;figure class=&quot;highlight bat&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;%%i&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; (*.&lt;span class=&quot;built_in&quot;&gt;md&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &quot;&lt;span class=&quot;variable&quot;&gt;%%i&lt;/span&gt;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;pause&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可用正则表达式&lt;br&gt;
    
    </summary>
    
    
    
      <category term="batch" scheme="http://www.orekiyuta.cn/tags/batch/"/>
    
  </entry>
  
  <entry>
    <title>Fish:The Friendly Interactive Shell</title>
    <link href="http://www.orekiyuta.cn/archives/Thefriendlyinteractiveshell/"/>
    <id>http://www.orekiyuta.cn/archives/Thefriendlyinteractiveshell/</id>
    <published>2020-12-11T18:18:43.000Z</published>
    <updated>2020-12-12T15:01:37.416Z</updated>
    
    <content type="html"><![CDATA[<ul><li><code>$ sudo apt-get install fish</code></li><li><code>fish</code> 启动 fish</li><li><p>有下划线提示表明路径存在</p><ul><li><img src="/images/fishShell/Snipaste_2020-12-12_02-51-05.png" alt></li></ul></li><li><p>无效命令显示红色，有效命令为蓝色</p><ul><li><img src="/images/fishShell/Snipaste_2020-12-12_02-52-37.png" alt></li></ul></li><li><p>输入命令后，fish 会有历史记录提示和猜测提示，按下 tab 也有提示</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;code&gt;$ sudo apt-get install fish&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fish&lt;/code&gt; 启动 fish&lt;/li&gt;
&lt;li&gt;&lt;p&gt;有下划线提示表明路径存在&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&quot;/images
      
    
    </summary>
    
    
    
      <category term="Linux" scheme="http://www.orekiyuta.cn/tags/Linux/"/>
    
      <category term="Shell" scheme="http://www.orekiyuta.cn/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>I got a Raspberry Pi</title>
    <link href="http://www.orekiyuta.cn/archives/IgotaRaspberryPi/"/>
    <id>http://www.orekiyuta.cn/archives/IgotaRaspberryPi/</id>
    <published>2020-12-11T14:34:39.000Z</published>
    <updated>2020-12-25T13:54:15.386Z</updated>
    
    <content type="html"><![CDATA[<h2 id="通过网络分享连接树莓派"><a href="#通过网络分享连接树莓派" class="headerlink" title="通过网络分享连接树莓派"></a>通过网络分享连接树莓派</h2><ul><li>确保一台能上网的主机</li><li>把已经连接的网络通过想要共享的形式共享出去</li><li><img src="/images/IgotaRaspberryPi/Snipaste_2020-12-11_22-49-28.png" alt></li><li>开启共享前后的本机 ipv4</li><li><img src="/images/IgotaRaspberryPi/Snipaste_2020-12-11_23-03-18.png" alt></li></ul><a id="more"></a><ul><li>开启共享前后的局域网内 ip 变化<ul><li>我这里之前是连接过了,有缓存记录了，未连接过的情况下，新分配的 ip 就是新连接的设备所属 ip</li></ul></li><li><img src="/images/IgotaRaspberryPi/Snipaste_2020-12-11_23-06-54.png" alt></li><li>然后通过 SSH 连接树莓派即可<ul><li>树莓派默认用户名 pi , 密码 raspberry</li></ul></li><li><img src="/images/IgotaRaspberryPi/Snipaste_2020-12-11_23-10-14.png" alt></li></ul><h2 id="查看树莓派基本信息"><a href="#查看树莓派基本信息" class="headerlink" title="查看树莓派基本信息"></a>查看树莓派基本信息</h2><ul><li><code>pinout</code> 查看针脚等基本硬件信息</li><li><img src="/images/IgotaRaspberryPi/Snipaste_2020-12-12_03-05-18.png" alt></li><li><code>vcgencmd measure_temp</code> 查看 cpu 温度</li><li><code>cat /proc/cpuinfo</code> 查看 cpu 信息</li><li><code>lscpu</code></li><li><img src="/images/IgotaRaspberryPi/Snipaste_2020-12-12_02-29-37.png" alt></li><li><code>free -h</code> 查看内存</li><li><code>lsblk</code> 查看磁盘</li><li><code>df -hT</code></li><li><code>date</code> 查看时间</li><li><code>cat /proc/device-tree/model</code> 查看树莓派型号</li><li><code>getconf LONG_BIT</code> 查看树莓派系统位数</li><li><code>file /bin/ls</code></li><li><img src="/images/IgotaRaspberryPi/Snipaste_2020-12-12_02-39-09.png" alt></li><li><code>lsusb</code> 查看 usb</li><li><code>lsmod</code> 查看其他硬件</li><li><img src="/images/IgotaRaspberryPi/Snipaste_2020-12-12_02-41-36.png" alt></li><li><code>vcgencmd get_config arm_freq</code> 查看 CPU 的时钟频率</li><li><code>cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq</code></li><li><img src="/images/IgotaRaspberryPi/Snipaste_2020-12-12_02-42-21.png" alt></li><li><p><code>dmesg | more</code> 查看更多硬件信息</p></li><li><p><code>ifconfig</code> 查看 ip </p></li><li><p><img src="/images/IgotaRaspberryPi/Snipaste_2020-12-12_02-45-49.png" alt></p></li><li><p><code>sudo ifconfig wlan0 down</code> 关闭 wlan</p></li><li><code>sudo ifconfig wlan0 up</code></li><li><img src="/images/IgotaRaspberryPi/Snipaste_2020-12-12_02-49-22.png" alt></li></ul><h2 id="Windows-远程桌面连接"><a href="#Windows-远程桌面连接" class="headerlink" title="Windows 远程桌面连接"></a>Windows 远程桌面连接</h2><ul><li><code>sudo apt-get purge tightvnc xrdp</code> 先删除之前系统自带的 xrdp 和 tightvnc</li><li><code>sudo apt-get install tightvncserver xrdp</code> 重新安装</li><li><p><code>sudo apt update &amp;&amp; sudo apt upgrade</code> 如果有错误可以执行这个</p></li><li><p>然后 Win+r , 输入 mstsc </p></li><li>接着在远程桌面连接窗口输入 树莓派 ip , 账户密码</li></ul><h2 id="开启-SSH"><a href="#开启-SSH" class="headerlink" title="开启 SSH"></a>开启 SSH</h2><h3 id="已连接树莓派"><a href="#已连接树莓派" class="headerlink" title="已连接树莓派"></a>已连接树莓派</h3><ul><li><code>sudo raspi-config</code></li><li>interfacing Options</li></ul><h3 id="未连接树莓派"><a href="#未连接树莓派" class="headerlink" title="未连接树莓派"></a>未连接树莓派</h3><ul><li>在内存卡根目录新建 SSH 文件,无后缀</li></ul><!-- ## 设置静态 IP-`sudo nano /etc.dhcpcd.conf`- ![](/images/IgotaRaspberryPi/Snipaste_2020-12-14_21-53-29.png)- 修改完毕，ctrl+x ， y 保存 - `sudo reboot` 重启树莓派，再次 ifconfig 查看 ip --><h2 id="设置-mariadb-远程连接"><a href="#设置-mariadb-远程连接" class="headerlink" title="设置 mariadb 远程连接"></a>设置 mariadb 远程连接</h2><p>👉 <a href="https://www.jianshu.com/p/f440099f056d" target="_blank" rel="noopener">树莓派4 官方系统 安装mysql</a><br>👉 <a href="https://blog.csdn.net/Co_zy/article/details/73923962" target="_blank" rel="noopener">解决MariaDB无法远程连接</a></p><h2 id="开启远程-FTP"><a href="#开启远程-FTP" class="headerlink" title="开启远程 FTP"></a>开启远程 FTP</h2><p>👉 <a href="https://blog.csdn.net/madrabbit1987/article/details/53750272" target="_blank" rel="noopener">FTP连接树莓派（Linux）进行文件传输</a></p><h2 id="树莓派磁盘没有占满整个-SD-卡"><a href="#树莓派磁盘没有占满整个-SD-卡" class="headerlink" title="树莓派磁盘没有占满整个 SD 卡"></a>树莓派磁盘没有占满整个 SD 卡</h2><ul><li><code>df -h</code></li><li><img src="/images/IgotaRaspberryPi/Snipaste_2020-12-24_14-44-40.png" alt></li><li><code>sudo fdisk -l</code></li><li><img src="/images/IgotaRaspberryPi/Snipaste_2020-12-24_14-45-17.png" alt></li><li>看到了 SD 卡的磁盘空间</li><li><code>sudo fdisk /dev/mmcblk0</code></li><li><img src="/images/IgotaRaspberryPi/Snipaste_2020-12-24_14-56-29.png" alt></li><li><code>sudo reboot</code></li><li><code>sudo resize2fs /dev/mmcblk0p2</code> 更新硬盘大小</li><li><code>df -h</code></li><li>上面操作不行的话就切换到管理员用户 <code>sudo su</code>,再试一次</li><li><img src="/images/IgotaRaspberryPi/Snipaste_2020-12-24_15-36-11.png" alt></li></ul><p>👉 <a href="https://blog.csdn.net/ourkix/article/details/109445090" target="_blank" rel="noopener">解决树莓派磁盘没有占满整个sd卡的方法</a><br>👉 <a href="https://blog.csdn.net/ls0111/article/details/85607792?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.control" target="_blank" rel="noopener">充分使用树莓派SD卡容量</a></p><h2 id="修正时间"><a href="#修正时间" class="headerlink" title="修正时间"></a>修正时间</h2><ul><li><code>date</code></li><li><code>sudo dpkg-reconfigure tzdata</code> 选择时区</li><li><code>sudo date  --s=&quot;2019-11-27 14:54:00&quot;</code> 强制手动修正</li></ul><h2 id="离线安装-Redis"><a href="#离线安装-Redis" class="headerlink" title="离线安装 Redis"></a>离线安装 Redis</h2><ul><li>下载 arm 架构的安装包</li><li>ftp 到树莓派里</li><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar xzf 4.0-rc2.tar.gz</span><br><span class="line">cd redis-4.0-rc2</span><br><span class="line">make</span><br><span class="line">make install </span><br><span class="line">redis-server</span><br></pre></td></tr></table></figure></li></ul><p>👉 <a href="https://www.lxx1.com/2532" target="_blank" rel="noopener">Redis编译安装及卸载方法</a></p><h2 id="设置-Redis-远程连接"><a href="#设置-Redis-远程连接" class="headerlink" title="设置 Redis 远程连接"></a>设置 Redis 远程连接</h2><ul><li>我这里是修改了 Redis 压缩包解压后的文件里面的 redis.conf</li><li>进入解压后的 Redis 文件目录下 读取该目录下的配置启动 Redis</li><li><code>redis-server redis.conf</code> redis 启动后,到本地测试连接</li><li><img src="/images/IgotaRaspberryPi/Snipaste_2020-12-25_15-06-33.png" alt></li><li>再用可视化客户端测试一下</li><li><img src="/images/IgotaRaspberryPi/Snipaste_2020-12-25_15-28-39.png" alt><br>👉 <a href="https://www.cnblogs.com/liuxiutianxia/p/11057120.html" target="_blank" rel="noopener">redis设置远程连接</a></li></ul><h2 id="Linux-切换用户"><a href="#Linux-切换用户" class="headerlink" title="Linux 切换用户"></a>Linux 切换用户</h2><ul><li><code>sudo su</code> 切换成 root</li><li><code>su [username]</code> 切换成其他用户,如:<code>sudo pi</code></li></ul><h2 id="不同网段问题"><a href="#不同网段问题" class="headerlink" title="不同网段问题"></a>不同网段问题</h2><ul><li>当前内网的网段为 172 </li><li>而新接入的交换机和树莓派的网段为 192 </li><li>需要在网络连接的以太网 ipv4 里设置 192 网段 , 如 192.168.137.1 来访问树莓派</li><li>切换回内网需要切换为 172 网段 或者 设置自动获取ip</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;通过网络分享连接树莓派&quot;&gt;&lt;a href=&quot;#通过网络分享连接树莓派&quot; class=&quot;headerlink&quot; title=&quot;通过网络分享连接树莓派&quot;&gt;&lt;/a&gt;通过网络分享连接树莓派&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;确保一台能上网的主机&lt;/li&gt;
&lt;li&gt;把已经连接的网络通过想要共享的形式共享出去&lt;/li&gt;
&lt;li&gt;&lt;img src=&quot;/images/IgotaRaspberryPi/Snipaste_2020-12-11_22-49-28.png&quot; alt&gt;&lt;/li&gt;
&lt;li&gt;开启共享前后的本机 ipv4&lt;/li&gt;
&lt;li&gt;&lt;img src=&quot;/images/IgotaRaspberryPi/Snipaste_2020-12-11_23-03-18.png&quot; alt&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
      <category term="Linux" scheme="http://www.orekiyuta.cn/tags/Linux/"/>
    
      <category term="RaspberryPi" scheme="http://www.orekiyuta.cn/tags/RaspberryPi/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript get/set</title>
    <link href="http://www.orekiyuta.cn/archives/JSgetter-setter/"/>
    <id>http://www.orekiyuta.cn/archives/JSgetter-setter/</id>
    <published>2020-12-05T14:03:45.000Z</published>
    <updated>2020-12-05T18:18:53.260Z</updated>
    
    <content type="html"><![CDATA[<h2 id="用原生-JavaScript-实现数据-单向绑定"><a href="#用原生-JavaScript-实现数据-单向绑定" class="headerlink" title="用原生 JavaScript 实现数据-单向绑定"></a>用原生 JavaScript 实现数据-单向绑定</h2><ul><li>首先得知道,在 JavaScript 中为一个对象赋值会触发对象的 set 属性方法,而获取对象则会触发 get 属性方法</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span>  <span class="attr">id</span>=<span class="string">"inputurl"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span>  <span class="attr">id</span>=<span class="string">"inputpost"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span>  <span class="attr">id</span>=<span class="string">"inputparam"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span> =<span class="string">"texturi"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>实现单向绑定只需要设置 get 属性方法即可</li><li>通过监听元素的 keyup 动作,然后执行方法,在方法中获取对象即可触发 get 属性方法</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> url = &#123;</span><br><span class="line">    <span class="keyword">get</span> inputValue() &#123; </span><br><span class="line">        xurl = <span class="built_in">document</span>.getElementById(<span class="string">'inputurl'</span>).value;</span><br><span class="line">        <span class="keyword">return</span> xurl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> post = &#123;</span><br><span class="line">    <span class="keyword">get</span> inputValue() &#123; </span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">document</span>.getElementById(<span class="string">'inputpost'</span>).value;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> param = &#123;</span><br><span class="line">    <span class="keyword">get</span> inputValue() &#123; </span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">document</span>.getElementById(<span class="string">'inputparam'</span>).value;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">'inputurl'</span>).addEventListener(<span class="string">'keyup'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    uri = url.inputValue + post.inputValue + param.inputValue</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">'texturi'</span>).innerHTML = uri</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">'inputpost'</span>).addEventListener(<span class="string">'keyup'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    uri = url.inputValue + post.inputValue + param.inputValue</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">'texturi'</span>).innerHTML = uri</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">'inputparam'</span>).addEventListener(<span class="string">'keyup'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    uri = url.inputValue + post.inputValue + param.inputValue</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">'texturi'</span>).innerHTML = uri</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><a id="more"></a><ul><li><img src="/images/JSgetter-setter/1.png" alt></li><li><img src="/images/JSgetter-setter/2.png" alt></li><li><img src="/images/JSgetter-setter/3.png" alt></li></ul><h2 id="实现数据-双向绑定-“-三绑一！？-”"><a href="#实现数据-双向绑定-“-三绑一！？-”" class="headerlink" title="实现数据-双向绑定 / “ 三绑一！？ ”"></a>实现数据-双向绑定 / “ 三绑一！？ ”</h2><ul><li>实现双向绑定就再设置 set 属性方法即可</li></ul><h3 id="DOM-操作"><a href="#DOM-操作" class="headerlink" title="DOM 操作"></a>DOM 操作</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> url = &#123;</span><br><span class="line">    <span class="keyword">get</span> inputValue() &#123; </span><br><span class="line">        xurl = <span class="built_in">document</span>.getElementById(<span class="string">'inputurl'</span>).value;</span><br><span class="line">        <span class="keyword">return</span> xurl;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="keyword">set</span> inputValue(newVal)&#123;     </span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">'inputurl'</span>).value = newVal;</span><br><span class="line">        xpost = <span class="built_in">document</span>.getElementById(<span class="string">'inputpost'</span>).value</span><br><span class="line">        xparam = <span class="built_in">document</span>.getElementById(<span class="string">'inputparam'</span>).value</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">'texturi'</span>).innerHTML = newVal + xpost + xparam;        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> post = &#123;</span><br><span class="line">    <span class="keyword">get</span> inputValue() &#123; </span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">document</span>.getElementById(<span class="string">'inputpost'</span>).value;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="keyword">set</span> inputValue(newVal)&#123;     </span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">'inputpost'</span>).value = newVal;</span><br><span class="line">        xurl = <span class="built_in">document</span>.getElementById(<span class="string">'inputurl'</span>).value</span><br><span class="line">        xparam = <span class="built_in">document</span>.getElementById(<span class="string">'inputparam'</span>).value</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">'texturi'</span>).innerHTML = xurl + newVal + xparam;        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> param = &#123;</span><br><span class="line">    <span class="keyword">get</span> inputValue() &#123; </span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">document</span>.getElementById(<span class="string">'inputparam'</span>).value;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="keyword">set</span> inputValue(newVal)&#123;     </span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">'inputparam'</span>).value = newVal;</span><br><span class="line">        xurl = <span class="built_in">document</span>.getElementById(<span class="string">'inputurl'</span>).value</span><br><span class="line">        xpost = <span class="built_in">document</span>.getElementById(<span class="string">'inputpost'</span>).value</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">'texturi'</span>).innerHTML = xurl + xpost + newVal;        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">'inputurl'</span>).addEventListener(<span class="string">'keyup'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    uri = url.inputValue + post.inputValue + param.inputValue</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">'texturi'</span>).innerHTML = uri</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">'inputpost'</span>).addEventListener(<span class="string">'keyup'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    uri = url.inputValue + post.inputValue + param.inputValue</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">'texturi'</span>).innerHTML = uri</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">'inputparam'</span>).addEventListener(<span class="string">'keyup'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    uri = url.inputValue + post.inputValue + param.inputValue</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">'texturi'</span>).innerHTML = uri</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li><p>双向绑定在这里指的是 input 输入框内的值改变, p 标签的值同时也在变,并且 p 标签的值更改, input 输入框内的值也会更改</p></li><li><p>在这里直接在 console 操作 DOM 的话,并不会触发 input 的监听方法,所以数据没有同步</p></li><li><img src="/images/JSgetter-setter/4.png" alt></li><li>我们可以直接调用对象的 set 属性方法,让数据同步 </li><li><p><img src="/images/JSgetter-setter/5.png" alt></p></li><li><p>在这里值得注意的是 url 对象的名称和它 get 方法里的变量名 xurl 最好不要同名</p></li><li><img src="/images/JSgetter-setter/6.png" alt></li><li>因为从 input 输入值后,执行 url 对象的 get 方法,然后里面的变量就被初始化出来了</li><li>如果 get 方法里面的变量名和对象名一样的话,就会定位不到变量 undefined</li></ul><ul><li><p>同名的话就会出现以下问题:</p><ul><li><img src="/images/JSgetter-setter/7.png" alt></li><li>上图是未在 input 输入之前先在 console 获取了 url , 是一个对象 ,正常</li><li><img src="/images/JSgetter-setter/8.png" alt></li><li><p>然后 input 输入内容后, 再次获取 url 就是一个 undefined </p><ul><li>在此我目前猜测可能是:</li><li>(1)触发 set 属性方法后, url 对象实例化之后 变量 url 也初始化成功了,因为同时存在两个 url 名称,一个为 url 对象,一个为 url 变量,所以 DOM 操作无法分辨出应该赋值给哪个 url ,造成异常抛出,结果 url 就为初始值 undefined</li></ul></li><li><p><img src="/images/JSgetter-setter/9.png" alt></p></li><li>紧接着,上图是先在 input 输入内容后 ,再获取的 url <ul><li>结合这两张图的操作,再次猜测:</li><li>这两图的区别在于是否先在 console 里获取了 url 对象 , 可能获取 url 对象的过程是一个实例化的过程</li><li>(1)的猜想就改变了,可能在触发 set 前已经实例化了一个 url 对象,后面触发的时候 url 对象由于已有同名对象,后者 url 对象就被未实例化,因此里面的 url 就没初始化成功</li><li>(2) 上图的 url 获取到了输入内容的首个字符,多次测试后,发现获取字符也是不确定的,这里猜测在这里实例化了 url 对象,之后 url 变量把 url 对象给覆盖了</li><li>这里可能要对浏览器执行过程,加载 DOM 和操作系统有更深的理解才能有结果</li></ul></li></ul></li></ul><h3 id="对象调用"><a href="#对象调用" class="headerlink" title="对象调用"></a>对象调用</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;&#125;;</span><br><span class="line"><span class="keyword">var</span> inputurl = <span class="built_in">document</span>.getElementById(<span class="string">"inputurl"</span>);</span><br><span class="line"><span class="keyword">var</span> inputpost = <span class="built_in">document</span>.getElementById(<span class="string">"inputpost"</span>);</span><br><span class="line"><span class="keyword">var</span> inputparam = <span class="built_in">document</span>.getElementById(<span class="string">"inputparam"</span>);</span><br><span class="line"><span class="keyword">var</span> texturi = <span class="built_in">document</span>.getElementById(<span class="string">"texturi"</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.defineProperties(obj, &#123;</span><br><span class="line"></span><br><span class="line">    <span class="string">"inputurl"</span>:&#123;</span><br><span class="line">        <span class="keyword">get</span>:function(newVal)&#123;</span><br><span class="line">            inputurl.value = newVal;</span><br><span class="line">            texturi.innerHTML = newVal;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="keyword">set</span>:function(newVal)&#123;</span><br><span class="line"></span><br><span class="line">            inputurl.value = newVal.url;</span><br><span class="line">            texturi.innerHTML = newVal.uri;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"inputpost"</span>:&#123;</span><br><span class="line">        <span class="keyword">get</span>:function(newVal)&#123;</span><br><span class="line">            inputpost.value = newVal;</span><br><span class="line">            texturi.innerHTML = newVal;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="keyword">set</span>:function(newVal)&#123;</span><br><span class="line"></span><br><span class="line">            inputpost.value = newVal.post;</span><br><span class="line">            texturi.innerHTML = newVal.uri;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"inputparam"</span>:&#123;</span><br><span class="line">        <span class="keyword">get</span>:function(newVal)&#123;</span><br><span class="line">            inputparam.value = newVal;</span><br><span class="line">            texturi.innerHTML = newVal;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="keyword">set</span>:function(newVal)&#123;</span><br><span class="line">            inputparam.value = newVal.param;</span><br><span class="line">            texturi.innerHTML = newVal.uri;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">inputurl.addEventListener(<span class="string">'input'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    inputuri = e.target.value + inputpost.value + inputparam.value;</span><br><span class="line">    obj.inputurl = &#123;<span class="attr">uri</span>:inputuri , <span class="attr">url</span>:e.target.value&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">inputpost.addEventListener(<span class="string">'input'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    inputuri = inputurl.value + e.target.value + inputparam.value;</span><br><span class="line">    obj.inputpost = &#123;<span class="attr">uri</span>:inputuri , <span class="attr">post</span>:e.target.value&#125;</span><br><span class="line">&#125;);</span><br><span class="line">inputparam.addEventListener(<span class="string">'input'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    inputuri = inputurl.value + inputpost.value + e.target.value;</span><br><span class="line">    obj.inputparam = &#123;<span class="attr">uri</span>:inputuri , <span class="attr">param</span>:e.target.value&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>在这里的话,问题就在于 set 属性方法只能传递一个值,因此可以通过传对象去传多个值</li><li><img src="/images/JSgetter-setter/10.png" alt></li></ul><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul><li><a href="https://segmentfault.com/a/1190000003882976" target="_blank" rel="noopener">浅谈 JS 对象添加 getter与 setter 的5种方法以及如何让对象属性不可配置或枚举</a></li><li><a href="https://www.imooc.com/qadetail/125923" target="_blank" rel="noopener">set方法只能接受一个参数吗？</a></li><li><a href="https://www.codenong.com/5815757/" target="_blank" rel="noopener">关于javascript：为什么这个函数用括号括起来，后面跟着括号？</a></li><li><a href="https://www.codenong.com/8228281/" target="_blank" rel="noopener">关于iife：javascript中的 (function() { } )() 构造是什么？</a></li><li><a href="https://stackoverflow.com/questions/39718122/javascript-addeventlistener-input-versus-keyup" target="_blank" rel="noopener">JavaScript addEventListener : ‘input’ versus ‘keyup’ [duplicate]</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;用原生-JavaScript-实现数据-单向绑定&quot;&gt;&lt;a href=&quot;#用原生-JavaScript-实现数据-单向绑定&quot; class=&quot;headerlink&quot; title=&quot;用原生 JavaScript 实现数据-单向绑定&quot;&gt;&lt;/a&gt;用原生 JavaScript 实现数据-单向绑定&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;首先得知道,在 JavaScript 中为一个对象赋值会触发对象的 set 属性方法,而获取对象则会触发 get 属性方法&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt;  &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;inputurl&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt;  &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;inputpost&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt;  &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;inputparam&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt; =&lt;span class=&quot;string&quot;&gt;&quot;texturi&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;实现单向绑定只需要设置 get 属性方法即可&lt;/li&gt;
&lt;li&gt;通过监听元素的 keyup 动作,然后执行方法,在方法中获取对象即可触发 get 属性方法&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; url = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt; inputValue() &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        xurl = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;inputurl&#39;&lt;/span&gt;).value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; xurl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; post = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt; inputValue() &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;inputpost&#39;&lt;/span&gt;).value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; param = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt; inputValue() &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;inputparam&#39;&lt;/span&gt;).value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;inputurl&#39;&lt;/span&gt;).addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;keyup&#39;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    uri = url.inputValue + post.inputValue + param.inputValue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;texturi&#39;&lt;/span&gt;).innerHTML = uri&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;inputpost&#39;&lt;/span&gt;).addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;keyup&#39;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    uri = url.inputValue + post.inputValue + param.inputValue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;texturi&#39;&lt;/span&gt;).innerHTML = uri&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;inputparam&#39;&lt;/span&gt;).addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;keyup&#39;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    uri = url.inputValue + post.inputValue + param.inputValue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;texturi&#39;&lt;/span&gt;).innerHTML = uri&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="JavaScript" scheme="http://www.orekiyuta.cn/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>One Line</title>
    <link href="http://www.orekiyuta.cn/archives/OneLine/"/>
    <id>http://www.orekiyuta.cn/archives/OneLine/</id>
    <published>2020-12-02T13:04:30.000Z</published>
    <updated>2020-12-02T16:31:20.118Z</updated>
    
    <content type="html"><![CDATA[<ul><li>We’ve always fooled around together since we were kids.<ul><li>We’ve shared the most exciting moments, but every story has an end.</li><li>No one can stay a kid forever.</li><li>Time moves on, and people grow up.</li><li>We must go our separate ways.</li><li>You keep going even after Im gone.</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;We’ve always fooled around together since we were kids.&lt;ul&gt;
&lt;li&gt;We’ve shared the most exciting moments, but every story has an end.
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Java:Thread.Start() / run()</title>
    <link href="http://www.orekiyuta.cn/archives/javastartrun/"/>
    <id>http://www.orekiyuta.cn/archives/javastartrun/</id>
    <published>2020-11-30T15:19:22.000Z</published>
    <updated>2020-11-30T16:43:00.787Z</updated>
    
    <content type="html"><![CDATA[<h2 id="线程的启动顺序"><a href="#线程的启动顺序" class="headerlink" title="线程的启动顺序"></a>线程的启动顺序</h2><ul><li><img src="/images/JavaStartRun/1.png" alt></li><li>testThread 线程实例创建之后,调用 start(),表明这个线程处于就绪状态,等待得到 CPU 的时间片之后才会执行</li><li>因为 main 方法也是一个线程,所以 testThread 会等待 main() 执行完毕</li><li>main() 执行完毕后，testThread 线程得到 CPU 的时间片,开始执行<a id="more"></a></li><li><img src="/images/JavaStartRun/2.png" alt></li><li>当 testThread 启动时，它的状态 threadStatus 被设置为 0 ,然后加入线程组 group</li><li><img src="/images/JavaStartRun/3.png" alt></li><li>最后调用 start0()，而 start0() 是私有的 native 方法（Native Method 是一个 java 调用非 java 代码的接口）</li><li>调用完毕后，testThread 线程就处于就绪状态,获得 CPU 时间之后就会调用 thread 的 run()</li><li><img src="/images/JavaStartRun/5.png" alt></li><li><img src="/images/JavaStartRun/4.png" alt></li><li><img src="/images/JavaStartRun/6.png" alt></li></ul><h3 id="run"><a href="#run" class="headerlink" title="run()"></a>run()</h3><ul><li><img src="/images/JavaStartRun/7.png" alt></li><li>thread.run() 会等待 thread 里面的 run() 执行完毕后才会执行;直接调用 run() 这样的用法就和调用普通方法一样,其实并没有创建新的线程</li><li><img src="/images/JavaStartRun/8.png" alt></li><li>thread.start() 就会创建新的线程,然后处于就绪状态;让主线程先执行完毕,再轮到自己</li></ul><h3 id="run-的好处"><a href="#run-的好处" class="headerlink" title="run() 的好处"></a>run() 的好处</h3><ul><li>实现了 Runnable 接口的方法 run() ,之后就可以让多个线程调用 run() 共享同一个资源</li><li>实现 Runnable 接口相对于继承 Thread 类来说,可以避免 Java 单继承的局限性</li><li>start()被多次调用也还是一个线程</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;线程的启动顺序&quot;&gt;&lt;a href=&quot;#线程的启动顺序&quot; class=&quot;headerlink&quot; title=&quot;线程的启动顺序&quot;&gt;&lt;/a&gt;线程的启动顺序&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;img src=&quot;/images/JavaStartRun/1.png&quot; alt&gt;&lt;/li&gt;
&lt;li&gt;testThread 线程实例创建之后,调用 start(),表明这个线程处于就绪状态,等待得到 CPU 的时间片之后才会执行&lt;/li&gt;
&lt;li&gt;因为 main 方法也是一个线程,所以 testThread 会等待 main() 执行完毕&lt;/li&gt;
&lt;li&gt;main() 执行完毕后，testThread 线程得到 CPU 的时间片,开始执行
    
    </summary>
    
    
    
      <category term="Java" scheme="http://www.orekiyuta.cn/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>CSS margin:auto;How it Works</title>
    <link href="http://www.orekiyuta.cn/archives/css-margin-auto/"/>
    <id>http://www.orekiyuta.cn/archives/css-margin-auto/</id>
    <published>2020-11-30T02:53:25.000Z</published>
    <updated>2020-11-30T13:33:29.157Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Auto"><a href="#Auto" class="headerlink" title="Auto"></a>Auto</h2><ul><li>margin:auto 通常用作元素水平居中</li><li>首先得知道，在定义中 auto 可以随着元素、元素类型和上下文而变化<ul><li>在 margins 中，auto 可以占用可用空间或者占用 0 px</li></ul></li></ul><h2 id="margin-水平空间"><a href="#margin-水平空间" class="headerlink" title="margin 水平空间"></a>margin 水平空间</h2><ul><li>对于 margins , auto 作为 left 和 right 的值的时候，它们会在水平上均分可用空间，因此它们使得元素在中心</li><li><p>但是它们也仅仅适用于水平 margins , 并不能和带有 float、inline 的元素共用；也不适用在 absolute 和 fixed position 的元素中</p></li><li><p>当只给 margin 其中一边设置为 auto 时，该元素会向另一边倾向</p><ul><li>当 margin-left:auto 时，元素的左边会空出一定的空间，而右边空间被元素占完<a id="more"></a></li></ul></li><li><p>正如前面所说， auto 无法使用在 floated ,inline 和 absolute的元素中，因为它们的布局已经被决定了，所以无法用 margin:auto 使元素居中</p><ul><li>如果设置 margin:auto 的话，结果就为 margin:0px</li></ul></li><li><p>auto 对于没有宽度的 block 元素也不起作用</p></li></ul><h2 id="margin-垂直空间"><a href="#margin-垂直空间" class="headerlink" title="margin 垂直空间"></a>margin 垂直空间</h2><ul><li>auto 在 margin 的 top 和 bottom 上始终计算为 0px (除了 absolute 元素)</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">W3C spec says it like this:</span><br><span class="line"></span><br><span class="line">“If “margin-top” or “margin-bottom” is “auto”, their used value is 0″</span><br></pre></td></tr></table></figure><ul><li><p>👉<a href="https://www.w3.org/TR/CSS21/visudet.html#Computing_heights_and_margins" target="_blank" rel="noopener">10 Visual formatting model details</a></p></li><li><p>也可能是垂直页面流的原因，使得元素在页面垂直方向上不居中，因为页面大小会随着高度方向增加</p></li><li>但是 absolute 元素可以使得该元素沿着整个页面的高度垂直居中</li></ul><h2 id="绝对元素居中定位"><a href="#绝对元素居中定位" class="headerlink" title="绝对元素居中定位"></a>绝对元素居中定位</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">This is where another W3C spec comes in:</span><br><span class="line"></span><br><span class="line">&quot;If all three of “left”, “width”, and “right” are “auto”: First set any “auto” values for “margin-left” and “margin-right” to 0… &quot;</span><br><span class="line"></span><br><span class="line">&quot;If none of the three is “auto”: If both “margin-left” and “margin-right” are “auto”, solve the equation under the extra constraint that the two margins get equal values&quot;</span><br></pre></td></tr></table></figure><ul><li>说明水平 auto margins 要占用一样的空间，它们的left,width和right都不应该是 auto</li><li>因此我们要在一个绝对定位的元素中给它们一些值，使得水平居中</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">The spec also mentions something similar for vertical margins.</span><br><span class="line"></span><br><span class="line">“If all three of “top”, “height”, and “bottom” are auto, set “top” to the static position…”</span><br><span class="line"></span><br><span class="line">“If none of the three are “auto”: If both “margin-top” and “margin-bottom” are “auto”, solve the equation under the extra constraint that the two margins get equal values…”</span><br></pre></td></tr></table></figure><ul><li>要使得绝对元素垂直居中，它的 top,height,bottom的值都不能为 auto</li></ul><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><ul><li>如果想要某个元素向左或者向右靠，可以设置另一边的 margin:auto</li><li><p>可以将某个元素转为绝对定位使其垂直居中，但是这不是个好方法</p><ul><li>用 flexbox 和 CSS transform 可能更适合</li></ul></li><li><p>👉<a href="https://www.hongkiat.com/blog/css-margin-auto/" target="_blank" rel="noopener">https://www.hongkiat.com/blog/css-margin-auto/</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Auto&quot;&gt;&lt;a href=&quot;#Auto&quot; class=&quot;headerlink&quot; title=&quot;Auto&quot;&gt;&lt;/a&gt;Auto&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;margin:auto 通常用作元素水平居中&lt;/li&gt;
&lt;li&gt;首先得知道，在定义中 auto 可以随着元素、元素类型和上下文而变化&lt;ul&gt;
&lt;li&gt;在 margins 中，auto 可以占用可用空间或者占用 0 px&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;margin-水平空间&quot;&gt;&lt;a href=&quot;#margin-水平空间&quot; class=&quot;headerlink&quot; title=&quot;margin 水平空间&quot;&gt;&lt;/a&gt;margin 水平空间&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;对于 margins , auto 作为 left 和 right 的值的时候，它们会在水平上均分可用空间，因此它们使得元素在中心&lt;/li&gt;
&lt;li&gt;&lt;p&gt;但是它们也仅仅适用于水平 margins , 并不能和带有 float、inline 的元素共用；也不适用在 absolute 和 fixed position 的元素中&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;当只给 margin 其中一边设置为 auto 时，该元素会向另一边倾向&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当 margin-left:auto 时，元素的左边会空出一定的空间，而右边空间被元素占完
    
    </summary>
    
    
    
      <category term="CSS" scheme="http://www.orekiyuta.cn/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>Java Notes</title>
    <link href="http://www.orekiyuta.cn/archives/JavaNotes/"/>
    <id>http://www.orekiyuta.cn/archives/JavaNotes/</id>
    <published>2020-11-27T13:01:21.000Z</published>
    <updated>2020-12-01T17:26:43.457Z</updated>
    
    <content type="html"><![CDATA[<h3 id="数组内存分配和引用"><a href="#数组内存分配和引用" class="headerlink" title="数组内存分配和引用"></a>数组内存分配和引用</h3><ul><li><img src="/images/JavaNotes/1.png" alt><a id="more"></a></li><li><img src="/images/JavaNotes/2.png" alt></li><li><img src="/images/JavaNotes/3.png" alt></li><li><img src="/images/JavaNotes/4.png" alt></li><li><img src="/images/JavaNotes/5.png" alt></li><li><img src="/images/JavaNotes/6.png" alt></li><li><img src="/images/JavaNotes/7.png" alt></li><li><img src="/images/JavaNotes/8.png" alt></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;数组内存分配和引用&quot;&gt;&lt;a href=&quot;#数组内存分配和引用&quot; class=&quot;headerlink&quot; title=&quot;数组内存分配和引用&quot;&gt;&lt;/a&gt;数组内存分配和引用&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;img src=&quot;/images/JavaNotes/1.png&quot; alt&gt;
    
    </summary>
    
    
    
      <category term="Java" scheme="http://www.orekiyuta.cn/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Windows Setting</title>
    <link href="http://www.orekiyuta.cn/archives/WindowsSetting/"/>
    <id>http://www.orekiyuta.cn/archives/WindowsSetting/</id>
    <published>2020-11-14T08:49:01.000Z</published>
    <updated>2020-12-25T13:23:13.919Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Win10-LTSB-Add-MicrosoftStore"><a href="#Win10-LTSB-Add-MicrosoftStore" class="headerlink" title="Win10 LTSB Add MicrosoftStore"></a>Win10 LTSB Add MicrosoftStore</h3><ul><li>To : <a href="https://github.com/kkkgo/LTSB-Add-MicrosoftStore" target="_blank" rel="noopener">LTSB-Add-MicrosoftStore</a></li><li>Run: Add-Store.cmd<a id="more"></a><img src="/images/Windows/Win10LTSBAddMicrosoftStore/Snipaste_2020-11-14_16-53-39.png" alt></li></ul><h3 id="Windows-show-Windows-File"><a href="#Windows-show-Windows-File" class="headerlink" title="Windows show Windows/File"></a>Windows show Windows/File</h3><ul><li><code>explorer .</code></li><li><code>explorer ..</code></li><li><code>explorer [dirName]</code></li><li><code>start .</code><br><img src="/images/Windows/Explorer/Snipaste_2020-11-14_17-06-31.png" alt></li></ul><h3 id="Desktop-Context-Menu"><a href="#Desktop-Context-Menu" class="headerlink" title="Desktop Context Menu"></a>Desktop Context Menu</h3><ul><li><code>计算机\HKEY_CLASSES_ROOT\Directory\Background\shell</code></li><li><img src="/images/Windows/DesktopContextMenu/Snipaste_2020-11-24_22-36-36.png" alt></li><li><img src="/images/Windows/DesktopContextMenu/Snipaste_2020-11-24_22-35-15.png" alt></li><li><img src="/images/Windows/DesktopContextMenu/Snipaste_2020-11-24_22-40-14.png" alt></li></ul><h3 id="DOS-Clean"><a href="#DOS-Clean" class="headerlink" title="DOS Clean"></a>DOS Clean</h3><ul><li><code>cls</code></li></ul><h3 id="Netstat-Find-Kill"><a href="#Netstat-Find-Kill" class="headerlink" title="Netstat Find/Kill"></a>Netstat Find/Kill</h3><ul><li><p><code>netstat -ano|findstr 8000</code>  查看占用8000端口的进程</p></li><li><p><code>tasklist | findstr 8608</code> 查看进程的信息</p></li><li><p><code>taskkill /pid 8608 /f</code>  关闭进程</p></li></ul><p><img src="/images/Windows/Netstat/Snipaste_2020-05-23_13-23-00.png" alt></p><h3 id="Install-Chocolatey"><a href="#Install-Chocolatey" class="headerlink" title="Install Chocolatey"></a>Install Chocolatey</h3><ul><li>At PowerShell<ul><li><code>Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString(&#39;https://chocolatey.org/install.ps1&#39;))</code></li></ul></li><li><a href="https://chocolatey.org/install" target="_blank" rel="noopener">https://chocolatey.org/install</a></li><li>At CMD<ul><li><code>@powershell Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString(&#39;https://chocolatey.org/install.ps1&#39;))</code></li></ul></li></ul><h2 id="Choco"><a href="#Choco" class="headerlink" title="Choco"></a>Choco</h2><ul><li><code>choco list -lo</code> 查看用 chocolatey 安装的软件</li><li><code>choco list -li</code> 查看所有已安装的软件</li><li><code>choco uninstall [name]</code> 卸载软件</li></ul><h2 id="Nslookup"><a href="#Nslookup" class="headerlink" title="Nslookup"></a>Nslookup</h2><ul><li><code>nslookup www.baidu.com</code> 查看域名当前 IP<h2 id="Net-user"><a href="#Net-user" class="headerlink" title="Net user"></a>Net user</h2></li><li><code>net user</code> 查看当前计算机用户名<h2 id="Arp-a"><a href="#Arp-a" class="headerlink" title="Arp -a"></a>Arp -a</h2></li><li><code>arp -a</code> 查看当前局域网内的所有 IP<h2 id="Net-share"><a href="#Net-share" class="headerlink" title="Net share"></a>Net share</h2></li><li><code>net share</code> 查看本机上的共享资源</li><li><code>net share [name]/delete</code> 删除共享资源</li></ul><h2 id="Netsh-wlan"><a href="#Netsh-wlan" class="headerlink" title="Netsh wlan"></a>Netsh wlan</h2><ul><li><code>netsh wlan show profile [wlanName] key=clear</code> 查看已连接 Wi-Fi 的详细信息，包含密码</li></ul><h2 id><a href="#" class="headerlink" title="|"></a>|</h2><ul><li><code>ipconfig | clip</code> 将结果输出到剪贴板</li></ul><h2 id="amp-amp"><a href="#amp-amp" class="headerlink" title="&amp;&amp;"></a>&amp;&amp;</h2><ul><li><code>ipconfig &amp;&amp; arp -a</code> 连接多个命令，只有前面一个执行成功，后面的才执行</li><li>&amp; 一个一个执行</li><li>PowerShell 不支持</li></ul><h2 id="VSCode-Column-edit"><a href="#VSCode-Column-edit" class="headerlink" title="VSCode Column edit"></a>VSCode Column edit</h2><ul><li>Shift + Alt + 左键</li></ul><h2 id="Google-Clean-up-cache"><a href="#Google-Clean-up-cache" class="headerlink" title="Google Clean up cache"></a>Google Clean up cache</h2><ul><li>Shift + ctrl + R</li></ul><h2 id="Comfortable-colors"><a href="#Comfortable-colors" class="headerlink" title="Comfortable colors"></a>Comfortable colors</h2><ul><li>#39ff70</li></ul><h2 id="The-Lost-Worlds"><a href="#The-Lost-Worlds" class="headerlink" title="The Lost Worlds"></a>The Lost Worlds</h2><ul><li><code>telnet towel.blinkenlights.nl</code><br><img src="/images/Windows/blinkenlights/Snipaste_2020-12-13_02-50-40.png" alt></li></ul><h2 id="Check-WIN-Version"><a href="#Check-WIN-Version" class="headerlink" title="Check WIN Version"></a>Check WIN Version</h2><ul><li><code>winver</code> cmd</li><li>win + R , 输入 winver </li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Win10-LTSB-Add-MicrosoftStore&quot;&gt;&lt;a href=&quot;#Win10-LTSB-Add-MicrosoftStore&quot; class=&quot;headerlink&quot; title=&quot;Win10 LTSB Add MicrosoftStore&quot;&gt;&lt;/a&gt;Win10 LTSB Add MicrosoftStore&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;To : &lt;a href=&quot;https://github.com/kkkgo/LTSB-Add-MicrosoftStore&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;LTSB-Add-MicrosoftStore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Run: Add-Store.cmd
    
    </summary>
    
    
    
      <category term="Windows" scheme="http://www.orekiyuta.cn/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>Java GenericTypes</title>
    <link href="http://www.orekiyuta.cn/archives/JavaGenericTypes/"/>
    <id>http://www.orekiyuta.cn/archives/JavaGenericTypes/</id>
    <published>2020-11-10T11:53:11.000Z</published>
    <updated>2020-11-11T15:41:09.337Z</updated>
    
    <content type="html"><![CDATA[<h2 id="泛型类"><a href="#泛型类" class="headerlink" title="泛型类"></a>泛型类</h2><p>泛型类,是在实例化类的时候, 指明 泛型的具体类型</p><h3 id="泛型的类型参数不支持基本类型-只能是类对象类型"><a href="#泛型的类型参数不支持基本类型-只能是类对象类型" class="headerlink" title="泛型的类型参数不支持基本类型,只能是类对象类型"></a>泛型的类型参数不支持基本类型,只能是类对象类型</h3><ul><li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Generic&lt;<span class="keyword">int</span>&gt; genericl = <span class="keyword">new</span> Generic&lt;<span class="keyword">int</span>&gt;(<span class="number">100</span>);          <span class="comment">// ❌</span></span><br><span class="line">Generic&lt;Integer&gt; genericl = <span class="keyword">new</span> Generic&lt;Integer&gt;(<span class="number">100</span>);  <span class="comment">// ✔</span></span><br></pre></td></tr></table></figure></li></ul><p>👉<a href="https://qastack.cn/programming/2721546/why-dont-java-generics-support-primitive-types" target="_blank" rel="noopener">为什么Java泛型不支持基本类型？</a></p><ul><li>主要是为了向后兼容<a id="more"></a></li></ul><h3 id="泛型类在创建对象的时候-没有指定类型的话-将默认指定为-Object-类型"><a href="#泛型类在创建对象的时候-没有指定类型的话-将默认指定为-Object-类型" class="headerlink" title="泛型类在创建对象的时候,没有指定类型的话,将默认指定为 Object 类型"></a>泛型类在创建对象的时候,没有指定类型的话,将默认指定为 Object 类型</h3><p><img src="/images/JavaGenericTypes/1.png" alt></p><ul><li>由于 基本数据类型 不继承自 Object 因此, 泛型参数不支持基本类型</li><li>除了8种基本数据类型(byte,short,int,long,float,double,char,boolean)以外都是 Object 的子类</li></ul><h4 id="自动装箱"><a href="#自动装箱" class="headerlink" title="自动装箱"></a>自动装箱</h4><p><img src="/images/JavaGenericTypes/2.png" alt></p><ul><li><code>Object object = 1;</code> 没有编译问题,因为在赋值过程种自动装箱;</li><li>8种基本类型都有对应的包装数据类型</li><li>上图运行结果可见,经过了自动装箱</li></ul><h3 id="由同一泛型类-创建的不同数据类型的对象-本质上是同一类型"><a href="#由同一泛型类-创建的不同数据类型的对象-本质上是同一类型" class="headerlink" title="由同一泛型类,创建的不同数据类型的对象,本质上是同一类型"></a>由同一泛型类,创建的不同数据类型的对象,本质上是同一类型</h3><p><img src="/images/JavaGenericTypes/3.png" alt></p><ul><li><code>stringGeneric.getClass() == integerGeneric.getClass()</code>结果为 true , 说明内存地址相同</li></ul><h3 id="子类是泛型类的话-子类要和父类的泛型类型保持一致"><a href="#子类是泛型类的话-子类要和父类的泛型类型保持一致" class="headerlink" title="子类是泛型类的话,子类要和父类的泛型类型保持一致"></a>子类是泛型类的话,子类要和父类的泛型类型保持一致</h3><ul><li><code>class ChildGeneric&lt;T&gt; extends Generic&lt;T&gt;</code></li><li>由子类来决定具体类型,就是调用的时候来指定的</li></ul><p><img src="/images/JavaGenericTypes/4.png" alt></p><ul><li><code>class ChildGeneric&lt;T,E,k&gt; extends Generic&lt;T&gt;</code> 可以多个类型,但是至少保证一个类型和父类一致</li></ul><h3 id="子类不是泛型类-父类要明确泛型的数据类型"><a href="#子类不是泛型类-父类要明确泛型的数据类型" class="headerlink" title="子类不是泛型类,父类要明确泛型的数据类型"></a>子类不是泛型类,父类要明确泛型的数据类型</h3><ul><li><code>class ChildGeneric extends Generic&lt;Integer&gt;</code></li></ul><p><img src="/images/JavaGenericTypes/5.png" alt></p><h2 id="泛型接口"><a href="#泛型接口" class="headerlink" title="泛型接口"></a>泛型接口</h2><h3 id="泛型接口的实现类是泛型类-实现类和接口的泛型类型要保持一致"><a href="#泛型接口的实现类是泛型类-实现类和接口的泛型类型要保持一致" class="headerlink" title="泛型接口的实现类是泛型类,实现类和接口的泛型类型要保持一致"></a>泛型接口的实现类是泛型类,实现类和接口的泛型类型要保持一致</h3><p><img src="/images/JavaGenericTypes/7.png" alt></p><h3 id="泛型接口的实现类不是泛型类-接口要明确数据类型"><a href="#泛型接口的实现类不是泛型类-接口要明确数据类型" class="headerlink" title="泛型接口的实现类不是泛型类,接口要明确数据类型"></a>泛型接口的实现类不是泛型类,接口要明确数据类型</h3><p><img src="/images/JavaGenericTypes/6.png" alt></p><h2 id="泛型方法"><a href="#泛型方法" class="headerlink" title="泛型方法"></a>泛型方法</h2><p>泛型方法,是在调用方法的时候, 指明 泛型的具体类型</p><ul><li>前面的例子中 那些诸如 <code>public E getValue() {}</code> 只是普通的成员方法,并不是泛型方法</li><li>只有声明了 <code>&lt;T&gt;</code> 的方法才是泛型方法 , T 可以是其他符号（E,K…）</li></ul><p><img src="/images/JavaGenericTypes/8.png" alt></p><ul><li>泛型方法独立于类存在</li><li>即使 泛型方法的标识符和类标识符一致,泛型方法的类型取决于调用时候的类型</li><li>下图可以和上图做比较,可得出结论</li></ul><p><img src="/images/JavaGenericTypes/9.png" alt></p><ul><li>泛型方法 和 泛型类里面的成员方法 的区别在于:泛型方法的类型取决于调用时的类型;泛型类里面的成员方法在使用的时候,必须遵从泛型类的类型</li></ul><h3 id="静态泛型方法"><a href="#静态泛型方法" class="headerlink" title="静态泛型方法"></a>静态泛型方法</h3><ul><li>泛型类里面的成员方法 不能声明为静态 </li><li>泛型方法独立于类的存在,可以声明为静态</li></ul><p><img src="/images/JavaGenericTypes/10.png" alt></p><h3 id="可变参数"><a href="#可变参数" class="headerlink" title="可变参数"></a>可变参数</h3><p><img src="/images/JavaGenericTypes/11.png" alt></p><h2 id="类型通配符"><a href="#类型通配符" class="headerlink" title="类型通配符"></a>类型通配符</h2><p><img src="/images/JavaGenericTypes/12.png" alt></p><ul><li>按照多态思想, Integer 继承于 Number , 但是对泛型类型来说不适用</li></ul><p><img src="/images/JavaGenericTypes/13.png" alt></p><ul><li>顺着思路,尝试重载,但是依然不行;同理 <code>Box&lt;Object&gt;</code> 同样不行</li><li>因为,前面说过了; <code>Box&lt;Number&gt; box</code>和<code>Box&lt;Integer&gt; box</code> 本质上都是 <code>Box&lt;E&gt;</code>;所以这两个是同一个方法</li></ul><p><img src="/images/JavaGenericTypes/14.png" alt></p><ul><li>因此为了解决这个问题,引入了通配符<code>?</code></li></ul><p><img src="/images/JavaGenericTypes/15.png" alt></p><h3 id="上限"><a href="#上限" class="headerlink" title="上限"></a>上限</h3><ul><li><code>Box&lt;? extends Number&gt;</code> 指可以传 继承于 Number 的所有子类,最高上限传 Number</li></ul><p><img src="/images/JavaGenericTypes/16.png" alt></p><p><img src="/images/JavaGenericTypes/17.png" alt></p><ul><li>这里不允许添加元素,因为确定不了类型</li></ul><p><img src="/images/JavaGenericTypes/18.png" alt></p><ul><li>ArrayList 里面的 addAll() 就用了 上限通配符</li></ul><p><img src="/images/JavaGenericTypes/19.png" alt></p><p><img src="/images/JavaGenericTypes/20.png" alt></p><h3 id="下限"><a href="#下限" class="headerlink" title="下限"></a>下限</h3><ul><li>类/接口&lt;? super 实参类型&gt;</li><li>要求该泛型的类型，只能是实参类型，或实参类型的 父类类型</li></ul><p><img src="/images/JavaGenericTypes/21.png" alt></p><ul><li><p>遍历元素下限通配符元素的时候,拿 0bject 类型,因为无论是 Cat 还是所有的父类,都来自于 Object</p></li><li><p>这里可以添加元素,但是不保证元素数据类型的约束要求<br><img src="/images/JavaGenericTypes/22.png" alt></p></li></ul><p><img src="/images/JavaGenericTypes/23.png" alt></p><ul><li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Animal.java</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Animal</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Animal&#123;"</span> +</span><br><span class="line">                <span class="string">"name='"</span> + name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Cat.java</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Cat</span> <span class="keyword">extends</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Cat</span><span class="params">(String name, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(name);</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Cat&#123;"</span> +</span><br><span class="line">                <span class="string">"age="</span> + age +</span><br><span class="line">                <span class="string">", name='"</span> + name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//MiniCat.java</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MiniCat</span> <span class="keyword">extends</span> <span class="title">Cat</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> level;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MiniCat</span><span class="params">(String name, <span class="keyword">int</span> age, <span class="keyword">int</span> level)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(name, age);</span><br><span class="line">        <span class="keyword">this</span>.level = level;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"MiniCat&#123;"</span> +</span><br><span class="line">                <span class="string">"level="</span> + level +</span><br><span class="line">                <span class="string">", age="</span> + age +</span><br><span class="line">                <span class="string">", name='"</span> + name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//mian.java</span></span><br><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br><span class="line"><span class="keyword">import</span> java.util.TreeSet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        TreeSet&lt;Cat&gt; treeSet = <span class="keyword">new</span> TreeSet&lt;&gt;(<span class="keyword">new</span> Comparator2());</span><br><span class="line">        treeSet.add(<span class="keyword">new</span> Cat(<span class="string">"Ami"</span>,<span class="number">13</span>));</span><br><span class="line">        treeSet.add(<span class="keyword">new</span> Cat(<span class="string">"Bie"</span>,<span class="number">25</span>));</span><br><span class="line">        treeSet.add(<span class="keyword">new</span> Cat(<span class="string">"Cna"</span>,<span class="number">34</span>));</span><br><span class="line">        treeSet.add(<span class="keyword">new</span> Cat(<span class="string">"Dji"</span>,<span class="number">52</span>));</span><br><span class="line">        treeSet.add(<span class="keyword">new</span> Cat(<span class="string">"Ewa"</span>,<span class="number">11</span>));</span><br><span class="line">        <span class="keyword">for</span> (Cat cat : treeSet) &#123;</span><br><span class="line">            System.out.println(cat);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Comparator1</span> <span class="keyword">implements</span> <span class="title">Comparator</span>&lt;<span class="title">Animal</span>&gt;</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(Animal o1, Animal o2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> o1.name.compareTo(o2.name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Comparator2</span> <span class="keyword">implements</span> <span class="title">Comparator</span>&lt;<span class="title">Cat</span>&gt;</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(Cat o1, Cat o2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> o1.age - o2.age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Comparator3</span> <span class="keyword">implements</span> <span class="title">Comparator</span>&lt;<span class="title">MiniCat</span>&gt;</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(MiniCat o1, MiniCat o2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> o1.level - o2.level;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><img src="/images/JavaGenericTypes/24.png" alt></p><ul><li><code>TreeSet&lt;Cat&gt; treeSet = new TreeSet&lt;&gt;(new Comparator2());</code> 根据年龄比较排序</li><li><p><code>TreeSet&lt;Cat&gt; treeSet = new TreeSet&lt;&gt;(new Comparator1());</code> 根据名字比较排序</p></li><li><p><code>TreeSet&lt;Cat&gt; treeSet = new TreeSet&lt;&gt;(new Comparator3());</code> 在下限 Cat 以下, MiniCat 达不到下限</p></li></ul><p><img src="/images/JavaGenericTypes/25.png" alt></p><h2 id="类型擦除"><a href="#类型擦除" class="headerlink" title="类型擦除"></a>类型擦除</h2><p>泛型是Java 1.5版本才引进的概念，在这之前是没有泛型的，但是泛型代码能够很好地和之前版本的代码兼容。</p><p>那是因为，泛型信息只存在于代码编译阶段，在进入JVM之前，与泛型相关的信息会被擦除掉，我们称之为–类型擦除。</p><ul><li>在前面的例子中，判断过泛型是否相等<ul><li>由同一泛型类,创建的不同数据类型的对象,本质上是同一类型 </li><li><code>stringGeneric.getClass() == integerGeneric.getClass()</code>结果为 true ,其实说明了这点</li><li>在进入JVM之前，与泛型相关的信息会被擦除掉</li><li><img src="/images/JavaGenericTypes/26.png" alt></li><li>在运行结果出来的时候,两者是相等的,说明了编译期间会把泛型的类型给移除掉</li></ul></li></ul><h3 id="无限制类型擦除"><a href="#无限制类型擦除" class="headerlink" title="无限制类型擦除"></a>无限制类型擦除</h3><p>泛型 T 在运行的时候,会被解释成 Object;就相当于用 Object 来代替</p><p><img src="/images/JavaGenericTypes/27.png" alt></p><p><img src="/images/JavaGenericTypes/28.png" alt></p><h3 id="有限制类型擦除"><a href="#有限制类型擦除" class="headerlink" title="有限制类型擦除"></a>有限制类型擦除</h3><p>将 泛型 T 转换成 上限类型 Number<br><img src="/images/JavaGenericTypes/29.png" alt></p><p><img src="/images/JavaGenericTypes/30.png" alt></p><h3 id="擦除-方法中类型定义的参数"><a href="#擦除-方法中类型定义的参数" class="headerlink" title="擦除 方法中类型定义的参数"></a>擦除 方法中类型定义的参数</h3><p>前面的是擦除 泛型类 的类型;这里是擦除 泛型方法 的类型</p><p><img src="/images/JavaGenericTypes/31.png" alt></p><p><img src="/images/JavaGenericTypes/32.png" alt></p><h3 id="桥接方法"><a href="#桥接方法" class="headerlink" title="桥接方法"></a>桥接方法</h3><p>接口定义 T 转成 Object ; 实现类 Integer 还是 Integer</p><p>只是多个了桥接; 为了保持编译后的接口和实现关系</p><p><img src="/images/JavaGenericTypes/33.png" alt></p><p><img src="/images/JavaGenericTypes/34.png" alt></p><h2 id="泛型数组"><a href="#泛型数组" class="headerlink" title="泛型数组"></a>泛型数组</h2><h3 id="可以创建带泛型的数组引用，但是不能-直接-创建带泛型的-数组对象"><a href="#可以创建带泛型的数组引用，但是不能-直接-创建带泛型的-数组对象" class="headerlink" title="可以创建带泛型的数组引用，但是不能 直接 创建带泛型的 数组对象"></a>可以创建带泛型的数组引用，但是不能 直接 创建带泛型的 数组对象</h3><p><img src="/images/JavaGenericTypes/35.png" alt></p><p><img src="/images/JavaGenericTypes/36.png" alt></p><p>跳过原生 ArrayList 对象引用; 直接将 原生ArrayList 数组 赋给 泛型ArrayList; 后面就有类型检查</p><p><img src="/images/JavaGenericTypes/37.png" alt></p><p><img src="/images/JavaGenericTypes/38.png" alt></p><p>主要是因为泛型在编译的时候会做类型擦除，而数组会一直保持它的初始类型</p><h3 id="可以通过-java-lang-reflect-Array-的-newInstance-Class-int-创建-T-数组"><a href="#可以通过-java-lang-reflect-Array-的-newInstance-Class-int-创建-T-数组" class="headerlink" title="可以通过 java.lang.reflect.Array 的 newInstance(Class,int) 创建 T[] 数组"></a>可以通过 java.lang.reflect.Array 的 newInstance(Class,int) 创建 T[] 数组</h3><p><img src="/images/JavaGenericTypes/39.png" alt></p><h2 id="反射常用的泛型类"><a href="#反射常用的泛型类" class="headerlink" title="反射常用的泛型类"></a>反射常用的泛型类</h2><ul><li><code>Class&lt;T&gt;</code></li><li><code>Constructor&lt;T&gt;</code></li></ul><p><img src="/images/JavaGenericTypes/40.png" alt></p><p><img src="/images/JavaGenericTypes/41.png" alt></p><p>class.var IDEA的快捷方式生成引用 和 Ctrl+Alt+V 一个效果</p><p><img src="/images/JavaGenericTypes/42.png" alt></p><p><img src="/images/JavaGenericTypes/43.png" alt></p><p><img src="/images/JavaGenericTypes/44.png" alt></p><p><img src="/images/JavaGenericTypes/45.png" alt></p><p><img src="/images/JavaGenericTypes/46.png" alt></p><h2 id="泛型的好处"><a href="#泛型的好处" class="headerlink" title="泛型的好处"></a>泛型的好处</h2><ul><li>类型安全</li><li>减少强制类型转换</li></ul><h2 id="类型参数标识符"><a href="#类型参数标识符" class="headerlink" title="类型参数标识符"></a>类型参数标识符</h2><ul><li>E - Element (在集合中使用，因为集合中存放的是元素)</li><li>T - Type（表示Java 类，包括基本的类和我们自定义的类）</li><li>K - Key（表示键，比如Map中的key）</li><li>V - Value（表示值）</li><li>N - Number（表示数值类型）</li><li>？ - （表示不确定的java类型）</li><li>S、U、V - 2nd、3rd、4th types</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;泛型类&quot;&gt;&lt;a href=&quot;#泛型类&quot; class=&quot;headerlink&quot; title=&quot;泛型类&quot;&gt;&lt;/a&gt;泛型类&lt;/h2&gt;&lt;p&gt;泛型类,是在实例化类的时候, 指明 泛型的具体类型&lt;/p&gt;
&lt;h3 id=&quot;泛型的类型参数不支持基本类型-只能是类对象类型&quot;&gt;&lt;a href=&quot;#泛型的类型参数不支持基本类型-只能是类对象类型&quot; class=&quot;headerlink&quot; title=&quot;泛型的类型参数不支持基本类型,只能是类对象类型&quot;&gt;&lt;/a&gt;泛型的类型参数不支持基本类型,只能是类对象类型&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Generic&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; genericl = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Generic&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt;(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;);          &lt;span class=&quot;comment&quot;&gt;// ❌&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Generic&amp;lt;Integer&amp;gt; genericl = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Generic&amp;lt;Integer&amp;gt;(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;);  &lt;span class=&quot;comment&quot;&gt;// ✔&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;👉&lt;a href=&quot;https://qastack.cn/programming/2721546/why-dont-java-generics-support-primitive-types&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;为什么Java泛型不支持基本类型？&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主要是为了向后兼容
    
    </summary>
    
    
    
      <category term="Java" scheme="http://www.orekiyuta.cn/tags/Java/"/>
    
  </entry>
  
</feed>
