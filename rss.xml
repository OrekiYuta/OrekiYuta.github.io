<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Canoe</title>
  
  <subtitle>「ろくでなし」</subtitle>
  <link href="/rss.xml" rel="self"/>
  
  <link href="http://www.orekiyuta.cn/"/>
  <updated>2021-02-03T17:37:10.334Z</updated>
  <id>http://www.orekiyuta.cn/</id>
  
  <author>
    <name>Orekiyuta</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SSH Port Mapping</title>
    <link href="http://www.orekiyuta.cn/archives/SSHPortMapping/"/>
    <id>http://www.orekiyuta.cn/archives/SSHPortMapping/</id>
    <published>2021-02-03T16:28:34.000Z</published>
    <updated>2021-02-03T17:37:10.334Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Scene"><a href="#Scene" class="headerlink" title="Scene"></a>Scene</h2><ol><li><ul><li>正常来说在服务器部署了一个服务，要访问该服务得用该云服务器 ip + 端口</li><li>然后去云服务器商设置开放端口，最后才能访问</li><li>但是，我们只是想随手用一下而已，又懒得去开放端口</li><li>这种时候可以用 SSH 端口映射</li></ul></li></ol><hr><ol start="2"><li><ul><li>我们想从公网去访问局域网内部的服务</li><li>也可以利用 SSH 端口映射 把 云服务器的请求转发到 局域网内部设备里</li></ul></li></ol><hr><ol start="3"><li><ul><li>不同子网之间的访问</li><li>内网穿透原理应该也是差不多</li></ul></li></ol><a id="more"></a><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="本地端口转发-从本地访问公网内部子网服务"><a href="#本地端口转发-从本地访问公网内部子网服务" class="headerlink" title="本地端口转发-从本地访问公网内部子网服务"></a>本地端口转发-从本地访问公网内部子网服务</h3><ul><li>这里的操作视角为 本机 -&gt; 云服务器</li><li>这里的用户视角为 本机或处于同一网络下的机器 -&gt; 云服务器</li><li><code>ssh root@ip</code> 正常登录服务器 </li><li><code>ssh -L 2222:localhost:8080 root@ip</code> 这里就相当于把本机的 2222 端口 转发到 云服务器的 8080 端口<ul><li><code>ssh -L 本机地址:云服务器内网地址 root@ip</code></li><li>2222 其实是 localhost:2222 本机</li><li>而 localhost:8080 指的是 服务器内网中该服务器的地址</li><li>这个转发会在退出服务器登录时失效</li></ul></li><li><code>ssh -L 192.168.1.200:2222:localhost:8080 root@ip</code> </li><li>最后，就可以使得与本机处于同一网段的机器一起使用该地址转发到 云服务器的 8080 端口</li></ul><h3 id="远程端口转发-从公网访问与本机不在同一网段的服务"><a href="#远程端口转发-从公网访问与本机不在同一网段的服务" class="headerlink" title="远程端口转发-从公网访问与本机不在同一网段的服务"></a>远程端口转发-从公网访问与本机不在同一网段的服务</h3><ul><li>这里的操作视角为 远端子网机器 -&gt; 云服务器</li><li>这里的用户视角为 用户机器 -&gt; 云服务器 -&gt; 远端子网机器</li><li><p><code>ssh -R 3333:10.10.10.254:7777 root@ip</code> 这里意思就是将云服务器的端口 转发到 远端子网机器的 3333 端口 </p><ul><li><code>ssh -R 云服务器内网地址:远端子网机器地址 root@ip</code></li><li>3333 就是 云服务器的 localhost:3000</li><li>10.10.10.254:7777 为远端子网机器的地址</li><li>执行该命令后可用 <code>netstat -anp | grep 3333</code> 查看是否启用了监听该端口的服务</li></ul></li><li><p>当然这样还不行，问题在于安全问题，不能随意把远程端口开放了</p><ul><li>SSH 默认把该操作关闭了</li></ul></li><li>修改配置，开放该操作</li><li><code>vim /etc/ssh/sshd_config</code><pre><code class="diff"><span class="deletion">-#GatewayPorts no</span><span class="addition">+GatewayPorts yes</span></code></pre></li><li><code>systemctl restart sshd</code>  </li><li><code>ssh -R 0.0.0.0:3333:10.10.10.254:7777 root@ip</code> </li><li><code>netstat -anp | grep 3333</code> 再次查看</li><li>当然同时还要在云服务器商设置里把 3333 端口开放</li><li>最后，就可以通过 云服务器公网 ip + 端口 访问到 远程子网的机器里的端口服务了</li></ul><h3 id="访问不同网络下的设备-两者结合"><a href="#访问不同网络下的设备-两者结合" class="headerlink" title="访问不同网络下的设备-两者结合"></a>访问不同网络下的设备-两者结合</h3><ul><li>在前面两个的基础上，远程机器设置转发，本地机器也设置转发</li><li>就可以达到，利用处于公网的云服务器作为中介去访问不同网络下的机器</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Scene&quot;&gt;&lt;a href=&quot;#Scene&quot; class=&quot;headerlink&quot; title=&quot;Scene&quot;&gt;&lt;/a&gt;Scene&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;ul&gt;
&lt;li&gt;正常来说在服务器部署了一个服务，要访问该服务得用该云服务器 ip + 端口&lt;/li&gt;
&lt;li&gt;然后去云服务器商设置开放端口，最后才能访问&lt;/li&gt;
&lt;li&gt;但是，我们只是想随手用一下而已，又懒得去开放端口&lt;/li&gt;
&lt;li&gt;这种时候可以用 SSH 端口映射&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;&lt;ul&gt;
&lt;li&gt;我们想从公网去访问局域网内部的服务&lt;/li&gt;
&lt;li&gt;也可以利用 SSH 端口映射 把 云服务器的请求转发到 局域网内部设备里&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;&lt;ul&gt;
&lt;li&gt;不同子网之间的访问&lt;/li&gt;
&lt;li&gt;内网穿透原理应该也是差不多&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
    
      <category term="Linux" scheme="http://www.orekiyuta.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Bitwarden On Docker</title>
    <link href="http://www.orekiyuta.cn/archives/bitwardenOnDocker/"/>
    <id>http://www.orekiyuta.cn/archives/bitwardenOnDocker/</id>
    <published>2021-02-02T15:32:12.000Z</published>
    <updated>2021-02-02T17:12:16.971Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yum install docker</span><br><span class="line"><span class="comment"># ------</span></span><br><span class="line">su root</span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br><span class="line">systemctl start docker</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure></div><h2 id="Portainer"><a href="#Portainer" class="headerlink" title="Portainer"></a>Portainer</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo docker pull portainer/portainer</span><br><span class="line">sudo docker volume create portainer_data</span><br><span class="line">sudo docker run -d -p 9000:9000 --name portainer --restart always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer</span><br></pre></td></tr></table></figure></div><h2 id="Bitwarden"><a href="#Bitwarden" class="headerlink" title="Bitwarden"></a>Bitwarden</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull bitwardenrs/server:latest</span><br><span class="line">docker run -d --name bitwarden -v /var/run/bitwarden/:/data/ -p 80:9001 bitwardenrs/server:latest</span><br></pre></td></tr></table></figure></div><a id="more"></a><h2 id="Other"><a href="#Other" class="headerlink" title="Other"></a>Other</h2><h3 id="Job-for-docker-service-failed-because-the-control-process-exited-with-error-code-See-“systemctl-status-docker-service”-and-“journalctl-xe”-for-details"><a href="#Job-for-docker-service-failed-because-the-control-process-exited-with-error-code-See-“systemctl-status-docker-service”-and-“journalctl-xe”-for-details" class="headerlink" title="Job for docker.service failed because the control process exited with error code. See “systemctl status docker.service” and “journalctl -xe” for details."></a>Job for docker.service failed because the control process exited with error code. See “systemctl status docker.service” and “journalctl -xe” for details.</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rm /etc/docker/daemon.json</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure></div><h3 id="Image-accelerator"><a href="#Image-accelerator" class="headerlink" title="Image accelerator"></a>Image accelerator</h3><ul><li><a href="https://cr.console.aliyun.com/cn-beijing/instances/mirrors" target="_blank" rel="noopener">https://cr.console.aliyun.com/cn-beijing/instances/mirrors</a></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl cat docker | grep <span class="string">'\-\-registry\-mirror'</span></span><br><span class="line">sudo nano /etc/docker/daemon.json</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"registry-mirrors"</span>: [<span class="string">"this link from aliyun"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure></div><h2 id="Refer"><a href="#Refer" class="headerlink" title="Refer"></a>Refer</h2><ul><li><a href="https://bitwarden.com/download/" target="_blank" rel="noopener">bitwarden</a></li><li><a href="https://github.com/dani-garcia/bitwarden_rs" target="_blank" rel="noopener">dani-garcia/bitwarden_rs</a></li><li><a href="https://bitwarden.com/help/article/install-on-premise/" target="_blank" rel="noopener">Install and Deploy</a></li><li><a href="https://hub.docker.com/r/bitwarden/setup" target="_blank" rel="noopener">bitwarden/setup</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Docker&quot;&gt;&lt;a href=&quot;#Docker&quot; class=&quot;headerlink&quot; title=&quot;Docker&quot;&gt;&lt;/a&gt;Docker&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum install docker&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# ------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;su root&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;systemctl &lt;span class=&quot;built_in&quot;&gt;enable&lt;/span&gt; docker&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;systemctl start docker&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;systemctl restart docker&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Portainer&quot;&gt;&lt;a href=&quot;#Portainer&quot; class=&quot;headerlink&quot; title=&quot;Portainer&quot;&gt;&lt;/a&gt;Portainer&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo docker pull portainer/portainer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo docker volume create portainer_data&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sudo docker run -d -p 9000:9000 --name portainer --restart always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Bitwarden&quot;&gt;&lt;a href=&quot;#Bitwarden&quot; class=&quot;headerlink&quot; title=&quot;Bitwarden&quot;&gt;&lt;/a&gt;Bitwarden&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docker pull bitwardenrs/server:latest&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker run -d --name bitwarden -v /var/run/bitwarden/:/data/ -p 80:9001 bitwardenrs/server:latest&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="Docker" scheme="http://www.orekiyuta.cn/tags/Docker/"/>
    
      <category term="Bitwarden" scheme="http://www.orekiyuta.cn/tags/Bitwarden/"/>
    
  </entry>
  
  <entry>
    <title>Python Dependency Separation</title>
    <link href="http://www.orekiyuta.cn/archives/pythonDependencySeparation/"/>
    <id>http://www.orekiyuta.cn/archives/pythonDependencySeparation/</id>
    <published>2021-01-30T20:53:29.000Z</published>
    <updated>2021-02-02T18:27:56.591Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Scene"><a href="#Scene" class="headerlink" title="Scene"></a>Scene</h2><ul><li>由于每个项目之间的引入的依赖版本不同，并且有的依赖库还难以获取</li><li>因此在开发时，需要把依赖给保存下来，并且指明依赖的版本</li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="freeze"><a href="#freeze" class="headerlink" title="freeze"></a>freeze</h3><ul><li><code>pip freeze &gt; requirements.txt</code></li><li>使用这个命令可以导出当前环境的所有依赖</li></ul><h3 id="pipreqs"><a href="#pipreqs" class="headerlink" title="pipreqs"></a>pipreqs</h3><ul><li><code>pip install pipreqs</code></li><li><code>pipreqs ./</code> 切换到项目根目录下执行，导出当前目录所引用的依赖</li><li><code>pipreqs ./ --encoding==utf-8</code></li><li><code>pipreqs ./ --encoding==utf-8 --force</code></li></ul><h3 id="venv"><a href="#venv" class="headerlink" title="venv"></a>venv</h3><ul><li>使用 python 的虚拟环境  <a id="more"></a><ul><li><code>python -m venv -h</code></li><li><code>python -m venv venvdemo</code> 创建虚拟环境</li><li>找到虚拟环境的文件夹，进入 Scripts 目录<ul><li><code>activate</code> 激活虚拟环境</li><li><code>activate</code> 退出虚拟环境</li></ul></li><li>所谓的激活虚拟环境，只不过是把当前系统的环境变量指向该虚拟环境</li><li>在环境变量中，一个变量先找到哪个就算哪个</li><li><img src="/images/pythonDependencySeparation/Snipaste_2021-02-01_00-39-18.png" alt></li><li>如图所示，激活虚拟环境时，会把该虚拟环境路径放在最前面，因此当前 python 的 path 就指向这个路径 ; 后面的 path 就不生效</li><li>激活虚拟环境后，可执行 <code>pip list</code> 查看当前的依赖库</li><li>激活虚拟环境后，执行的 <code>pip install</code> 都是装到该虚拟环境的目录里的</li><li>在 IDE 工具中 ,比如 PyCharm 中,直接把项目设置指向虚拟变量路径即可，本质就是改环境变量的 PATH</li></ul></li><li>迁移 虚拟环境<ul><li>在激活虚拟环境下，导出当前环境依赖库</li><li><code>pip freeze &gt; requirements.txt</code></li></ul></li></ul><h2 id="Other"><a href="#Other" class="headerlink" title="Other"></a>Other</h2><ul><li>虚拟环境的使用还是很有必要的，</li><li>因为安装一个依赖的时候，很多时候是会把指定依赖与其相关的其他依赖都安装</li><li>而卸载的时候只卸载了指定的依赖库</li><li><img src="/images/pythonDependencySeparation/Snipaste_2021-02-01_00-55-30.png" alt></li><li>如果不控制一下依赖库，久而久之就很难管理了</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Scene&quot;&gt;&lt;a href=&quot;#Scene&quot; class=&quot;headerlink&quot; title=&quot;Scene&quot;&gt;&lt;/a&gt;Scene&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;由于每个项目之间的引入的依赖版本不同，并且有的依赖库还难以获取&lt;/li&gt;
&lt;li&gt;因此在开发时，需要把依赖给保存下来，并且指明依赖的版本&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Solution&quot;&gt;&lt;a href=&quot;#Solution&quot; class=&quot;headerlink&quot; title=&quot;Solution&quot;&gt;&lt;/a&gt;Solution&lt;/h2&gt;&lt;h3 id=&quot;freeze&quot;&gt;&lt;a href=&quot;#freeze&quot; class=&quot;headerlink&quot; title=&quot;freeze&quot;&gt;&lt;/a&gt;freeze&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pip freeze &amp;gt; requirements.txt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;使用这个命令可以导出当前环境的所有依赖&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;pipreqs&quot;&gt;&lt;a href=&quot;#pipreqs&quot; class=&quot;headerlink&quot; title=&quot;pipreqs&quot;&gt;&lt;/a&gt;pipreqs&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pip install pipreqs&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pipreqs ./&lt;/code&gt; 切换到项目根目录下执行，导出当前目录所引用的依赖&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pipreqs ./ --encoding==utf-8&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pipreqs ./ --encoding==utf-8 --force&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;venv&quot;&gt;&lt;a href=&quot;#venv&quot; class=&quot;headerlink&quot; title=&quot;venv&quot;&gt;&lt;/a&gt;venv&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;使用 python 的虚拟环境
    
    </summary>
    
    
    
      <category term="Python" scheme="http://www.orekiyuta.cn/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Django Run</title>
    <link href="http://www.orekiyuta.cn/archives/djangoRun/"/>
    <id>http://www.orekiyuta.cn/archives/djangoRun/</id>
    <published>2021-01-28T12:03:52.000Z</published>
    <updated>2021-01-28T16:58:16.926Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="Other"><a href="#Other" class="headerlink" title="Other"></a>Other</h2><h3 id="Error-WinError-10013-以一种访问权限不允许的方式做了一个访问套接字的尝试。"><a href="#Error-WinError-10013-以一种访问权限不允许的方式做了一个访问套接字的尝试。" class="headerlink" title="Error: [WinError 10013] 以一种访问权限不允许的方式做了一个访问套接字的尝试。"></a>Error: [WinError 10013] 以一种访问权限不允许的方式做了一个访问套接字的尝试。</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Starting development server at http://127.0.0.1:8000/</span><br><span class="line">Quit the server with CTRL-BREAK.</span><br><span class="line">Error: [WinError 10013] 以一种访问权限不允许的方式做了一个访问套接字的尝试。</span><br></pre></td></tr></table></figure></div><ul><li>端口被占用，关闭被占用端口的程序</li><li><code>netstat -ano|findstr 8000</code></li><li><code>tasklist | findstr pid号</code></li><li><code>taskkill /pid pid号 /f</code></li></ul><p><img src="/images/djangoRun/Snipaste_2021-01-28_20-07-56.png" alt></p><ul><li>或者改端口<br><img src="/images/djangoRun/Snipaste_2021-01-28_20-10-41.png" alt></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;Other&quot;&gt;&lt;a href=&quot;#Other&quot; class=&quot;headerlink&quot; title=&quot;Other&quot;&gt;&lt;/a&gt;Other&lt;/h2&gt;&lt;h3 id=&quot;Error-WinError-10013-以一种访问权限不允许的方式做
      
    
    </summary>
    
    
    
      <category term="Django" scheme="http://www.orekiyuta.cn/tags/Django/"/>
    
      <category term="Python" scheme="http://www.orekiyuta.cn/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python get function from String</title>
    <link href="http://www.orekiyuta.cn/archives/pythonGetFunctionFromString/"/>
    <id>http://www.orekiyuta.cn/archives/pythonGetFunctionFromString/</id>
    <published>2021-01-24T18:02:46.000Z</published>
    <updated>2021-01-24T18:17:18.948Z</updated>
    
    <content type="html"><![CDATA[<h2 id="从变量中获取对象的函数并执行"><a href="#从变量中获取对象的函数并执行" class="headerlink" title="从变量中获取对象的函数并执行"></a>从变量中获取对象的函数并执行</h2><ul><li><p>单纯的执行方法可以用 eval()、locals()、globals()</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">eval(func)() <span class="comment"># func 为变量值</span></span><br><span class="line">locals()[func]()</span><br><span class="line">globals()[func]()</span><br></pre></td></tr></table></figure></div></li><li><p>而从对象中执行方法用 <code>__getattribute__</code></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chrome.__getattribute__(itemParser) <span class="comment"># 对象.__getattribute__(变量值)</span></span><br></pre></td></tr></table></figure></div></li></ul><a id="more"></a><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><ul><li><p>从变量从读取函数名并执行,提高复用度</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">config = [&#123;<span class="string">'name'</span>: <span class="string">'qncyw'</span>, <span class="string">'url'</span>: <span class="string">'https://www.qncyw.com/site/signup'</span>,</span><br><span class="line">           <span class="string">'parser'</span>: <span class="string">'selector'</span>,</span><br><span class="line">           <span class="string">'phoneInputParser'</span>: <span class="string">'#username'</span>,</span><br><span class="line">           <span class="string">'sendButtonParser'</span>: <span class="string">'#btnSendCode'</span>&#125;,</span><br><span class="line">          &#123;<span class="string">'name'</span>: <span class="string">'360doc'</span>, <span class="string">'url'</span>: <span class="string">'http://www.360doc.com/register.aspx'</span>,</span><br><span class="line">           <span class="string">'parser'</span>: <span class="string">'selector'</span>,</span><br><span class="line">           <span class="string">'phoneInputParser'</span>: <span class="string">'#signMobileName'</span>,</span><br><span class="line">           <span class="string">'sendButtonParser'</span>: <span class="string">'#sign_sendcode'</span>&#125;,</span><br><span class="line">          &#123;<span class="string">'name'</span>: <span class="string">'iwgame'</span>, <span class="string">'url'</span>: <span class="string">'http://passport.iwgame.com/reg/account/regpage.do'</span>,</span><br><span class="line">           <span class="string">'parser'</span>: <span class="string">'xpath'</span>,</span><br><span class="line">           <span class="string">'phoneInputParser'</span>: <span class="string">'//*[@name="identityId"]'</span>,</span><br><span class="line">           <span class="string">'sendButtonParser'</span>: <span class="string">'//*[@id="regPersonalForm"]/ul/li[5]/div[1]/em/a'</span>&#125;,</span><br><span class="line">          ]</span><br><span class="line">          </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">eboo</span><span class="params">(chrome)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> config:</span><br><span class="line">        itemName = item[<span class="string">'name'</span>]</span><br><span class="line">        itemUrl = item[<span class="string">'url'</span>]</span><br><span class="line">        itemParser = <span class="string">''</span></span><br><span class="line">        setDateTime = time.strftime(<span class="string">'%Y-%m-%d %H:%M:%S'</span>, time.localtime(time.time()))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            chrome.get(itemUrl)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> item[<span class="string">'parser'</span>] == <span class="string">'selector'</span>:</span><br><span class="line">                itemParser = <span class="string">'find_element_by_css_selector'</span></span><br><span class="line">            <span class="keyword">elif</span> item[<span class="string">'parser'</span>] == <span class="string">'xpath'</span>:</span><br><span class="line">                itemParser = <span class="string">'find_element_by_xpath'</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># chrome 对象通过 __getattribute__ 方法去执行名为 itemParser 变量值的函数</span></span><br><span class="line">            chrome.__getattribute__(itemParser)(item[<span class="string">'phoneInputParser'</span>]).send_keys(phoneNum)</span><br><span class="line">            chrome.__getattribute__(itemParser)(item[<span class="string">'sendButtonParser'</span>]).click()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">except</span> NoSuchElementException <span class="keyword">as</span> error:</span><br><span class="line">            print(<span class="string">f"<span class="subst">&#123;itemName&#125;</span> ---&gt; <span class="subst">&#123;error&#125;</span>"</span>)</span><br><span class="line">            chrome.get_screenshot_as_file(<span class="string">'./error/'</span> + itemName + <span class="string">'_'</span> + setDateTime + <span class="string">'.png'</span>)</span><br><span class="line">        <span class="keyword">finally</span>:</span><br><span class="line">            print(<span class="string">f"<span class="subst">&#123;itemName&#125;</span> already completed at <span class="subst">&#123;setDateTime&#125;</span>"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ChromeOpen</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    headers = <span class="string">'user-agent="Mozilla/5.0 (Windows NT 10.0; WOW64; rv:38.0) Gecko/20100101 Firefox/38.0" '</span></span><br><span class="line">    options = ChromeOptions()</span><br><span class="line">    options.add_argument(headers)</span><br><span class="line">    chrome = Chrome(options=options)</span><br><span class="line">    <span class="keyword">return</span> chrome</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">chrome_open = ChromeOpen()</span><br><span class="line">eboo(chrome_open)</span><br></pre></td></tr></table></figure></div></li><li><p>👉 <a href="https://segmentfault.com/a/1190000010476065" target="_blank" rel="noopener">Python 通过字符串调用函数或方法</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;从变量中获取对象的函数并执行&quot;&gt;&lt;a href=&quot;#从变量中获取对象的函数并执行&quot; class=&quot;headerlink&quot; title=&quot;从变量中获取对象的函数并执行&quot;&gt;&lt;/a&gt;从变量中获取对象的函数并执行&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;单纯的执行方法可以用 eval()、locals()、globals()&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;eval(func)() &lt;span class=&quot;comment&quot;&gt;# func 为变量值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;locals()[func]()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;globals()[func]()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;而从对象中执行方法用 &lt;code&gt;__getattribute__&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;chrome.__getattribute__(itemParser) &lt;span class=&quot;comment&quot;&gt;# 对象.__getattribute__(变量值)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
      <category term="Python" scheme="http://www.orekiyuta.cn/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>MySQL Split String By Procedure</title>
    <link href="http://www.orekiyuta.cn/archives/mysqlSplitStringByProcedure/"/>
    <id>http://www.orekiyuta.cn/archives/mysqlSplitStringByProcedure/</id>
    <published>2021-01-20T16:17:23.000Z</published>
    <updated>2021-01-21T14:24:23.870Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Scene"><a href="#Scene" class="headerlink" title="Scene"></a>Scene</h2><ul><li>有这样一个场景，需要把一个表中的某个字段内的字符串分割成列</li></ul><table><thead><tr><th style="text-align:center">roleCode</th><th style="text-align:center">users</th></tr></thead><tbody><tr><td style="text-align:center">4dc51344e6674c03ae0a176d3d0ae14e_20865</td><td style="text-align:center">xb,guojinyu,jiangyuan,ly_bmcc,wwm,lck,wusuihua</td></tr><tr><td style="text-align:center">4dc51344e6674c03ae0a176d3d0ae14e_20866</td><td style="text-align:center">zlj,mashaomeng</td></tr><tr><td style="text-align:center">4dc51344e6674c03ae0a176d3d0ae14e_20867</td><td style="text-align:center">tianye2</td></tr><tr><td style="text-align:center">4dc51344e6674c03ae0a176d3d0ae14e_20869</td><td style="text-align:center">wangyinju,liu_yan</td></tr></tbody></table><ul><li>就是把上面的表格拆分成下面的样子</li></ul><table><thead><tr><th style="text-align:center">roleCode</th><th style="text-align:center">users</th></tr></thead><tbody><tr><td style="text-align:center">4dc51344e6674c03ae0a176d3d0ae14e_20865</td><td style="text-align:center">xb</td></tr><tr><td style="text-align:center">4dc51344e6674c03ae0a176d3d0ae14e_20865</td><td style="text-align:center">guojinyu</td></tr><tr><td style="text-align:center">4dc51344e6674c03ae0a176d3d0ae14e_20865</td><td style="text-align:center">jiangyuan</td></tr><tr><td style="text-align:center">4dc51344e6674c03ae0a176d3d0ae14e_20865</td><td style="text-align:center">ly_bmcc</td></tr><tr><td style="text-align:center">4dc51344e6674c03ae0a176d3d0ae14e_20865</td><td style="text-align:center">wwm</td></tr><tr><td style="text-align:center">4dc51344e6674c03ae0a176d3d0ae14e_20865</td><td style="text-align:center">lck</td></tr><tr><td style="text-align:center">4dc51344e6674c03ae0a176d3d0ae14e_20865</td><td style="text-align:center">wusuihua</td></tr><tr><td style="text-align:center">4dc51344e6674c03ae0a176d3d0ae14e_20866</td><td style="text-align:center">zlj</td></tr><tr><td style="text-align:center">4dc51344e6674c03ae0a176d3d0ae14e_20866</td><td style="text-align:center">mashaomeng</td></tr><tr><td style="text-align:center">4dc51344e6674c03ae0a176d3d0ae14e_20867</td><td style="text-align:center">tianye2</td></tr><tr><td style="text-align:center">4dc51344e6674c03ae0a176d3d0ae14e_20869</td><td style="text-align:center">wangyinju</td></tr><tr><td style="text-align:center">4dc51344e6674c03ae0a176d3d0ae14e_20869</td><td style="text-align:center">liu_yan</td></tr></tbody></table><a id="more"></a><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ul><li>因为要用到循环，所以得用存储过程去解决这个问题<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">DECLARE</span> i <span class="built_in">INT</span>;</span><br><span class="line">    <span class="keyword">DECLARE</span> j <span class="built_in">INT</span>;</span><br><span class="line">    <span class="comment">-- 创建表存储结果</span></span><br><span class="line">    <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> <span class="keyword">result</span>(roleCode <span class="built_in">VARCHAR</span>(<span class="number">255</span>),<span class="keyword">users</span> <span class="built_in">VARCHAR</span>(<span class="number">255</span>));</span><br><span class="line">    <span class="comment">-- 使用临时表执行速度会快些</span></span><br><span class="line">    <span class="comment">-- CREATE TEMPORARY TABLE IF NOT EXISTS result(roleCode VARCHAR(255),users VARCHAR(255));</span></span><br><span class="line">    <span class="comment">-- 获取行数，用于第一层循环</span></span><br><span class="line">    <span class="keyword">SET</span> @cols_num = (<span class="keyword">SELECT</span> <span class="keyword">count</span>(<span class="keyword">users</span>) <span class="keyword">FROM</span> <span class="string">`user`</span>); </span><br><span class="line"><span class="keyword">SET</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    WHILE i &lt; @cols_num DO</span><br><span class="line">        <span class="keyword">SET</span> j = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">-- 获取 users 字段内的被 “,” 分割的字符串数目</span></span><br><span class="line">        <span class="comment">-- LENGTH(users) - LENGTH(REPLACE(users,',',''))+1 AS userNums</span></span><br><span class="line">        <span class="comment">-- 将字符串数目赋给变量 @str_num ,用于第二层循环</span></span><br><span class="line">        <span class="comment">-- 同时取得当前记录的 roleCode,把值赋给变量 @roleCode</span></span><br><span class="line">        <span class="keyword">SELECT</span> roleCode,<span class="keyword">LENGTH</span>(<span class="keyword">users</span>) - <span class="keyword">LENGTH</span>(<span class="keyword">REPLACE</span>(<span class="keyword">users</span>,<span class="string">','</span>,<span class="string">''</span>))+<span class="number">1</span> <span class="keyword">AS</span> userNums  </span><br><span class="line">        <span class="keyword">INTO</span> @roleCode,@str_num <span class="keyword">FROM</span> <span class="string">`user`</span> <span class="keyword">LIMIT</span> i,<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        WHILE j &lt; @str_num DO</span><br><span class="line">            <span class="comment">-- 取得当前查询的记录的 users 字段被分割的最后一个字符串</span></span><br><span class="line">            <span class="keyword">SELECT</span> SUBSTRING_INDEX(SUBSTRING_INDEX(<span class="keyword">users</span>,<span class="string">','</span>,j+<span class="number">1</span>),<span class="string">','</span>,<span class="number">-1</span>) <span class="keyword">AS</span> <span class="keyword">users</span> </span><br><span class="line">            <span class="keyword">INTO</span> @<span class="keyword">users</span> <span class="keyword">FROM</span> <span class="string">`user`</span> <span class="keyword">LIMIT</span> i,<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">result</span>(roleCode,<span class="keyword">users</span>) <span class="keyword">VALUES</span> (@roleCode,@<span class="keyword">users</span>);</span><br><span class="line">                        </span><br><span class="line">            <span class="keyword">SET</span> j = j+<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">END</span> <span class="keyword">WHILE</span>;</span><br><span class="line">                </span><br><span class="line">        <span class="keyword">SET</span> i = i+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">END</span> <span class="keyword">WHILE</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">-- 查询结果</span></span><br><span class="line">    <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">result</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure></div></li></ul><h2 id="Other"><a href="#Other" class="headerlink" title="Other"></a>Other</h2><ul><li>如果要逆向还原，只需执行下面语句即可<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> roleCode,<span class="keyword">GROUP_CONCAT</span>(<span class="keyword">users</span>) <span class="keyword">AS</span> <span class="keyword">users</span> <span class="keyword">FROM</span> <span class="keyword">result</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> roleCode;</span><br></pre></td></tr></table></figure></div></li></ul><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><p>存储过程基本用法</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">exists</span> test_tbl;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> test_tbl (<span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">20</span>), <span class="keyword">status</span> <span class="built_in">int</span>(<span class="number">2</span>));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> test_tbl <span class="keyword">values</span>(<span class="string">'abc'</span>, <span class="number">1</span>),(<span class="string">'edf'</span>, <span class="number">2</span>),(<span class="string">'xyz'</span>, <span class="number">3</span>);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">procedure</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> pro_test_3;</span><br><span class="line">delimiter //</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> pro_test_3()</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="comment">--  方式 1</span></span><br><span class="line">    <span class="keyword">DECLARE</span> cnt <span class="built_in">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">into</span> cnt <span class="keyword">from</span> test_tbl;</span><br><span class="line">    <span class="keyword">select</span> cnt;</span><br><span class="line"> </span><br><span class="line"><span class="comment">--  方式 2</span></span><br><span class="line">    <span class="keyword">set</span> @cnt = (<span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> test_tbl);</span><br><span class="line">    <span class="keyword">select</span> @cnt;</span><br><span class="line"></span><br><span class="line"><span class="comment">--  方式 3</span></span><br><span class="line">    <span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">into</span> @cnt1 <span class="keyword">from</span> test_tbl;</span><br><span class="line">    <span class="keyword">select</span> @cnt1;</span><br><span class="line"></span><br><span class="line"><span class="comment">--  多个列的情况下似乎只能用 into 方式</span></span><br><span class="line">    <span class="keyword">select</span> <span class="keyword">max</span>(<span class="keyword">status</span>), <span class="keyword">avg</span>(<span class="keyword">status</span>) <span class="keyword">into</span> @<span class="keyword">max</span>, @<span class="keyword">avg</span> <span class="keyword">from</span> test_tbl;</span><br><span class="line">    <span class="keyword">select</span> @<span class="keyword">max</span>, @<span class="keyword">avg</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">delimiter ;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">call</span> pro_test_3();</span><br></pre></td></tr></table></figure></div></li><li><p>👉 <a href="https://www.cnblogs.com/qdhxhz/category/1222307.html" target="_blank" rel="noopener">MySQL（7）—存储过程</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Scene&quot;&gt;&lt;a href=&quot;#Scene&quot; class=&quot;headerlink&quot; title=&quot;Scene&quot;&gt;&lt;/a&gt;Scene&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;有这样一个场景，需要把一个表中的某个字段内的字符串分割成列&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;roleCode&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;users&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;4dc51344e6674c03ae0a176d3d0ae14e_20865&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;xb,guojinyu,jiangyuan,ly_bmcc,wwm,lck,wusuihua&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;4dc51344e6674c03ae0a176d3d0ae14e_20866&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;zlj,mashaomeng&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;4dc51344e6674c03ae0a176d3d0ae14e_20867&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;tianye2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;4dc51344e6674c03ae0a176d3d0ae14e_20869&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;wangyinju,liu_yan&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;就是把上面的表格拆分成下面的样子&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;roleCode&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;users&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;4dc51344e6674c03ae0a176d3d0ae14e_20865&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;xb&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;4dc51344e6674c03ae0a176d3d0ae14e_20865&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;guojinyu&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;4dc51344e6674c03ae0a176d3d0ae14e_20865&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;jiangyuan&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;4dc51344e6674c03ae0a176d3d0ae14e_20865&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;ly_bmcc&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;4dc51344e6674c03ae0a176d3d0ae14e_20865&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;wwm&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;4dc51344e6674c03ae0a176d3d0ae14e_20865&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;lck&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;4dc51344e6674c03ae0a176d3d0ae14e_20865&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;wusuihua&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;4dc51344e6674c03ae0a176d3d0ae14e_20866&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;zlj&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;4dc51344e6674c03ae0a176d3d0ae14e_20866&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;mashaomeng&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;4dc51344e6674c03ae0a176d3d0ae14e_20867&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;tianye2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;4dc51344e6674c03ae0a176d3d0ae14e_20869&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;wangyinju&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;4dc51344e6674c03ae0a176d3d0ae14e_20869&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;liu_yan&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
    
    
      <category term="MySQL" scheme="http://www.orekiyuta.cn/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL Sync to Mariadb</title>
    <link href="http://www.orekiyuta.cn/archives/mysqlSyncToMariadb/"/>
    <id>http://www.orekiyuta.cn/archives/mysqlSyncToMariadb/</id>
    <published>2021-01-20T12:43:04.000Z</published>
    <updated>2021-01-20T13:08:24.882Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Unkown-collation-’utf8mb4-0900-ai-ci’"><a href="#Unkown-collation-’utf8mb4-0900-ai-ci’" class="headerlink" title="Unkown collation:’utf8mb4_0900_ai_ci’"></a>Unkown collation:’utf8mb4_0900_ai_ci’</h2><ul><li>把 MySQL 数据同步到 Mariadb 出现排序规则不一致</li><li>MySQL 数据库默认字符集和排序规则<br><img src="/images/mysqlSyncToMariadb/Snipaste_2021-01-20_21-07-07.png" alt></li><li>MySQL 转储的 SQL 文件默认<code>DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci</code></li><li>Mariadb 数据库默认字符集和排序规则<br><img src="/images/mysqlSyncToMariadb/Snipaste_2021-01-20_20-47-17.png" alt></li><li>Mariadb 转储的 SQL 文件默认<code>DEFAULT CHARSET=utf8mb4;</code></li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ul><li>在 Mariadb 中排序规则没有 utf8mb4_0900_ai_ci </li><li>解决方法是 ：转储 MySQL 数据，然后把 SQL 文件里的 <code>COLLATE=utf8mb4_0900_ai_ci</code>全部替换成 <code>COLLATE=utf8mb4_general_ci</code> 即可<ul><li>或者是把 SQL 文件里的 <code>COLLATE=utf8mb4_0900_ai_ci</code> 去掉</li></ul></li><li>总的来说就是把设置配成一致就可以了</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Unkown-collation-’utf8mb4-0900-ai-ci’&quot;&gt;&lt;a href=&quot;#Unkown-collation-’utf8mb4-0900-ai-ci’&quot; class=&quot;headerlink&quot; title=&quot;Unkown collation:’
      
    
    </summary>
    
    
    
      <category term="MySQL" scheme="http://www.orekiyuta.cn/tags/MySQL/"/>
    
      <category term="Mariadb" scheme="http://www.orekiyuta.cn/tags/Mariadb/"/>
    
  </entry>
  
  <entry>
    <title>Local-anywhere and CORS</title>
    <link href="http://www.orekiyuta.cn/archives/localAnywhereAndCORS/"/>
    <id>http://www.orekiyuta.cn/archives/localAnywhereAndCORS/</id>
    <published>2021-01-19T17:36:34.000Z</published>
    <updated>2021-01-19T17:43:24.654Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Scene"><a href="#Scene" class="headerlink" title="Scene"></a>Scene</h2><ul><li>打开一个 html 加载了本地目录下的文件居然跨域了，原因在于本地文件的使用的是 file 协议</li><li>CORS 策略只支持这些协议：http、data、 chrome、chrome-extension 以及 https</li><li>这样的话，可以直接转个协议就好了</li></ul><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ul><li>起个协议服务</li><li><code>npm i anywhere -g</code> 安装 anywhere</li><li><code>anywhere -h</code> 在文件目录启动服务</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Scene&quot;&gt;&lt;a href=&quot;#Scene&quot; class=&quot;headerlink&quot; title=&quot;Scene&quot;&gt;&lt;/a&gt;Scene&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;打开一个 html 加载了本地目录下的文件居然跨域了，原因在于本地文件的使用的是 file 协议&lt;/li
      
    
    </summary>
    
    
    
      <category term="CORS" scheme="http://www.orekiyuta.cn/tags/CORS/"/>
    
  </entry>
  
  <entry>
    <title>Reptiles and Raspberries</title>
    <link href="http://www.orekiyuta.cn/archives/reptilesAndRaspberries/"/>
    <id>http://www.orekiyuta.cn/archives/reptilesAndRaspberries/</id>
    <published>2021-01-08T13:49:18.000Z</published>
    <updated>2021-01-10T18:16:44.067Z</updated>
    
    <content type="html"><![CDATA[<h2 id="分析接口数据结构"><a href="#分析接口数据结构" class="headerlink" title="分析接口数据结构"></a>分析接口数据结构</h2><ul><li>找到数据的接口信息之后，请求获取数据并逐层分析数据结构</li><li>然后提取需要的数据</li><li>最后封装成方法<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PY"><figure class="iseeu highlight /py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_tencent_virus_data</span><span class="params">()</span>:</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit'</span></span><br><span class="line">                      <span class="string">'/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safar'</span></span><br><span class="line">                      <span class="string">'i/537.36'</span>,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># https://news.qq.com/zt2020/page/feiyan.htm#/</span></span><br><span class="line">    url = <span class="string">"https://view.inews.qq.com/g2/getOnsInfo?name=disease_h5"</span></span><br><span class="line">    res = requests.get(url, headers=headers)</span><br><span class="line">    res.encoding = <span class="string">"utf-8"</span></span><br><span class="line">    getSource = json.loads(res.text)</span><br><span class="line">    sourceData = json.loads(getSource[<span class="string">"data"</span>])</span><br><span class="line"></span><br><span class="line">    lastUpdateTime = sourceData[<span class="string">"lastUpdateTime"</span>]  <span class="comment"># 最后更新时间</span></span><br><span class="line">    chinaTotal = sourceData[<span class="string">"chinaTotal"</span>]  <span class="comment"># 总情况</span></span><br><span class="line">    chinaAdd = sourceData[<span class="string">"chinaAdd"</span>]  <span class="comment"># 总确诊</span></span><br><span class="line">    areaTree = sourceData[<span class="string">"areaTree"</span>]  <span class="comment"># 国家</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 国家列表,中国</span></span><br><span class="line">    name = areaTree[<span class="number">0</span>][<span class="string">"name"</span>]  <span class="comment"># 中国</span></span><br><span class="line">    today = areaTree[<span class="number">0</span>][<span class="string">"today"</span>]  <span class="comment"># 今天新增确诊</span></span><br><span class="line">    total = areaTree[<span class="number">0</span>][<span class="string">"total"</span>]  <span class="comment"># 今日总情况</span></span><br><span class="line">    provinces = areaTree[<span class="number">0</span>][<span class="string">"children"</span>]  <span class="comment"># 34个省份</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># print(name)</span></span><br><span class="line">    <span class="comment"># print(today)</span></span><br><span class="line">    <span class="comment"># print(total)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 今日确诊，目前确诊，总确诊，总死亡数，总死亡概率，总康复数，总康复概率</span></span><br><span class="line">    daily_data = [name, today[<span class="string">"confirm"</span>], total[<span class="string">"nowConfirm"</span>], total[<span class="string">"confirm"</span>], total[<span class="string">"dead"</span>], total[<span class="string">"deadRate"</span>],</span><br><span class="line">                  total[<span class="string">"heal"</span>], total[<span class="string">"healRate"</span>]]</span><br><span class="line"></span><br><span class="line">    today_details = []</span><br><span class="line">    <span class="keyword">for</span> province <span class="keyword">in</span> provinces:</span><br><span class="line">        <span class="comment"># print(province["name"])  # 省名</span></span><br><span class="line">        <span class="comment"># print(province["today"])</span></span><br><span class="line">        <span class="comment"># print(province["total"])</span></span><br><span class="line">        province_name_ = province[<span class="string">"name"</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 省所属城市</span></span><br><span class="line">        <span class="keyword">for</span> city <span class="keyword">in</span> province[<span class="string">"children"</span>]:</span><br><span class="line">            city_name_ = city[<span class="string">"name"</span>]</span><br><span class="line">            city_today_confirm_ = city[<span class="string">"today"</span>][<span class="string">"confirm"</span>]  <span class="comment"># 该城市今日确诊</span></span><br><span class="line">            city_total_confirm_ = city[<span class="string">"total"</span>][<span class="string">"confirm"</span>]  <span class="comment"># 该城市总确诊</span></span><br><span class="line">            city_total_heal_ = city[<span class="string">"total"</span>][<span class="string">"heal"</span>]  <span class="comment"># 该城市总康复</span></span><br><span class="line">            city_total_heal_rate_ = city[<span class="string">"total"</span>][<span class="string">"healRate"</span>]  <span class="comment"># 该城市总康复概率</span></span><br><span class="line">            city_total_dead_ = city[<span class="string">"total"</span>][<span class="string">"dead"</span>]  <span class="comment"># 该城市总死亡</span></span><br><span class="line">            city_total_dead_rate_ = city[<span class="string">"total"</span>][<span class="string">"deadRate"</span>]  <span class="comment"># 该城市总死亡概率</span></span><br><span class="line">            today_details.append([lastUpdateTime, province_name_, city_name_, city_today_confirm_,</span><br><span class="line">                                  city_total_confirm_, city_total_heal_, city_total_heal_rate_,</span><br><span class="line">                                  city_total_dead_, city_total_dead_rate_</span><br><span class="line">                                  ])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> today_details, daily_data</span><br></pre></td></tr></table></figure></div></li></ul><a id="more"></a><h2 id="数据库连接"><a href="#数据库连接" class="headerlink" title="数据库连接"></a>数据库连接</h2><ul><li>这里主要在于建立数据库连接，并取得游标去操作数据</li><li>连接数据库操作完毕之后需要及时关闭连接<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PY"><figure class="iseeu highlight /py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mariadb_conn</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        conn = mariadb.connect(</span><br><span class="line">            user=<span class="string">"root"</span>,</span><br><span class="line">            password=<span class="string">"raspberry"</span>,</span><br><span class="line">            host=<span class="string">"192.168.137.47"</span>,</span><br><span class="line">            port=<span class="number">3306</span>,</span><br><span class="line">            database=<span class="string">"virus"</span></span><br><span class="line">        )</span><br><span class="line">        cursor = conn.cursor()</span><br><span class="line">        <span class="keyword">return</span> conn, cursor</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> mariadb.Error <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="string">f"Error connecting to MariaDB Platform: <span class="subst">&#123;e&#125;</span>"</span>)</span><br><span class="line">        sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mariadb_conn_close</span><span class="params">(conn, cursor)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> cursor:</span><br><span class="line">        cursor.close()</span><br><span class="line">    <span class="keyword">if</span> conn:</span><br><span class="line">        conn.close()</span><br></pre></td></tr></table></figure></div></li></ul><h2 id="获取数据并持久化"><a href="#获取数据并持久化" class="headerlink" title="获取数据并持久化"></a>获取数据并持久化</h2><ul><li>这里需要注意的是游标的操作 <code>cursor.execute()</code></li><li>如果是查询语句的话，游标执行之后就能得到返回的数据</li><li>其他的语句需要提交事务<code>conn.commit()</code>才能得到返回的数据<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PY"><figure class="iseeu highlight /py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 更新每日的详情数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">update_virus_data</span><span class="params">()</span>:</span></span><br><span class="line">    cursor = <span class="literal">None</span></span><br><span class="line">    conn = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        virus_data = get_tencent_virus_data()[<span class="number">0</span>]</span><br><span class="line">        <span class="comment"># conn, cursor = mariadb_conn("root", "raspberry", "192.168.137.165", 3306, "virus")</span></span><br><span class="line">        conn, cursor = mariadb_conn()</span><br><span class="line">        setDataTime = time.strftime(<span class="string">'%Y-%m-%d %H:%M:%S'</span>, time.localtime(time.time()))</span><br><span class="line">        sql_insert_data = <span class="string">"insert into tencent_virus_data(lastUpdateTime,province_name_,"</span> \</span><br><span class="line">                          <span class="string">"city_name_,city_today_confirm_,city_total_confirm_,"</span> \</span><br><span class="line">                          <span class="string">"city_total_heal_,city_total_heal_rate_,"</span> \</span><br><span class="line">                          <span class="string">"city_total_dead_,city_total_dead_rate_,"</span> \</span><br><span class="line">                          <span class="string">"setDataTime"</span><span class="string">") values (%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 取数据库最后一个记录的时间字段</span></span><br><span class="line">        sql_lastTime = <span class="string">"select lastUpdateTime from tencent_virus_data order by id desc limit 1"</span></span><br><span class="line">        cursor.execute(sql_lastTime)</span><br><span class="line">        lastUpdateTime = cursor.fetchone()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 第一次初始化数据</span></span><br><span class="line">        <span class="keyword">if</span> lastUpdateTime <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            print(<span class="string">f"<span class="subst">&#123;time.asctime()&#125;</span>    ---&gt;    滴滴！初始化最初的数据！"</span>)</span><br><span class="line">            <span class="keyword">for</span> item <span class="keyword">in</span> virus_data:</span><br><span class="line">                item.append(setDataTime)</span><br><span class="line">                print(item)</span><br><span class="line">                cursor.execute(sql_insert_data, item)</span><br><span class="line">            conn.commit()</span><br><span class="line">            print(<span class="string">f"<span class="subst">&#123;time.asctime()&#125;</span>    ---&gt;    嗒嗒！初始化数据完毕！"</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 非第一次更新数据</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># virus_data[0][0] 拿第一条数据的时间字段,因为每条数据时间都是一样的</span></span><br><span class="line">            dataNowTime = datetime.strptime(virus_data[<span class="number">0</span>][<span class="number">0</span>], <span class="string">'%Y-%m-%d %H:%M:%S'</span>)</span><br><span class="line">            <span class="comment"># 数据库最新记录时间 与 当前请求的数据时间对比，判断是否更新数据</span></span><br><span class="line">            <span class="keyword">if</span> dataNowTime &gt; lastUpdateTime[<span class="number">0</span>]:</span><br><span class="line">                print(<span class="string">f"<span class="subst">&#123;time.asctime()&#125;</span>    ---&gt;    滴滴！开始更新最新数据！"</span>)</span><br><span class="line">                <span class="keyword">for</span> item <span class="keyword">in</span> virus_data:</span><br><span class="line">                    item.append(setDataTime)</span><br><span class="line">                    cursor.execute(sql_insert_data, item)</span><br><span class="line">                conn.commit()</span><br><span class="line">                print(<span class="string">f"<span class="subst">&#123;time.asctime()&#125;</span>    ---&gt;    嗒嗒！更新最新数据完毕！"</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">f"<span class="subst">&#123;time.asctime()&#125;</span>    ---&gt;    嗯！已是最新数据！"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        traceback.print_exc()</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        mariadb_conn_close(conn, cursor)</span><br></pre></td></tr></table></figure></div></li></ul><h2 id="从页面抓取数据"><a href="#从页面抓取数据" class="headerlink" title="从页面抓取数据"></a>从页面抓取数据</h2><h3 id="一般的页面，直接请求解析获取即可"><a href="#一般的页面，直接请求解析获取即可" class="headerlink" title="一般的页面，直接请求解析获取即可"></a>一般的页面，直接请求解析获取即可</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PY"><figure class="iseeu highlight /py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">baidu_hotPoint</span><span class="params">()</span>:</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit'</span></span><br><span class="line">                      <span class="string">'/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safar'</span></span><br><span class="line">                      <span class="string">'i/537.36'</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    url = <span class="string">"http://top.baidu.com/buzz?b=1&amp;fr=topindex"</span></span><br><span class="line"></span><br><span class="line">    res = requests.get(url, headers=headers)</span><br><span class="line">    res.encoding = <span class="string">"gb2312"</span></span><br><span class="line">    html = res.text</span><br><span class="line">    soup = BeautifulSoup(html, <span class="string">"lxml"</span>)</span><br><span class="line">    titles = soup.find_all(name=<span class="string">"a"</span>, attrs=&#123;<span class="string">"class"</span>: <span class="string">"list-title"</span>&#125;)</span><br><span class="line">    content = [title.text <span class="keyword">for</span> title <span class="keyword">in</span> titles]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> content</span><br></pre></td></tr></table></figure></div><h3 id="如果页面用的是-JS-加载的话，可以使用-selenium-模拟人工获取"><a href="#如果页面用的是-JS-加载的话，可以使用-selenium-模拟人工获取" class="headerlink" title="如果页面用的是 JS 加载的话，可以使用 selenium 模拟人工获取"></a>如果页面用的是 JS 加载的话，可以使用 selenium 模拟人工获取</h3><ul><li>在这里需要浏览器和浏览器驱动配合</li><li>获得和 chrome 浏览器版本一致的 chromedriver 驱动</li><li>👉 <a href="https://npm.taobao.org/mirrors/chromedriver/" target="_blank" rel="noopener">https://npm.taobao.org/mirrors/chromedriver/</a><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PY"><figure class="iseeu highlight /py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sogou_hotSearch</span><span class="params">()</span>:</span></span><br><span class="line">    headers = <span class="string">'user-agent="MQQBrowser/26 Mozilla/5.0 (Linux; U; Android 2.3.7; zh-cn; MB200 Build/GRJ22; '</span> \</span><br><span class="line">              <span class="string">'CyanogenMod-7) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1" '</span></span><br><span class="line"></span><br><span class="line">    url = <span class="string">"https://sa.sogou.com/new-weball/page/sgs/epidemic?type_page=VR"</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">from</span> selenium.webdriver.chrome.options <span class="keyword">import</span> Options</span><br><span class="line"></span><br><span class="line">    options = ChromeOptions()</span><br><span class="line">    options.add_argument(headers)</span><br><span class="line">    options.add_argument(<span class="string">"--headless"</span>)  <span class="comment"># 隐藏浏览器</span></span><br><span class="line">    options.add_argument(<span class="string">"--no-sandbox"</span>)  <span class="comment"># linux 需要禁用这个</span></span><br><span class="line">    options.add_argument(<span class="string">"--disable-gpu"</span>)</span><br><span class="line">    options.add_argument(<span class="string">'blink-settings=imagesEnabled=false'</span>)  <span class="comment"># 不加载图片资源</span></span><br><span class="line">    chrome = Chrome(executable_path=<span class="string">"./chromedriver.exe"</span>, options=options)  <span class="comment"># 路径加载驱动</span></span><br><span class="line">    <span class="comment"># chrome = Chrome(options=options)</span></span><br><span class="line">    chrome.get(url)</span><br><span class="line">    el_lis = chrome.find_elements_by_xpath(<span class="string">'//*[@id="no_active_pane"]/div/div/div[2]/ul/li'</span>)</span><br><span class="line">    content = [el_li.text <span class="keyword">for</span> el_li <span class="keyword">in</span> el_lis]</span><br><span class="line">    chrome.close()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> content</span><br></pre></td></tr></table></figure></div></li></ul><h2 id="建立-Web-服务"><a href="#建立-Web-服务" class="headerlink" title="建立 Web 服务"></a>建立 Web 服务</h2><h3 id="数据交互"><a href="#数据交互" class="headerlink" title="数据交互"></a>数据交互</h3><ul><li>这里使用 flask 建立简单的请求服务</li><li><p>在服务端返回页面需要用到 render_template</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PY"><figure class="iseeu highlight /py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> render_template</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/', methods=["get", "post"])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"index.html"</span>)</span><br></pre></td></tr></table></figure></div></li><li><p>接着在页面发送 ajax 请求对应的路由即可</p></li></ul><h3 id="建立工具类来处理数据"><a href="#建立工具类来处理数据" class="headerlink" title="建立工具类来处理数据"></a>建立工具类来处理数据</h3><ul><li>在项目根路径建一个 xxx.py 来专门处理数据<ul><li>数据库连接方法</li><li>查询类方法</li><li>每个数据接口方法<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PY"><figure class="iseeu highlight /py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_time</span><span class="params">()</span>:</span></span><br><span class="line">    time_str = time.strftime(<span class="string">"%Y&#123;&#125;%m&#123;&#125;%d&#123;&#125; %X"</span>)</span><br><span class="line">    <span class="keyword">return</span> time_str.format(<span class="string">"年"</span>, <span class="string">"月"</span>, <span class="string">"日"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mariadb_conn</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        conn = mariadb.connect(</span><br><span class="line">            user=<span class="string">"root"</span>,</span><br><span class="line">            password=<span class="string">"raspberry"</span>,</span><br><span class="line">            host=<span class="string">"192.168.137.47"</span>,</span><br><span class="line">            port=<span class="number">3306</span>,</span><br><span class="line">            database=<span class="string">"virus"</span></span><br><span class="line">        )</span><br><span class="line">        cursor = conn.cursor()</span><br><span class="line">        <span class="keyword">return</span> conn, cursor</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> mariadb.Error <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="string">f"Error connecting to MariaDB Platform: <span class="subst">&#123;e&#125;</span>"</span>)</span><br><span class="line">        sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mariadb_conn_close</span><span class="params">(conn, cursor)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> cursor:</span><br><span class="line">        cursor.close()</span><br><span class="line">    <span class="keyword">if</span> conn:</span><br><span class="line">        conn.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">query</span><span class="params">(sql, *args)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    :param sql:</span></span><br><span class="line"><span class="string">    :param args</span></span><br><span class="line"><span class="string">    :return 返回查询结果 ((),())</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    conn, cursor = mariadb_conn()</span><br><span class="line">    cursor.execute(sql, args)</span><br><span class="line">    res = cursor.fetchall()</span><br><span class="line">    mariadb_conn_close(conn, cursor)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_daily_data</span><span class="params">()</span>:</span></span><br><span class="line">    sql = <span class="string">"select today_confirm,total_nowConfirm,"</span> \</span><br><span class="line">          <span class="string">"total_confirm,total_dead,total_deadRate,"</span> \</span><br><span class="line">          <span class="string">"total_heal,total_healRate from daily_data "</span> \</span><br><span class="line">          <span class="string">"where setDataTime=(select setDataTime from daily_data "</span> \</span><br><span class="line">          <span class="string">"order by setDataTime desc limit 1)"</span></span><br><span class="line">    res = query(sql)</span><br><span class="line">    <span class="keyword">return</span> res[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 地图整体数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_area_data</span><span class="params">()</span>:</span></span><br><span class="line">    sql = <span class="string">"select province_name_,sum(city_total_confirm_) "</span> \</span><br><span class="line">          <span class="string">"from tencent_virus_data where lastUpdateTime=("</span> \</span><br><span class="line">          <span class="string">"select lastUpdateTime from tencent_virus_data "</span> \</span><br><span class="line">          <span class="string">"order by lastUpdateTime desc limit 1) "</span> \</span><br><span class="line">          <span class="string">"group by province_name_"</span></span><br><span class="line">    res = query(sql)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 总趋势最近十天</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_GeneralTrend_data</span><span class="params">()</span>:</span></span><br><span class="line">    sql = <span class="string">"select today_confirm,total_nowConfirm,total_confirm,"</span> \</span><br><span class="line">          <span class="string">"total_dead,total_heal,setDataTime from daily_data "</span> \</span><br><span class="line">          <span class="string">"order by  id desc limit 10"</span></span><br><span class="line">    res = query(sql)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"><span class="comment"># get_GeneralTrend_data()[1:] # 从第二条数据开始取</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 今日有新增确诊的省市</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_todayNewConfrim_data</span><span class="params">()</span>:</span></span><br><span class="line">    sql = <span class="string">"select CONCAT(province_name_,'-',city_name_) as province_city,"</span> \</span><br><span class="line">          <span class="string">"city_today_confirm_,lastUpdateTime from tencent_virus_data "</span> \</span><br><span class="line">          <span class="string">"where city_today_confirm_ &gt;0 and lastUpdateTime=("</span> \</span><br><span class="line">          <span class="string">"select lastUpdateTime from tencent_virus_data "</span> \</span><br><span class="line">          <span class="string">"ORDER BY lastUpdateTime desc limit 1 )"</span></span><br><span class="line"></span><br><span class="line">    res = query(sql)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="comment"># 目前各省市累计确诊数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_confrimUntilNow</span><span class="params">()</span>:</span></span><br><span class="line">    sql = <span class="string">"select province_name_,sum(city_total_confirm_),lastUpdateTime "</span> \</span><br><span class="line">          <span class="string">"from tencent_virus_data where lastUpdateTime = ( "</span> \</span><br><span class="line">          <span class="string">"select lastUpdateTime from tencent_virus_data "</span> \</span><br><span class="line">          <span class="string">"order by lastUpdateTime desc limit 1) "</span> \</span><br><span class="line">          <span class="string">"group by province_name_"</span></span><br><span class="line"></span><br><span class="line">    res = query(sql)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取最新50条热搜数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_hotPoint</span><span class="params">()</span>:</span></span><br><span class="line">    sql = <span class="string">"select content,setDataTime from  hotpoint order by id desc limit 50"</span></span><br><span class="line">    res = query(sql)</span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure></div></li></ul></li></ul><h3 id="建立路由调用工具类方法返回数据值"><a href="#建立路由调用工具类方法返回数据值" class="headerlink" title="建立路由调用工具类方法返回数据值"></a>建立路由调用工具类方法返回数据值</h3><ul><li>这里需要注意的是需要引入写好的工具类<ul><li><code>import xxx</code></li></ul></li><li>在这里得到工具类查询数据库得到的值，再做进一步处理返回给页面关注的数据结构<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PY"><figure class="iseeu highlight /py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route('/', methods=["get", "post"])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">"index.html"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route("/getTime")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_time</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> utils.get_time()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route("/getDailyData")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_daily_data</span><span class="params">()</span>:</span></span><br><span class="line">    data = utils.get_daily_data()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> jsonify(&#123;<span class="string">"today_confirm"</span>: data[<span class="number">0</span>],</span><br><span class="line">                    <span class="string">"total_nowConfirm"</span>: data[<span class="number">1</span>],</span><br><span class="line">                    <span class="string">"total_confirm"</span>: data[<span class="number">2</span>],</span><br><span class="line">                    <span class="string">"total_dead"</span>: data[<span class="number">3</span>],</span><br><span class="line">                    <span class="string">"total_deadRate"</span>: data[<span class="number">4</span>],</span><br><span class="line">                    <span class="string">"total_heal"</span>: data[<span class="number">5</span>],</span><br><span class="line">                    <span class="string">"total_healRate"</span>: data[<span class="number">6</span>]&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route("/getAreaData")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_area_data</span><span class="params">()</span>:</span></span><br><span class="line">    areaData = []</span><br><span class="line">    <span class="keyword">for</span> city <span class="keyword">in</span> utils.get_area_data():</span><br><span class="line">        areaData.append(&#123;<span class="string">"name"</span>: city[<span class="number">0</span>], <span class="string">"value"</span>: int(city[<span class="number">1</span>])&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> jsonify(&#123;<span class="string">"data"</span>: areaData&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route("/getGeneralTrend")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_generalTrend_data</span><span class="params">()</span>:</span></span><br><span class="line">    gT_data = utils.get_GeneralTrend_data()</span><br><span class="line">    today_confirm, total_nowConfirm, total_confirm = [], [], []</span><br><span class="line">    total_dead, total_heal, setDataTime = [], [], []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> a, b, c, d, e, f <span class="keyword">in</span> gT_data:</span><br><span class="line">        today_confirm.append(a)</span><br><span class="line">        total_nowConfirm.append(b)</span><br><span class="line">        total_confirm.append(c)</span><br><span class="line">        total_dead.append(d)</span><br><span class="line">        total_heal.append(e)</span><br><span class="line">        setDataTime.append(f.strftime(<span class="string">"%m-%d"</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># reverse() 没有返回值</span></span><br><span class="line">    today_confirm.reverse()</span><br><span class="line">    total_nowConfirm.reverse()</span><br><span class="line">    total_confirm.reverse()</span><br><span class="line">    total_dead.reverse()</span><br><span class="line">    total_heal.reverse()</span><br><span class="line">    setDataTime.reverse()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> jsonify(&#123;<span class="string">"today_confirm"</span>: today_confirm,</span><br><span class="line">                    <span class="string">"total_nowConfirm"</span>: total_nowConfirm,</span><br><span class="line">                    <span class="string">"total_confirm"</span>: total_confirm,</span><br><span class="line">                    <span class="string">"total_dead"</span>: total_dead,</span><br><span class="line">                    <span class="string">"total_heal"</span>: total_heal,</span><br><span class="line">                    <span class="string">"setDataTime"</span>: setDataTime&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route("/getTodayNewConfrim")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_todayNewConfrim_data</span><span class="params">()</span>:</span></span><br><span class="line">    tNC_data = utils.get_todayNewConfrim_data()</span><br><span class="line">    province_city, city_today_confirm_ = [], []</span><br><span class="line">    setDateTime = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> tNC_data:</span><br><span class="line">        province_city.append(i[<span class="number">0</span>])</span><br><span class="line">        city_today_confirm_.append(i[<span class="number">1</span>])</span><br><span class="line">        setDateTime = i[<span class="number">2</span>].strftime(<span class="string">"%Y/%m/%d"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> jsonify(&#123;<span class="string">"setDateTime"</span>: setDateTime,</span><br><span class="line">                    <span class="string">"city_today_confirm_"</span>: city_today_confirm_,</span><br><span class="line">                    <span class="string">"province_city"</span>: province_city&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route("/getConfrimUntilNow")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_confrimUntilNow_data</span><span class="params">()</span>:</span></span><br><span class="line">    cUN_data = utils.get_confrimUntilNow()</span><br><span class="line">    provinces = []</span><br><span class="line">    setDateTime = <span class="string">""</span></span><br><span class="line">    provinceConfrim = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> cUN_data:</span><br><span class="line">        provinces.append(i[<span class="number">0</span>])</span><br><span class="line">        setDateTime = i[<span class="number">2</span>].strftime(<span class="string">"%Y/%m/%d"</span>)</span><br><span class="line">        pC = int(decimal.Decimal(i[<span class="number">1</span>]).quantize(decimal.Decimal(<span class="string">'0'</span>)))  <span class="comment"># 把 Decimal 转换成可用于 json 序列化的 int 类型</span></span><br><span class="line">        provinceConfrim.append(&#123;<span class="string">"name"</span>: i[<span class="number">0</span>], <span class="string">"value"</span>: pC&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> jsonify(&#123;<span class="string">"provinces"</span>: provinces,</span><br><span class="line">                    <span class="string">"provinceConfrim"</span>: provinceConfrim,</span><br><span class="line">                    <span class="string">"setDateTime"</span>: setDateTime&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route("/getHotPoint")</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_hotPoint_data</span><span class="params">()</span>:</span></span><br><span class="line">    hP_data = utils.get_hotPoint()</span><br><span class="line">    keywords = []</span><br><span class="line">    setDataTime = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> hP_data:</span><br><span class="line">        content = i[<span class="number">0</span>]</span><br><span class="line">        keyword_weight = extract_tags(content, topK=<span class="number">20</span>, withWeight=<span class="literal">True</span>)</span><br><span class="line">        setDataTime = i[<span class="number">1</span>].strftime(<span class="string">"%Y/%m/%d"</span>)</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> keyword_weight:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> j[<span class="number">0</span>].isdigit():  <span class="comment"># 如果是数字就不加入数组</span></span><br><span class="line">                weight = <span class="number">20</span> * round(j[<span class="number">1</span>], <span class="number">1</span>)</span><br><span class="line">                keywords.append(&#123;<span class="string">"name"</span>: j[<span class="number">0</span>], <span class="string">"value"</span>: str(weight)&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> jsonify(&#123;<span class="string">"keywords"</span>: keywords,</span><br><span class="line">                    <span class="string">"setDataTime"</span>: setDataTime&#125;)</span><br></pre></td></tr></table></figure></div></li></ul><h3 id="页面请求数据并对接展示"><a href="#页面请求数据并对接展示" class="headerlink" title="页面请求数据并对接展示"></a>页面请求数据并对接展示</h3><ul><li>这里展示数据用的 Echarts </li><li>Echarts 的话，需要关注它的 options 内需要传入的数据结构</li><li><p>然后在 ajax 请求获得数据后，赋给对应的位置即可</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JS"><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getAreaData</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url: <span class="string">"/getAreaData"</span>,</span><br><span class="line">        success:<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">            center_option.series[<span class="number">0</span>].data=data.data;</span><br><span class="line">            center.setOption(center_option);</span><br><span class="line">        &#125;,</span><br><span class="line">        error:<span class="function"><span class="keyword">function</span> (<span class="params">x</span>) </span>&#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></li><li><p>使用 Echarts 的 wordCloud 需要注意的是 5.0 版本不支持</p></li><li>需要切换 5.0 之前的版本</li><li>这样的话，可以在项目中引入两个不同版本的 Echarts.js </li><li>然后打开其中一个，把内部的 echarts 对象全部修改<ul><li>比如需要单独把 4.0 版本的做处理，就打开该 js 文件，将全部默认的 echarts 对象修改成 echarts4</li><li>区分开不同版本</li></ul></li><li>最后获取对象的时候使用 echarts4 即可</li></ul><h2 id="树莓派部署测试"><a href="#树莓派部署测试" class="headerlink" title="树莓派部署测试"></a>树莓派部署测试</h2><h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><ul><li>配置好基本环境</li><li>然后直接通过 python 命令启动 flask 即可</li><li><p>需要对外访问就需要设置一下 host</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PY"><figure class="iseeu highlight /py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(host=<span class="string">"0.0.0.0"</span>)</span><br></pre></td></tr></table></figure></div></li><li><p>浏览器输入 ip:5000 即可看到服务</p></li></ul><h3 id="Nginx-反代"><a href="#Nginx-反代" class="headerlink" title="Nginx 反代"></a>Nginx 反代</h3><ul><li>配置好 nginx ,将服务的地址代理到 nginx</li><li>找到配置文件，我的树莓派默认的 nginx 配置文件是 <code>/etc/nginx/nginx.conf</code></li><li><p>主要配置</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SHELL"><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">    upstream hgo &#123;</span><br><span class="line"></span><br><span class="line">        server 127.0.0.1:5000 weight=10;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       8080 default_server;</span><br><span class="line">        listen       [::]:8080 default_server;</span><br><span class="line">        server_name  _;</span><br><span class="line">        root         /usr/share/nginx/html;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">         Load configuration files <span class="keyword">for</span> the default server block.</span></span><br><span class="line"><span class="meta">#</span><span class="bash">         include /etc/nginx/default.d/*.conf;</span></span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">                proxy_pass http://hgo;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page 404 /404.html;</span><br><span class="line">        location = /404.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page 500 502 503 504 /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div></li><li><p>整个配置文件</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SHELL"><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> For more information on configuration, see:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   * Official English Documentation: http://nginx.org/en/docs/</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   * Official Russian Documentation: http://nginx.org/ru/docs/</span></span><br><span class="line"></span><br><span class="line">user nginx;</span><br><span class="line">worker_processes auto;</span><br><span class="line">error_log /var/log/nginx/error.log;</span><br><span class="line">pid /run/nginx.pid;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.</span></span><br><span class="line">include /usr/share/nginx/modules/*.conf;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections 1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '</span><br><span class="line">                      '$status $body_bytes_sent "$http_referer" '</span><br><span class="line">                      '"$http_user_agent" "$http_x_forwarded_for"';</span><br><span class="line"></span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile            on;</span><br><span class="line">    tcp_nopush          on;</span><br><span class="line">    tcp_nodelay         on;</span><br><span class="line">    keepalive_timeout   65;</span><br><span class="line">    types_hash_max_size 2048;</span><br><span class="line"></span><br><span class="line">    include             /etc/nginx/mime.types;</span><br><span class="line">    default_type        application/octet-stream;</span><br><span class="line"></span><br><span class="line">    # Load modular configuration files from the /etc/nginx/conf.d directory.</span><br><span class="line">    # See http://nginx.org/en/docs/ngx_core_module.html#include</span><br><span class="line">    # for more information.</span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line"></span><br><span class="line">    upstream hgo &#123;</span><br><span class="line"></span><br><span class="line">        server 127.0.0.1:5000 weight=10;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       8080 default_server;</span><br><span class="line">        listen       [::]:8080 default_server;</span><br><span class="line">        server_name  _;</span><br><span class="line">        root         /usr/share/nginx/html;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">         Load configuration files <span class="keyword">for</span> the default server block.</span></span><br><span class="line"><span class="meta">#</span><span class="bash">         include /etc/nginx/default.d/*.conf;</span></span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">                proxy_pass http://hgo;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page 404 /404.html;</span><br><span class="line">        location = /404.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page 500 502 503 504 /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Settings <span class="keyword">for</span> a TLS enabled server.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">    server &#123;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">        listen       443 ssl http2 default_server;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">        listen       [::]:443 ssl http2 default_server;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">        server_name  _;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">        root         /usr/share/nginx/html;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">        ssl_certificate <span class="string">"/etc/pki/nginx/server.crt"</span>;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">        ssl_certificate_key <span class="string">"/etc/pki/nginx/private/server.key"</span>;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">        ssl_session_cache shared:SSL:1m;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">        ssl_session_timeout  10m;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">        ssl_ciphers HIGH:!aNULL:!MD5;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">        ssl_prefer_server_ciphers on;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">        <span class="comment"># Load configuration files for the default server block.</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">        include /etc/nginx/default.d/*.conf;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">        location / &#123;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">        &#125;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">        error_page 404 /404.html;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">        location = /404.html &#123;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">        &#125;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">        error_page 500 502 503 504 /50x.html;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">        location = /50x.html &#123;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">        &#125;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">    &#125;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></li><li><p>这样一来就可通过 nginx 代理出来的地址去访问服务器内部的地址了</p></li></ul><h3 id="使用-WSGI-服务"><a href="#使用-WSGI-服务" class="headerlink" title="使用 WSGI 服务"></a>使用 WSGI 服务</h3><ul><li>不建议直接用 python 命令去启动 flask </li><li>使用 gunicorn 将服务启动</li><li><code>gunicorn -b 127.0.0.1:5000 -D app:app</code></li><li><code>gunicorn -b 127.0.0.1:5000 -D 文件名:文件内部的 flask 对象名</code><ul><li><code>app = Flask(__name__)</code></li></ul></li></ul><h3 id="定时任务"><a href="#定时任务" class="headerlink" title="定时任务"></a>定时任务</h3><ul><li><code>crontab -l</code> 查看正在执行的定时任务</li><li><p><code>crontab -e</code> 编辑定时任务</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SHELL"><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Edit this file to introduce tasks to be run by cron.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Each task to run has to be defined through a single line</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> indicating with different fields when the task will be run</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> and what <span class="built_in">command</span> to run <span class="keyword">for</span> the task</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> To define the time you can provide concrete values <span class="keyword">for</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> minute (m), hour (h), day of month (dom), month (mon),</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> and day of week (dow) or use <span class="string">'*'</span> <span class="keyword">in</span> these fields (<span class="keyword">for</span> <span class="string">'any'</span>).</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Notice that tasks will be started based on the cron<span class="string">'s system</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> daemon<span class="string">'s notion of time and timezones.</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Output of the crontab <span class="built_in">jobs</span> (including errors) is sent through</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> email to the user the crontab file belongs to (unless redirected).</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For example, you can run a backup of all your user accounts</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> at 5 a.m every week with:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For more information see the manual pages of crontab(5) and cron(8)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> m h  dom mon dow   <span class="built_in">command</span></span></span><br><span class="line">45 * * * * python3 /home/pi/Documents/FkZi/gunicorn/virus.py dd &gt;&gt; /home/pi/Documents/log/dd 2&gt;&amp;1 &amp;</span><br><span class="line">45 * * * * python3 /home/pi/Documents/FkZi/gunicorn/virus.py vd &gt;&gt; /home/pi/Documents/log/vd 2&gt;&amp;1 &amp;</span><br><span class="line">45 * * * * python3 /home/pi/Documents/FkZi/gunicorn/virus.py hp &gt;&gt; /home/pi/Documents/log/hp 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure></div></li><li><p>定时任务执行成功可在对应的目录看到生成的日志文件 <code>/home/pi/Documents/log/dd</code></p></li><li>可看到对应的参数设置</li><li><code>virus.py hp</code> 这里是给 py 脚本传递参数</li><li>需要在文件内设置<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PY"><figure class="iseeu highlight /py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    length = len(sys.argv)</span><br><span class="line">    <span class="keyword">if</span> length == <span class="number">1</span>:</span><br><span class="line">        s = <span class="string">"""</span></span><br><span class="line"><span class="string">                请输入参数：</span></span><br><span class="line"><span class="string">                dd 更新详细数据</span></span><br><span class="line"><span class="string">                vd 更新汇总数据</span></span><br><span class="line"><span class="string">                hp 更新热点信息</span></span><br><span class="line"><span class="string">            """</span></span><br><span class="line">        print(s)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        order = sys.argv[<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">if</span> order == <span class="string">"vd"</span>:</span><br><span class="line">            update_virus_data()</span><br><span class="line">        <span class="keyword">elif</span> order == <span class="string">"dd"</span>:</span><br><span class="line">            update_daily_data()</span><br><span class="line">        <span class="keyword">elif</span> order == <span class="string">"hp"</span>:</span><br><span class="line">            update_hotPoint()</span><br></pre></td></tr></table></figure></div></li></ul><h2 id="生产服务器部署"><a href="#生产服务器部署" class="headerlink" title="生产服务器部署"></a>生产服务器部署</h2><ul><li>和在测试环境一样的步骤即可，这里生产的设备为 x86 的 Linux,OS 为 CentOS</li><li>先拉项目到设备里，把依赖安装好</li><li>将项目启动起来，配置 nginx 把端口代理出来</li><li>然后用 gunicorn 启动项目</li><li>设置定时任务</li><li>测试定时任务的脚本，把依赖装好，主要问题在 chromedirver<ul><li>👉 <a href="https://cloud.tencent.com/developer/article/1647905" target="_blank" rel="noopener">爬虫在linux下启动selenium-安装谷歌浏览器和驱动</a></li></ul></li><li>‘chromedriver’ executable needs to be in PATH. Please see <a href="https://sites.google.com/a/chromium.org/chromedriver/home" target="_blank" rel="noopener">https://sites.google.com/a/chromium.org/chromedriver/home</a><ul><li>如果出现这个问题，在代码里指定 chrome 对象驱动路径即可</li></ul></li></ul><h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><h3 id="print-cursor-execute-sql-为空"><a href="#print-cursor-execute-sql-为空" class="headerlink" title="print(cursor.execute(sql)) 为空"></a>print(cursor.execute(sql)) 为空</h3><ul><li>因为执行的语句未非查询语句，只有查询语句才有返回值</li><li>其他语句，如插入语句等，都需要提交事务 commit() 之后才能得到返回值 </li></ul><h3 id="在-selenium-中获取浏览器对象的时候，浏览器启动后一会就关闭了"><a href="#在-selenium-中获取浏览器对象的时候，浏览器启动后一会就关闭了" class="headerlink" title="在 selenium 中获取浏览器对象的时候，浏览器启动后一会就关闭了"></a>在 selenium 中获取浏览器对象的时候，浏览器启动后一会就关闭了</h3><ul><li>因为获取浏览器的对象在方法中，方法执行完浏览器自然就跟着关闭了</li><li>如果需要浏览器一直存在，把浏览器对象在方法外部，使其成为全局对象就可以了</li></ul><h3 id="树莓派-arm-架构安装的-nginx-默认配置缺失"><a href="#树莓派-arm-架构安装的-nginx-默认配置缺失" class="headerlink" title="树莓派 arm 架构安装的 nginx 默认配置缺失"></a>树莓派 arm 架构安装的 nginx 默认配置缺失</h3><ul><li>找到对的位置的配置文件</li><li>然后可以从其他已安装 nginx 的设备中把 配置文件 传过来</li></ul><h3 id="nginx-没有把服务代理出来"><a href="#nginx-没有把服务代理出来" class="headerlink" title="nginx 没有把服务代理出来"></a>nginx 没有把服务代理出来</h3><ul><li><p>可能需要配置一下组和用 root 来启动</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- `groupadd nginx` </span><br><span class="line">- `useradd -g nginx nginx -s /sbin/nologin`</span><br></pre></td></tr></table></figure></div></li><li><p>还需要关注当前的用户和 root 用户的包是否有 nginx</p></li></ul><h3 id="arm-架构的-chromedriver-版本"><a href="#arm-架构的-chromedriver-版本" class="headerlink" title="arm 架构的 chromedriver 版本"></a>arm 架构的 chromedriver 版本</h3><ul><li>首先是要确保 chrome 浏览器和 chromedriver 版本一致</li><li>arm 架构的 chromedriver 实在难找，树莓派 4b 里的 chromiun 的版本为 78<ul><li>arm 架构的 chromedriver 版本为 78 根本找不到 </li></ul></li><li>这样的话，我们可以换个思路，把浏览器和驱动都升级到最新即可</li><li><code>sudo apt-get install chromium-browser</code> 更新最新</li><li><code>chromium-browser --version</code></li><li>👉 <a href="https://mirrors.tuna.tsinghua.edu.cn/raspberrypi/pool/main/c/chromium-browser/" target="_blank" rel="noopener">mirrors.tuna.tsinghua.edu.cn</a></li><li><code>sudo apt-get install chromium-chromedriver</code> 下载浏览器驱动，默认下了最新的</li><li>👉 <a href="https://launchpad.net/+search?field.text=chromium-chromedriver+armhf" target="_blank" rel="noopener">Launchpad.net</a></li></ul><h3 id="mysql-和-mariadb-的-group-by-字段"><a href="#mysql-和-mariadb-的-group-by-字段" class="headerlink" title="mysql 和 mariadb 的 group by 字段"></a>mysql 和 mariadb 的 group by 字段</h3><ul><li>[Err] 1055 - Expression #3 of SELECT list is not in GROUP BY clause and contains nonaggregated column ‘virus.tencent_virus_data.lastUpdateTime’ which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by</li><li>👉<a href="https://www.cnblogs.com/Wayou/p/mysql_group_by_issue.html" target="_blank" rel="noopener">MySQL GROUP BY 的问题</a></li><li>👉<a href="https://cloud.tencent.com/developer/article/1533773" target="_blank" rel="noopener">sql_mode之only_full_group_by</a></li></ul><h3 id="mysql-和-mariadb-的-group-by-结果顺序"><a href="#mysql-和-mariadb-的-group-by-结果顺序" class="headerlink" title="mysql 和 mariadb 的 group by 结果顺序"></a>mysql 和 mariadb 的 group by 结果顺序</h3><ul><li>👉<a href="https://www.coder.work/article/508344" target="_blank" rel="noopener">mysql - MariaDB上的“GROUP BY”的行为与MySQL不同</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;分析接口数据结构&quot;&gt;&lt;a href=&quot;#分析接口数据结构&quot; class=&quot;headerlink&quot; title=&quot;分析接口数据结构&quot;&gt;&lt;/a&gt;分析接口数据结构&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;找到数据的接口信息之后，请求获取数据并逐层分析数据结构&lt;/li&gt;
&lt;li&gt;然后提取需要的数据&lt;/li&gt;
&lt;li&gt;最后封装成方法&lt;figure class=&quot;highlight py&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;get_tencent_virus_data&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    headers = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;User-Agent&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      &lt;span class=&quot;string&quot;&gt;&#39;/537.36 (KHTML, like Gecko) Chrome/53.0.2785.143 Safar&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      &lt;span class=&quot;string&quot;&gt;&#39;i/537.36&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# https://news.qq.com/zt2020/page/feiyan.htm#/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    url = &lt;span class=&quot;string&quot;&gt;&quot;https://view.inews.qq.com/g2/getOnsInfo?name=disease_h5&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    res = requests.get(url, headers=headers)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    res.encoding = &lt;span class=&quot;string&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getSource = json.loads(res.text)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sourceData = json.loads(getSource[&lt;span class=&quot;string&quot;&gt;&quot;data&quot;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    lastUpdateTime = sourceData[&lt;span class=&quot;string&quot;&gt;&quot;lastUpdateTime&quot;&lt;/span&gt;]  &lt;span class=&quot;comment&quot;&gt;# 最后更新时间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    chinaTotal = sourceData[&lt;span class=&quot;string&quot;&gt;&quot;chinaTotal&quot;&lt;/span&gt;]  &lt;span class=&quot;comment&quot;&gt;# 总情况&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    chinaAdd = sourceData[&lt;span class=&quot;string&quot;&gt;&quot;chinaAdd&quot;&lt;/span&gt;]  &lt;span class=&quot;comment&quot;&gt;# 总确诊&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    areaTree = sourceData[&lt;span class=&quot;string&quot;&gt;&quot;areaTree&quot;&lt;/span&gt;]  &lt;span class=&quot;comment&quot;&gt;# 国家&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# 国家列表,中国&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name = areaTree[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;][&lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;]  &lt;span class=&quot;comment&quot;&gt;# 中国&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    today = areaTree[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;][&lt;span class=&quot;string&quot;&gt;&quot;today&quot;&lt;/span&gt;]  &lt;span class=&quot;comment&quot;&gt;# 今天新增确诊&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    total = areaTree[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;][&lt;span class=&quot;string&quot;&gt;&quot;total&quot;&lt;/span&gt;]  &lt;span class=&quot;comment&quot;&gt;# 今日总情况&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    provinces = areaTree[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;][&lt;span class=&quot;string&quot;&gt;&quot;children&quot;&lt;/span&gt;]  &lt;span class=&quot;comment&quot;&gt;# 34个省份&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# print(name)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# print(today)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# print(total)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# 今日确诊，目前确诊，总确诊，总死亡数，总死亡概率，总康复数，总康复概率&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    daily_data = [name, today[&lt;span class=&quot;string&quot;&gt;&quot;confirm&quot;&lt;/span&gt;], total[&lt;span class=&quot;string&quot;&gt;&quot;nowConfirm&quot;&lt;/span&gt;], total[&lt;span class=&quot;string&quot;&gt;&quot;confirm&quot;&lt;/span&gt;], total[&lt;span class=&quot;string&quot;&gt;&quot;dead&quot;&lt;/span&gt;], total[&lt;span class=&quot;string&quot;&gt;&quot;deadRate&quot;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  total[&lt;span class=&quot;string&quot;&gt;&quot;heal&quot;&lt;/span&gt;], total[&lt;span class=&quot;string&quot;&gt;&quot;healRate&quot;&lt;/span&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    today_details = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; province &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; provinces:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# print(province[&quot;name&quot;])  # 省名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# print(province[&quot;today&quot;])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# print(province[&quot;total&quot;])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        province_name_ = province[&lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# 省所属城市&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; city &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; province[&lt;span class=&quot;string&quot;&gt;&quot;children&quot;&lt;/span&gt;]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            city_name_ = city[&lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            city_today_confirm_ = city[&lt;span class=&quot;string&quot;&gt;&quot;today&quot;&lt;/span&gt;][&lt;span class=&quot;string&quot;&gt;&quot;confirm&quot;&lt;/span&gt;]  &lt;span class=&quot;comment&quot;&gt;# 该城市今日确诊&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            city_total_confirm_ = city[&lt;span class=&quot;string&quot;&gt;&quot;total&quot;&lt;/span&gt;][&lt;span class=&quot;string&quot;&gt;&quot;confirm&quot;&lt;/span&gt;]  &lt;span class=&quot;comment&quot;&gt;# 该城市总确诊&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            city_total_heal_ = city[&lt;span class=&quot;string&quot;&gt;&quot;total&quot;&lt;/span&gt;][&lt;span class=&quot;string&quot;&gt;&quot;heal&quot;&lt;/span&gt;]  &lt;span class=&quot;comment&quot;&gt;# 该城市总康复&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            city_total_heal_rate_ = city[&lt;span class=&quot;string&quot;&gt;&quot;total&quot;&lt;/span&gt;][&lt;span class=&quot;string&quot;&gt;&quot;healRate&quot;&lt;/span&gt;]  &lt;span class=&quot;comment&quot;&gt;# 该城市总康复概率&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            city_total_dead_ = city[&lt;span class=&quot;string&quot;&gt;&quot;total&quot;&lt;/span&gt;][&lt;span class=&quot;string&quot;&gt;&quot;dead&quot;&lt;/span&gt;]  &lt;span class=&quot;comment&quot;&gt;# 该城市总死亡&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            city_total_dead_rate_ = city[&lt;span class=&quot;string&quot;&gt;&quot;total&quot;&lt;/span&gt;][&lt;span class=&quot;string&quot;&gt;&quot;deadRate&quot;&lt;/span&gt;]  &lt;span class=&quot;comment&quot;&gt;# 该城市总死亡概率&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            today_details.append([lastUpdateTime, province_name_, city_name_, city_today_confirm_,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                  city_total_confirm_, city_total_heal_, city_total_heal_rate_,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                  city_total_dead_, city_total_dead_rate_&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                  ])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; today_details, daily_data&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
      <category term="Linux" scheme="http://www.orekiyuta.cn/tags/Linux/"/>
    
      <category term="Selenium" scheme="http://www.orekiyuta.cn/tags/Selenium/"/>
    
      <category term="ChromeDriver" scheme="http://www.orekiyuta.cn/tags/ChromeDriver/"/>
    
      <category term="JavaScript" scheme="http://www.orekiyuta.cn/tags/JavaScript/"/>
    
      <category term="Python" scheme="http://www.orekiyuta.cn/tags/Python/"/>
    
      <category term="MySQL" scheme="http://www.orekiyuta.cn/tags/MySQL/"/>
    
      <category term="Flask" scheme="http://www.orekiyuta.cn/tags/Flask/"/>
    
      <category term="Mariadb" scheme="http://www.orekiyuta.cn/tags/Mariadb/"/>
    
      <category term="RaspberryPi" scheme="http://www.orekiyuta.cn/tags/RaspberryPi/"/>
    
      <category term="Nginx" scheme="http://www.orekiyuta.cn/tags/Nginx/"/>
    
      <category term="Chromium" scheme="http://www.orekiyuta.cn/tags/Chromium/"/>
    
      <category term="BeautifulSoup" scheme="http://www.orekiyuta.cn/tags/BeautifulSoup/"/>
    
      <category term="Echarts" scheme="http://www.orekiyuta.cn/tags/Echarts/"/>
    
      <category term="Gunicorn" scheme="http://www.orekiyuta.cn/tags/Gunicorn/"/>
    
      <category term="Crontab" scheme="http://www.orekiyuta.cn/tags/Crontab/"/>
    
      <category term="Arm" scheme="http://www.orekiyuta.cn/tags/Arm/"/>
    
  </entry>
  
  <entry>
    <title>In Jupyter Notebook</title>
    <link href="http://www.orekiyuta.cn/archives/inJupyterNotebook/"/>
    <id>http://www.orekiyuta.cn/archives/inJupyterNotebook/</id>
    <published>2020-12-30T14:29:11.000Z</published>
    <updated>2020-12-30T15:38:05.120Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Configure"><a href="#Configure" class="headerlink" title="Configure"></a>Configure</h2><ul><li><code>pip install notebook</code></li><li><code>jupyter notebook</code> 启动,工作空间是当前目录</li><li><code>jupyter notebook --generate-config</code> 创建配置文件，指定工作空间的目录</li><li><code>c.NotebookApp.notebook_dir = r&#39;F:\Code&#39;</code>打开配置文件找到这个配置并修改<a id="more"></a><h2 id="QuickStart"><a href="#QuickStart" class="headerlink" title="QuickStart"></a>QuickStart</h2></li><li>进入编辑器后，可以进行文本操作</li><li>点击右侧的 New ,新建文件<br><img src="/images/inJupyterNotebook/Snipaste_2020-12-30_22-49-43.png" alt></li><li>绿色为编辑模式，蓝色为命令模式（按 ESC 切换）</li><li><img src="/images/inJupyterNotebook/Snipaste_2020-12-30_22-53-12.png" alt></li><li><img src="/images/inJupyterNotebook/Snipaste_2020-12-30_22-52-56.png" alt>      </li><li><p>单元格类型有两种，默认是代码类型</p><ul><li>在命令模式按 Y 切换为代码类型</li><li>按 M 切换为 Markdown 文本类型<br><img src="/images/inJupyterNotebook/Snipaste_2020-12-30_22-55-20.png" alt></li></ul></li><li><p>在单元格类输入内容后，ctrl + enter 执行</p><ul><li>代码单元格为执行代码，Markdown 单元格为输出文本样式<br><img src="/images/inJupyterNotebook/Snipaste_2020-12-30_22-56-59.png" alt></li></ul></li><li><p>常用快捷键</p><ul><li>ctrl + enter 执行并光标停留在当前单元格</li><li>shift + enter 执行并在下面创建新单元格，进入命令模式</li><li>alt + enter 执行并在下面创建新单元格，进入编辑模式</li><li>单元格类型切换 Y / M</li><li>在命令模式下，A 在上一行插入单元格</li><li>在命令模式下，B 在下一行插入单元格</li><li>在命令模式下，DD 删除当前单元格</li></ul></li><li><p>使用测试<br><img src="/images/inJupyterNotebook/Snipaste_2020-12-30_23-27-24.png" alt></p></li><li>这里需要注意的是,每个单元格是单独执行的,分单元格写代码的话,要从上到到下按顺序执行各个单元格</li></ul><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li>👉 <a href="https://jupyter.org/" target="_blank" rel="noopener">jupyter</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Configure&quot;&gt;&lt;a href=&quot;#Configure&quot; class=&quot;headerlink&quot; title=&quot;Configure&quot;&gt;&lt;/a&gt;Configure&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pip install notebook&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jupyter notebook&lt;/code&gt; 启动,工作空间是当前目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jupyter notebook --generate-config&lt;/code&gt; 创建配置文件，指定工作空间的目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;c.NotebookApp.notebook_dir = r&amp;#39;F:\Code&amp;#39;&lt;/code&gt;打开配置文件找到这个配置并修改
    
    </summary>
    
    
    
      <category term="Jupyter" scheme="http://www.orekiyuta.cn/tags/Jupyter/"/>
    
  </entry>
  
</feed>
